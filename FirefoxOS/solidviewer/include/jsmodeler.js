/* JSModeler 0.24 - http://www.github.com/kovacsv/JSModeler */ 'use strict';var JSM={mainVersion:0,subVersion:24,Eps:1E-8,Inf:9999999999,RadDeg:57.29577951308232,DegRad:0.017453292519943,IsZero:function(a){return Math.abs(a)<JSM.Eps},IsPositive:function(a){return a>JSM.Eps},IsNegative:function(a){return a<-JSM.Eps},IsLower:function(a,b){return b-a>JSM.Eps},IsGreater:function(a,b){return a-b>JSM.Eps},IsEqual:function(a,b){return Math.abs(b-a)<JSM.Eps},IsEqualWithEps:function(a,b,c){return Math.abs(b-a)<c},IsLowerOrEqual:function(a,b){return JSM.IsLower(a,b)||
JSM.IsEqual(a,b)},IsGreaterOrEqual:function(a,b){return JSM.IsGreater(a,b)||JSM.IsEqual(a,b)},Minimum:function(a,b){return JSM.IsLower(a,b)?a:b},Maximum:function(a,b){return JSM.IsGreater(a,b)?a:b},ArcSin:function(a){return JSM.IsGreaterOrEqual(a,1)?Math.PI/2:JSM.IsLowerOrEqual(a,-1)?-Math.PI/2:Math.asin(a)},ArcCos:function(a){return JSM.IsGreaterOrEqual(a,1)?0:JSM.IsLowerOrEqual(a,-1)?Math.PI:Math.acos(a)},RandomInt:function(a,b){return Math.floor(Math.random()*(b-a+1)+a)},SeededRandomInt:function(a,
b,c){return Math.floor((9301*c+49297)%233280/233280*(b-a+1)+a)},ValueOrDefault:function(a,b){return void 0===a||null===a?b:a},Assert:function(a,b){if(!a){var c="Assertion failed.";void 0!==b&&null!==b&&(c+=" "+b);alert(c)}},Timer:function(){this.stop=this.start=0}};JSM.Timer.prototype={Start:function(){this.start=(new Date).getTime()},Stop:function(){this.end=(new Date).getTime()},Result:function(){return this.end-this.start}};JSM.MatrixDeterminant2x2=function(a,b,c,d){return a*d-b*c};
JSM.MatrixDeterminant3x3=function(a,b,c,d,e,f,g,h,k){var l=JSM.MatrixDeterminant2x2(e,f,h,k);f=JSM.MatrixDeterminant2x2(d,f,g,k);d=JSM.MatrixDeterminant2x2(d,e,g,h);return a*l-b*f+c*d};JSM.MatrixDeterminant4x4=function(a,b,c,d,e,f,g,h,k,l,m,n,p,r,q,s){var v=JSM.MatrixDeterminant3x3(f,g,h,l,m,n,r,q,s),u=JSM.MatrixDeterminant3x3(e,g,h,k,m,n,p,q,s);h=JSM.MatrixDeterminant3x3(e,f,h,k,l,n,p,r,s);e=JSM.MatrixDeterminant3x3(e,f,g,k,l,m,p,r,q);return v*a-u*b+h*c-e*d};
JSM.VectorMatrixMultiply4x4=function(a,b){var c=[],d=a[0],e=a[1],f=a[2],g=a[3],h=b[1],k=b[2],l=b[3],m=b[5],n=b[6],p=b[7],r=b[9],q=b[10],s=b[11],v=b[13],u=b[14],t=b[15];c[0]=d*b[0]+e*b[4]+f*b[8]+g*b[12];c[1]=d*h+e*m+f*r+g*v;c[2]=d*k+e*n+f*q+g*u;c[3]=d*l+e*p+f*s+g*t;return c};
JSM.MatrixMultiply4x4=function(a,b){var c=[],d=a[0],e=a[1],f=a[2],g=a[3],h=a[4],k=a[5],l=a[6],m=a[7],n=a[8],p=a[9],r=a[10],q=a[11],s=a[12],v=a[13],u=a[14],t=a[15],z=b[0],w=b[1],C=b[2],x=b[3],D=b[4],y=b[5],H=b[6],E=b[7],F=b[8],I=b[9],L=b[10],B=b[11],N=b[12],M=b[13],J=b[14],O=b[15];c[0]=d*z+e*D+f*F+g*N;c[1]=d*w+e*y+f*I+g*M;c[2]=d*C+e*H+f*L+g*J;c[3]=d*x+e*E+f*B+g*O;c[4]=h*z+k*D+l*F+m*N;c[5]=h*w+k*y+l*I+m*M;c[6]=h*C+k*H+l*L+m*J;c[7]=h*x+k*E+l*B+m*O;c[8]=n*z+p*D+r*F+q*N;c[9]=n*w+p*y+r*I+q*M;c[10]=n*C+
p*H+r*L+q*J;c[11]=n*x+p*E+r*B+q*O;c[12]=s*z+v*D+u*F+t*N;c[13]=s*w+v*y+u*I+t*M;c[14]=s*C+v*H+u*L+t*J;c[15]=s*x+v*E+u*B+t*O;return c};JSM.Coord2D=function(a,b){this.x=JSM.ValueOrDefault(a,0);this.y=JSM.ValueOrDefault(b,0)};JSM.Coord2D.prototype={Set:function(a,b){this.x=JSM.ValueOrDefault(a,0);this.y=JSM.ValueOrDefault(b,0)},ToString:function(){return"("+this.x+", "+this.y+")"},Clone:function(){return new JSM.Coord2D(this.x,this.y)}};
JSM.PolarCoord=function(a,b){this.radius=JSM.ValueOrDefault(a,1);this.angle=JSM.ValueOrDefault(b,0)};JSM.PolarCoord.prototype={Set:function(a,b){this.radius=JSM.ValueOrDefault(a,1);this.angle=JSM.ValueOrDefault(b,0)},ToString:function(){return"("+this.radius+", "+this.angle+")"},Clone:function(){return new JSM.PolarCoord(this.radius,this.angle)}};JSM.Coord=function(a,b,c){this.x=JSM.ValueOrDefault(a,0);this.y=JSM.ValueOrDefault(b,0);this.z=JSM.ValueOrDefault(c,0)};
JSM.Coord.prototype={Set:function(a,b,c){this.x=JSM.ValueOrDefault(a,0);this.y=JSM.ValueOrDefault(b,0);this.z=JSM.ValueOrDefault(c,0)},ToString:function(){return"("+this.x+", "+this.y+", "+this.z+")"},Clone:function(){return new JSM.Coord(this.x,this.y,this.z)}};JSM.SphericalCoord=function(a,b,c){this.radius=JSM.ValueOrDefault(a,0);this.theta=JSM.ValueOrDefault(b,0);this.phi=JSM.ValueOrDefault(c,0)};
JSM.SphericalCoord.prototype={Set:function(a,b,c){this.radius=JSM.ValueOrDefault(a,0);this.theta=JSM.ValueOrDefault(b,0);this.phi=JSM.ValueOrDefault(c,0)},ToString:function(){return"("+this.radius+", "+this.theta+", "+this.phi+")"},Clone:function(){return new JSM.SphericalCoord(this.radius,this.theta,this.phi)}};JSM.Vector2D=JSM.Coord2D;JSM.Vector=JSM.Coord;JSM.CoordIsEqual2D=function(a,b){return JSM.IsEqual(a.x,b.x)&&JSM.IsEqual(a.y,b.y)};
JSM.CoordIsEqual2DWithEps=function(a,b,c){return JSM.IsEqualWithEps(a.x,b.x,c)&&JSM.IsEqualWithEps(a.y,b.y,c)};JSM.CoordDistance2D=function(a,b){var c=a.x,d=a.y,e=b.x,f=b.y;return Math.sqrt((e-c)*(e-c)+(f-d)*(f-d))};JSM.MidCoord2D=function(a,b){return new JSM.Coord2D((a.x+b.x)/2,(a.y+b.y)/2)};JSM.CoordIsEqual=function(a,b){return JSM.IsEqual(a.x,b.x)&&JSM.IsEqual(a.y,b.y)&&JSM.IsEqual(a.z,b.z)};
JSM.CoordIsEqualWithEps=function(a,b,c){return JSM.IsEqualWithEps(a.x,b.x,c)&&JSM.IsEqualWithEps(a.y,b.y,c)&&JSM.IsEqualWithEps(a.z,b.z,c)};JSM.SphericalCoordIsEqual=function(a,b){return JSM.IsEqual(a.radius,b.radius)&&JSM.IsEqual(a.phi,b.phi)&&JSM.IsEqual(a.theta,b.theta)};JSM.CoordDistance=function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;return Math.sqrt((f-c)*(f-c)+(g-d)*(g-d)+(h-e)*(h-e))};
JSM.CoordSignedDistance=function(a,b,c){var d=JSM.CoordSub(b,a);a=JSM.CoordDistance(a,b);c=JSM.GetVectorsAngle(d,c);JSM.IsEqual(c,Math.PI)&&(a=-a);return a};JSM.MidCoord=function(a,b){return new JSM.Coord((a.x+b.x)/2,(a.y+b.y)/2,(a.z+b.z)/2)};JSM.VectorMultiply=function(a,b){var c=new JSM.Vector;c.x=a.x*b;c.y=a.y*b;c.z=a.z*b;return c};JSM.VectorDot=function(a,b){return a.x*b.x+a.y*b.y+a.z*b.z};
JSM.VectorCross=function(a,b){var c=new JSM.Vector;c.x=a.y*b.z-a.z*b.y;c.y=a.z*b.x-a.x*b.z;c.z=a.x*b.y-a.y*b.x;return c};JSM.VectorLength=function(a){var b=a.x,c=a.y;a=a.z;return Math.sqrt(b*b+c*c+a*a)};JSM.VectorNormalize=function(a){var b=JSM.VectorLength(a),c=new JSM.Coord(0,0,0);JSM.IsGreater(b,0)&&(c=JSM.VectorMultiply(a,1/b));return c};JSM.VectorSetLength=function(a,b){var c=b/JSM.VectorLength(a);return JSM.VectorMultiply(a,c)};
JSM.GetVectorsAngle=function(a,b){var c=JSM.VectorNormalize(a),d=JSM.VectorNormalize(b);if(JSM.CoordIsEqual(c,d))return 0;c=JSM.VectorDot(c,d);return JSM.ArcCos(c)};JSM.VectorsAreCollinear=function(a,b){var c=JSM.GetVectorsAngle(a,b);return JSM.IsEqual(c,0)||JSM.IsEqual(c,Math.PI)};JSM.CoordAdd=function(a,b){return new JSM.Vector(a.x+b.x,a.y+b.y,a.z+b.z)};JSM.CoordSub=function(a,b){return new JSM.Vector(a.x-b.x,a.y-b.y,a.z-b.z)};
JSM.CoordOffset=function(a,b,c){b=JSM.VectorNormalize(b);var d=new JSM.Coord;d.x=a.x+b.x*c;d.y=a.y+b.y*c;d.z=a.z+b.z*c;return d};
JSM.CoordRotate=function(a,b,c,d){var e=JSM.CoordSub(a,d),f=JSM.VectorNormalize(b);b=f.x;a=f.y;var f=f.z,g=e.x,h=e.y,e=e.z,k=new JSM.Coord;k.x=-b*(-b*g-a*h-f*e)*(1-Math.cos(c))+g*Math.cos(c)+(-f*h+a*e)*Math.sin(c);k.y=-a*(-b*g-a*h-f*e)*(1-Math.cos(c))+h*Math.cos(c)+(f*g-b*e)*Math.sin(c);k.z=-f*(-b*g-a*h-f*e)*(1-Math.cos(c))+e*Math.cos(c)+(-a*g+b*h)*Math.sin(c);return k=JSM.CoordAdd(k,d)};
JSM.CoordTurnType2D=function(a,b,c){a=JSM.MatrixDeterminant3x3(a.x,a.y,1,b.x,b.y,1,c.x,c.y,1);return JSM.IsPositive(a)?"CounterClockwise":JSM.IsNegative(a)?"Clockwise":"Collinear"};JSM.PolarToCartesian=function(a,b){var c=new JSM.Coord2D;c.x=a*Math.cos(b);c.y=a*Math.sin(b);return c};JSM.GetPolarArcLengthFromAngle=function(a,b){return b*a};JSM.GetPolarAngleFromArcLength=function(a,b){return JSM.IsEqual(a,0)?0:b/a};
JSM.CoordTurnType=function(a,b,c,d){var e=new JSM.Coord(0,0,0);a=JSM.GetCoord2DFromCoord(a,e,d);b=JSM.GetCoord2DFromCoord(b,e,d);c=JSM.GetCoord2DFromCoord(c,e,d);c=JSM.CoordTurnType2D(a,b,c);e=new JSM.Vector(0,0,1);d=JSM.GetVectorsAngle(d,e);JSM.IsEqual(d,Math.PI)&&("CounterClockwise"===c?c="Clockwise":"Clockwise"===c&&(c="CounterClockwise"));return c};
JSM.CalculateCentroid=function(a){var b=a.length,c=new JSM.Coord(0,0,0);if(1<=b){var d;for(d=0;d<b;d++)c=JSM.CoordAdd(c,a[d]);c=JSM.VectorMultiply(c,1/b)}return c};JSM.CalculateNormal=function(a){var b=a.length,c=new JSM.Vector(0,0,0);if(3<=b){var d,e,f;for(d=0;d<b;d++)e=d%b,f=(d+1)%b,e=a[e],f=a[f],c.x+=(e.y-f.y)*(e.z+f.z),c.y+=(e.z-f.z)*(e.x+f.x),c.z+=(e.x-f.x)*(e.y+f.y)}return JSM.VectorNormalize(c)};
JSM.SphericalToCartesian=function(a,b,c){var d=new JSM.Coord;d.x=a*Math.sin(b)*Math.cos(c);d.y=a*Math.sin(b)*Math.sin(c);d.z=a*Math.cos(b);return d};JSM.CartesianToSpherical=function(a,b,c){var d=new JSM.SphericalCoord;d.radius=Math.sqrt(a*a+b*b+c*c);if(JSM.IsZero(d.radius))return d;d.theta=Math.acos(c/d.radius);d.phi=Math.atan2(b,a);return d};JSM.SphericalToCartesianWithOrigo=function(a,b){var c=JSM.SphericalToCartesian(a.radius,a.theta,a.phi);return JSM.CoordAdd(c,b)};
JSM.CartesianToSphericalWithOrigo=function(a,b){var c=JSM.CoordSub(a,b);return JSM.CartesianToSpherical(c.x,c.y,c.z)};JSM.MoveCoordOnSphere=function(a,b,c,d){a=JSM.CartesianToSphericalWithOrigo(a,b);a.theta+=c;a.phi+=d;return JSM.SphericalToCartesianWithOrigo(a,b)};JSM.CylindricalToCartesian=function(a,b,c){var d=new JSM.Coord;d.x=a*Math.cos(c);d.y=a*Math.sin(c);d.z=b;return d};
JSM.GetCoord2DFromCoord=function(a,b,c){var d=new JSM.Vector(0,0,1),e=JSM.VectorCross(c,d);c=JSM.GetVectorsAngle(c,d);a=JSM.CoordRotate(a,e,c,b);return new JSM.Coord2D(a.x,a.y)};JSM.GetArcLength=function(a,b,c){return JSM.GetVectorsAngle(a,b)*c};JSM.GetVectorsFullAngle=function(a,b,c){var d=JSM.GetVectorsAngle(a,b),e=new JSM.Coord(0,0,0);"Clockwise"==JSM.CoordTurnType(b,e,a,c)&&(d=2*Math.PI-d);return d};JSM.GetFullArcLength=function(a,b,c,d){return JSM.GetVectorsFullAngle(a,b,d)*c};
JSM.CoordSystem=function(a,b,c,d){this.origo=JSM.ValueOrDefault(a,new JSM.Coord);this.e1=JSM.ValueOrDefault(b,new JSM.Coord);this.e2=JSM.ValueOrDefault(c,new JSM.Coord);this.e3=JSM.ValueOrDefault(d,new JSM.Coord)};
JSM.CoordSystem.prototype={Set:function(a,b,c,d){this.origo=JSM.ValueOrDefault(a,new JSM.Coord);this.e1=JSM.ValueOrDefault(b,new JSM.Coord);this.e2=JSM.ValueOrDefault(c,new JSM.Coord);this.e3=JSM.ValueOrDefault(d,new JSM.Coord)},Clone:function(){return new JSM.CoordSystem(this.origo.Clone(),this.e1.Clone(),this.e2.Clone(),this.e3.Clone())}};JSM.CoordSystemToDirectionVectors=function(a){return new JSM.CoordSystem(a.origo,JSM.CoordSub(a.e1,a.origo),JSM.CoordSub(a.e2,a.origo),JSM.CoordSub(a.e3,a.origo))};
JSM.CoordSystemToAbsoluteCoords=function(a){return new JSM.CoordSystem(a.origo,JSM.CoordAdd(a.e1,a.origo),JSM.CoordAdd(a.e2,a.origo),JSM.CoordAdd(a.e3,a.origo))};
JSM.ChangeCoordSystem=function(a,b,c){var d=JSM.VectorNormalize(b.e1),e=JSM.VectorNormalize(b.e2),f=JSM.VectorNormalize(b.e3),g=JSM.VectorNormalize(c.e1),h=JSM.VectorNormalize(c.e2),k=JSM.VectorNormalize(c.e3);a=JSM.CoordSub(a,b.origo);b=new JSM.Coord;b.x=JSM.VectorDot(g,d)*a.x+JSM.VectorDot(g,e)*a.y+JSM.VectorDot(g,f)*a.z;b.y=JSM.VectorDot(h,d)*a.x+JSM.VectorDot(h,e)*a.y+JSM.VectorDot(h,f)*a.z;b.z=JSM.VectorDot(k,d)*a.x+JSM.VectorDot(k,e)*a.y+JSM.VectorDot(k,f)*a.z;return b=JSM.CoordAdd(b,c.origo)};
JSM.Sector2D=function(a,b){this.beg=JSM.ValueOrDefault(a,new JSM.Coord2D);this.end=JSM.ValueOrDefault(b,new JSM.Coord2D)};JSM.Sector2D.prototype={Set:function(a,b){this.beg=JSM.ValueOrDefault(a,new JSM.Coord2D);this.end=JSM.ValueOrDefault(b,new JSM.Coord2D)},Clone:function(){return new JSM.Sector2D(this.beg.Clone(),this.end.Clone())}};JSM.Sector=function(a,b){this.beg=JSM.ValueOrDefault(a,new JSM.Coord);this.end=JSM.ValueOrDefault(b,new JSM.Coord)};
JSM.Sector.prototype={Set:function(a,b){this.beg=JSM.ValueOrDefault(a,new JSM.Coord);this.end=JSM.ValueOrDefault(b,new JSM.Coord)},Clone:function(){return new JSM.Sector(this.beg.Clone(),this.end.Clone())}};
JSM.CoordSectorPosition2D=function(a,b){var c=a.x,d=a.y,e=b.beg.x,f=b.beg.y,g=b.end.x,h=b.end.y,k=Math.pow(g-e,2)+Math.pow(h-f,2);if(JSM.IsZero(k))return JSM.CoordIsEqual2D(a,b.beg)?"CoordOnSectorEndCoord":"CoordOutsideOfSector";k=((c-e)*(g-e)+(d-f)*(h-f))/k;if(JSM.IsLower(k,0)||JSM.IsGreater(k,1))return"CoordOutsideOfSector";f+=k*(h-f);return!JSM.IsEqual(e+k*(g-e),c)||!JSM.IsEqual(f,d)?"CoordOutsideOfSector":JSM.IsEqual(k,0)||JSM.IsEqual(k,1)?"CoordOnSectorEndCoord":"CoordInsideOfSector"};
JSM.SectorSectorPosition2D=function(a,b,c){var d=a.beg.x,e=a.beg.y,f=a.end.x,g=a.end.y,h=b.beg.x,k=b.beg.y,l=b.end.x,m=b.end.y,n=(l-h)*(e-k)-(m-k)*(d-h),p=(f-d)*(e-k)-(g-e)*(d-h);if(JSM.IsZero(n)&&JSM.IsZero(p))return c=JSM.CoordSectorPosition2D(a.beg,b),d=JSM.CoordSectorPosition2D(a.end,b),e=JSM.CoordSectorPosition2D(b.beg,a),a=JSM.CoordSectorPosition2D(b.end,a),"CoordInsideOfSector"===c||("CoordInsideOfSector"===d||"CoordInsideOfSector"===e||"CoordInsideOfSector"===a)||"CoordOnSectorEndCoord"===
c&&"CoordOnSectorEndCoord"===d&&"CoordOnSectorEndCoord"===e&&"CoordOnSectorEndCoord"===a?"SectorsIntersectsCoincident":"CoordOnSectorEndCoord"===c||"CoordOnSectorEndCoord"===d||"CoordOnSectorEndCoord"===e||"CoordOnSectorEndCoord"===a?"SectorsIntersectsEndPoint":"SectorsDontIntersects";a=(m-k)*(f-d)-(l-h)*(g-e);if(JSM.IsZero(a))return"SectorsDontIntersects";n/=a;p/=a;if(JSM.IsLower(n,0)||JSM.IsGreater(n,1)||JSM.IsLower(p,0)||JSM.IsGreater(p,1))return"SectorsDontIntersects";void 0!==c&&(c.x=d+n*(f-
d),c.y=e+n*(g-e));return JSM.IsEqual(n,0)||JSM.IsEqual(n,1)||JSM.IsEqual(p,0)||JSM.IsEqual(p,1)?"SectorsIntersectsEndPoint":"SectorsIntersectsOnePoint"};JSM.Line2D=function(a,b){this.start=JSM.ValueOrDefault(a,new JSM.Coord2D);this.direction=JSM.ValueOrDefault(b,new JSM.Vector2D)};JSM.Line2D.prototype={Set:function(a,b){this.start=JSM.ValueOrDefault(a,new JSM.Coord2D);this.direction=JSM.ValueOrDefault(b,new JSM.Vector2D)},Clone:function(){return new JSM.Line2D(this.start.Clone(),this.direction.Clone())}};
JSM.Line=function(a,b){this.start=JSM.ValueOrDefault(a,new JSM.Coord);this.direction=JSM.ValueOrDefault(b,new JSM.Vector)};JSM.Line.prototype={Set:function(a,b){this.start=JSM.ValueOrDefault(a,new JSM.Coord);this.direction=JSM.ValueOrDefault(b,new JSM.Vector)},Clone:function(){return new JSM.Line(this.start.Clone(),this.direction.Clone())}};
JSM.CoordLinePosition2D=function(a,b){var c=b.start,d=b.direction,c=d.x*(a.y-c.y)-d.y*(a.x-c.x);return JSM.IsPositive(c)?"CoordAtLineLeft":JSM.IsNegative(c)?"CoordAtLineRight":"CoordOnLine"};
JSM.CoordLinePosition=function(a,b,c){var d=a.x,e=a.y,f=a.z,g=b.start;b=b.direction;var h=g.x,k=g.y,l=g.z,m=g.x+b.x,n=g.y+b.y,p=g.z+b.z,r=(m-h)*(m-h)+(n-k)*(n-k)+(p-l)*(p-l);if(JSM.IsZero(r))return void 0!==c&&c.Set(g.x,g.y,g.z),JSM.CoordIsEqual(g,a)?"CoordOnLine":"CoordOutsideOfLine";d=JSM.CoordAdd(g,JSM.VectorMultiply(b,((m-h)*(d-h)+(n-k)*(e-k)+(p-l)*(f-l))/r));void 0!==c&&c.Set(d.x,d.y,d.z);a=JSM.CoordDistance(a,d);return JSM.IsZero(a)?"CoordOnLine":"CoordOutsideOfLine"};
JSM.ProjectCoordToLine=function(a,b){var c=new JSM.Coord,d=a.x,e=a.y,f=a.z,g=b.start,h=b.direction,k=g.x,l=g.y,m=g.z,n=g.x+h.x,p=g.y+h.y,r=g.z+h.z,q=(n-k)*(n-k)+(p-l)*(p-l)+(r-m)*(r-m);if(JSM.IsZero(q))return c.Set(g.x,g.y,g.z),c;d=JSM.CoordAdd(g,JSM.VectorMultiply(h,((n-k)*(d-k)+(p-l)*(e-l)+(r-m)*(f-m))/q));c.Set(d.x,d.y,d.z);return c};
JSM.LineLineClosestPoint=function(a,b,c,d){function e(a,b,c,d,e){return(a[b].x-a[c].x)*(a[d].x-a[e].x)+(a[b].y-a[c].y)*(a[d].y-a[e].y)+(a[b].z-a[c].z)*(a[d].z-a[e].z)}var f=JSM.VectorNormalize(a.direction),g=a.start,f=JSM.CoordAdd(g,f);a=JSM.VectorNormalize(b.direction);b=b.start;var h=JSM.CoordAdd(b,a),k=[g,f,b,h],l=e(k,1,0,1,0),m=e(k,0,2,1,0),h=e(k,0,2,3,2),n=e(k,3,2,1,0),k=e(k,3,2,3,2),l=l*k-n*n;if(JSM.IsEqual(l,0))return!1;m=(h*n-m*k)/l;h=(h+m*n)/k;void 0!==c&&(f=JSM.VectorNormalize(JSM.CoordSub(f,
g)),g=JSM.CoordAdd(g,JSM.VectorMultiply(f,m)),c.Set(g.x,g.y,g.z));void 0!==d&&(c=JSM.CoordAdd(b,JSM.VectorMultiply(a,h)),d.Set(c.x,c.y,c.z));return!0};JSM.LineLinePosition=function(a,b,c){var d=new JSM.Coord,e=new JSM.Coord;return!JSM.LineLineClosestPoint(a,b,d,e)?"LinesIntersectsCoincident":JSM.CoordIsEqual(d,e)?(void 0!==c&&c.Set(d.x,d.y,d.z),"LinesIntersectsOnePoint"):"LinesDontIntersects"};JSM.Transformation=function(){this.matrix=[1,0,0,0,0,1,0,0,0,0,1,0]};
JSM.Transformation.prototype={Append:function(a){this.matrix=[a.matrix[0]*this.matrix[0]+a.matrix[1]*this.matrix[4]+a.matrix[2]*this.matrix[8],a.matrix[0]*this.matrix[1]+a.matrix[1]*this.matrix[5]+a.matrix[2]*this.matrix[9],a.matrix[0]*this.matrix[2]+a.matrix[1]*this.matrix[6]+a.matrix[2]*this.matrix[10],a.matrix[0]*this.matrix[3]+a.matrix[1]*this.matrix[7]+a.matrix[2]*this.matrix[11]+a.matrix[3],a.matrix[4]*this.matrix[0]+a.matrix[5]*this.matrix[4]+a.matrix[6]*this.matrix[8],a.matrix[4]*this.matrix[1]+
a.matrix[5]*this.matrix[5]+a.matrix[6]*this.matrix[9],a.matrix[4]*this.matrix[2]+a.matrix[5]*this.matrix[6]+a.matrix[6]*this.matrix[10],a.matrix[4]*this.matrix[3]+a.matrix[5]*this.matrix[7]+a.matrix[6]*this.matrix[11]+a.matrix[7],a.matrix[8]*this.matrix[0]+a.matrix[9]*this.matrix[4]+a.matrix[10]*this.matrix[8],a.matrix[8]*this.matrix[1]+a.matrix[9]*this.matrix[5]+a.matrix[10]*this.matrix[9],a.matrix[8]*this.matrix[2]+a.matrix[9]*this.matrix[6]+a.matrix[10]*this.matrix[10],a.matrix[8]*this.matrix[3]+
a.matrix[9]*this.matrix[7]+a.matrix[10]*this.matrix[11]+a.matrix[11]]},Apply:function(a){var b=new JSM.Coord;b.x=this.matrix[0]*a.x+this.matrix[1]*a.y+this.matrix[2]*a.z+this.matrix[3];b.y=this.matrix[4]*a.x+this.matrix[5]*a.y+this.matrix[6]*a.z+this.matrix[7];b.z=this.matrix[8]*a.x+this.matrix[9]*a.y+this.matrix[10]*a.z+this.matrix[11];return b},Clone:function(){var a=new JSM.Transformation;a.matrix=[this.matrix[0],this.matrix[1],this.matrix[2],this.matrix[3],this.matrix[4],this.matrix[5],this.matrix[6],
this.matrix[7],this.matrix[8],this.matrix[9],this.matrix[10],this.matrix[11]];return a}};JSM.IdentityTransformation=function(){var a=new JSM.Transformation;a.matrix=[1,0,0,0,0,1,0,0,0,0,1,0];return a};JSM.TranslationTransformation=function(a){var b=new JSM.Transformation;b.matrix=[1,0,0,a.x,0,1,0,a.y,0,0,1,a.z];return b};JSM.OffsetTransformation=function(a,b){var c=JSM.VectorNormalize(a),c=JSM.VectorMultiply(c,b);return JSM.TranslationTransformation(c)};
JSM.RotationTransformation=function(a,b,c){var d=new JSM.Transformation,e=JSM.VectorNormalize(a);a=e.x;var f=e.y,e=e.z,g=a*a,h=f*f,k=e*e,l=Math.sin(b);b=Math.cos(b);if(void 0===c)d.matrix=[g+(h+k)*b,a*f*(1-b)-e*l,a*e*(1-b)+f*l,0,a*f*(1-b)+e*l,h+(g+k)*b,f*e*(1-b)-a*l,0,a*e*(1-b)-f*l,f*e*(1-b)+a*l,k+(g+h)*b,0];else{var m=c.x,n=c.y;c=c.z;d.matrix=[g+(h+k)*b,a*f*(1-b)-e*l,a*e*(1-b)+f*l,(m*(h+k)-a*(n*f+c*e))*(1-b)+(n*e-c*f)*l,a*f*(1-b)+e*l,h+(g+k)*b,f*e*(1-b)-a*l,(n*(g+k)-f*(m*a+c*e))*(1-b)+(c*a-m*e)*
l,a*e*(1-b)-f*l,f*e*(1-b)+a*l,k+(g+h)*b,(c*(g+h)-e*(m*a+n*f))*(1-b)+(m*f-n*a)*l]}return d};JSM.RotationXTransformation=function(a,b){var c=new JSM.Transformation;if(void 0===b){var d=Math.sin(a),e=Math.cos(a);c.matrix=[1,0,0,0,0,e,-d,0,0,d,e,0]}else c.Append(JSM.TranslationTransformation(new JSM.Vector(-b.x,-b.y,-b.z))),c.Append(JSM.RotationXTransformation(a)),c.Append(JSM.TranslationTransformation(new JSM.Vector(b.x,b.y,b.z)));return c};
JSM.RotationYTransformation=function(a,b){var c=new JSM.Transformation;if(void 0===b){var d=Math.sin(a),e=Math.cos(a);c.matrix=[e,0,d,0,0,1,0,0,-d,0,e,0]}else c.Append(JSM.TranslationTransformation(new JSM.Vector(-b.x,-b.y,-b.z))),c.Append(JSM.RotationYTransformation(a)),c.Append(JSM.TranslationTransformation(new JSM.Vector(b.x,b.y,b.z)));return c};
JSM.RotationZTransformation=function(a,b){var c=new JSM.Transformation;if(void 0===b){var d=Math.sin(a),e=Math.cos(a);c.matrix=[e,-d,0,0,d,e,0,0,0,0,1,0]}else c.Append(JSM.TranslationTransformation(new JSM.Vector(-b.x,-b.y,-b.z))),c.Append(JSM.RotationZTransformation(a)),c.Append(JSM.TranslationTransformation(new JSM.Vector(b.x,b.y,b.z)));return c};
JSM.RotationXYZTransformation=function(a,b,c,d){var e=new JSM.Transformation;e.Append(JSM.RotationXTransformation(a,d));e.Append(JSM.RotationYTransformation(b,d));e.Append(JSM.RotationZTransformation(c,d));return e};JSM.SystemConversionTransformation=function(a,b,c,d,e,f){var g=new JSM.Transformation;g.matrix=[JSM.VectorDot(d,a),JSM.VectorDot(d,b),JSM.VectorDot(d,c),0,JSM.VectorDot(e,a),JSM.VectorDot(e,b),JSM.VectorDot(e,c),0,JSM.VectorDot(f,a),JSM.VectorDot(f,b),JSM.VectorDot(f,c),0];return g};
JSM.Plane=function(a,b,c,d){this.a=JSM.ValueOrDefault(a,0);this.b=JSM.ValueOrDefault(b,0);this.c=JSM.ValueOrDefault(c,0);this.d=JSM.ValueOrDefault(d,0)};JSM.Plane.prototype={Set:function(a,b,c,d){this.a=JSM.ValueOrDefault(a,0);this.b=JSM.ValueOrDefault(b,0);this.c=JSM.ValueOrDefault(c,0);this.d=JSM.ValueOrDefault(d,0)},GetNormal:function(){return new JSM.Vector(this.a,this.b,this.c)},Clone:function(){return new JSM.Plane(this.a,this.b,this.c,this.d)}};
JSM.GetPlaneFromCoordAndDirection=function(a,b){var c=new JSM.Plane,d=JSM.VectorNormalize(b),e=d.x,f=d.y,d=d.z;c.Set(e,f,d,-(e*a.x+f*a.y+d*a.z));return c};JSM.GetPlaneFromThreeCoords=function(a,b,c){var d=new JSM.Plane,e=(b.y-a.y)*(c.z-a.z)-(c.y-a.y)*(b.z-a.z),f=(b.z-a.z)*(c.x-a.x)-(c.z-a.z)*(b.x-a.x);b=(b.x-a.x)*(c.y-a.y)-(c.x-a.x)*(b.y-a.y);d.Set(e,f,b,-(e*a.x+f*a.y+b*a.z));return d};
JSM.CoordPlanePosition=function(a,b){var c=b.a*a.x+b.b*a.y+b.c*a.z+b.d;return JSM.IsPositive(c)?"CoordInFrontOfPlane":JSM.IsNegative(c)?"CoordAtBackOfPlane":"CoordOnPlane"};
JSM.LinePlanePosition=function(a,b,c){var d=JSM.VectorNormalize(a.direction),e=a.start.x,f=a.start.y,g=a.start.z,h=b.a,k=b.b,l=b.c;b=b.d;var m=h*(e-(a.start.x+d.x))+k*(f-(a.start.y+d.y))+l*(g-(a.start.z+d.z));if(JSM.IsZero(m))return"LineParallelToPlane";void 0!==c&&(a=JSM.CoordAdd(a.start,JSM.VectorMultiply(d,(h*e+k*f+l*g+b)/m)),c.Set(a.x,a.y,a.z));return"LineIntersectsPlane"};
JSM.LinePlaneIntersection=function(a,b){var c=JSM.VectorNormalize(a.direction),d=a.start.x,e=a.start.y,f=a.start.z,g=a.start.x+c.x,h=a.start.y+c.y,k=a.start.z+c.z,l=b.a,m=b.b,n=b.c,p=b.d,r=new JSM.Coord(0,0,0),g=l*(d-g)+m*(e-h)+n*(f-k);return JSM.IsZero(g)?r:r=JSM.CoordAdd(a.start,JSM.VectorMultiply(c,(l*d+m*e+n*f+p)/g))};JSM.CoordPlaneSignedDistance=function(a,b){var c=b.a,d=b.b,e=b.c;return(c*a.x+d*a.y+e*a.z+b.d)/Math.sqrt(c*c+d*d+e*e)};
JSM.CoordPlaneDistance=function(a,b){return Math.abs(JSM.CoordPlaneSignedDistance(a,b))};JSM.CoordPlaneSignedDirectionalDistance=function(a,b,c){var d=JSM.VectorNormalize(b);b=a.x;var e=a.y,f=a.z,g=c.a,h=c.b,k=c.c;c=c.d;var l=g*(b-(a.x+d.x))+h*(e-(a.y+d.y))+k*(f-(a.z+d.z));if(JSM.IsZero(l))return 0;d=JSM.CoordAdd(a,JSM.VectorMultiply(d,(g*b+h*e+k*f+c)/l));a=JSM.CoordDistance(a,d);JSM.IsNegative(g*b+h*e+k*f+c)&&(a=-a);return a};
JSM.CoordPlaneDirectionalDistance=function(a,b,c){return Math.abs(JSM.CoordPlaneSignedDirectionalDistance(a,b,c))};JSM.ProjectCoordToPlane=function(a,b){var c=a.x,d=a.y,e=a.z,f=b.a,g=b.b,h=b.c,k=b.d,l=JSM.CoordPlaneDistance(a,b);JSM.IsGreater(f*c+g*d+h*e+k,0)&&(l=-l);c=JSM.VectorNormalize(new JSM.Coord(f,g,h));return JSM.CoordOffset(a,c,l)};
JSM.CalculateModelViewMatrix=function(a,b,c){b=JSM.VectorNormalize(JSM.CoordSub(b,a));c=JSM.VectorNormalize(JSM.VectorCross(b,c));var d=JSM.VectorNormalize(JSM.VectorCross(c,b)),e=[];e[0]=c.x;e[1]=d.x;e[2]=-b.x;e[3]=0;e[4]=c.y;e[5]=d.y;e[6]=-b.y;e[7]=0;e[8]=c.z;e[9]=d.z;e[10]=-b.z;e[11]=0;e[12]=-(c.x*a.x+c.y*a.y+c.z*a.z);e[13]=-(d.x*a.x+d.y*a.y+d.z*a.z);e[14]=b.x*a.x+b.y*a.y+b.z*a.z;e[15]=1;return e};
JSM.CalculateProjectionMatrix=function(a,b,c,d){a=1/Math.tan(a/2);var e=[];e[0]=a;e[1]=0;e[2]=0;e[3]=0;e[4]=0;e[5]=a/(1/b);e[6]=0;e[7]=0;e[8]=0;e[9]=0;e[10]=-((d+c)/(d-c));e[11]=-1;e[12]=0;e[13]=0;e[14]=-(2*d*c/(d-c));e[15]=0;return e};
JSM.ProjectWithMatrices=function(a,b,c,d){var e=new JSM.Coord,f=[],g=[];f[0]=a.x;f[1]=a.y;f[2]=a.z;f[3]=1;g=JSM.VectorMatrixMultiply4x4(JSM.VectorMatrixMultiply4x4(f,b),c);a=g[3];if(JSM.IsZero(a))return null;g[0]=0.5*(g[0]/a)+0.5;g[1]=0.5*(g[1]/a)+0.5;g[2]=0.5*(g[2]/a)+0.5;g[0]=g[0]*d[2]+d[0];g[1]=g[1]*d[3]+d[1];e.x=g[0];e.y=g[1];e.z=g[2];return e};
JSM.Project=function(a,b,c,d,e,f,g,h,k){b=JSM.CalculateModelViewMatrix(b,c,d);e=JSM.CalculateProjectionMatrix(e,f,g,h);return JSM.ProjectWithMatrices(a,b,e,k)};
JSM.ConvexHull2D=function(a){function b(a,b){var c=a.length,d=0,e;for(e=1;e<c;e++)b==d?d=e:"Clockwise"==JSM.CoordTurnType2D(a[b],a[d],a[e])&&(d=e);return d}var c=[];if(3>a.length)return c;var d=function(a){var b=a.length,c=JSM.Inf,d=-1,e,f;for(e=0;e<b;e++)f=a[e].x,JSM.IsLower(f,c)&&(c=f,d=e);return d}(a),e=d,f;do c.push(e),e=f=b(a,e);while(f!=d);return c};
JSM.ConvexHull3D=function(a){function b(){this.position=null}function c(){this.tri2=this.tri1=this.vert2=this.vert1=null}function d(){this.valid=this.edges=this.vertices=null}function e(a,c){var d=new b;d.position=c;a.vertices.push(d);return a.vertices.length-1}function f(a,b,d,e){var f=-1,g,h;for(g=0;g<a.edges.length;g++)if(h=a.edges[g],h.vert1==d&&h.vert2==e||h.vert1==e&&h.vert2==d){f=g;break}-1==f&&(f=new c,f.vert1=d,f.vert2=e,f.tri1=-1,f.tri2=-1,a.edges.push(f),f=a.edges.length-1);a=a.edges[f];
a.tri1!=b&&a.tri2!=b&&(-1==a.tri1?a.tri1=b:-1==a.tri2&&(a.tri2=b));return f}function g(a,b,c,e){var g=a.triangles.length,h=f(a,g,b,c),l=f(a,g,c,e),g=f(a,g,e,b),m=new d;m.vertices=[b,c,e];m.edges=[h,l,g];m.valid=!0;a.triangles.push(m);return a.triangles.length-1}function h(a,b,c){a=a.edges[c];a.tri1==b?a.tri1=-1:a.tri2==b&&(a.tri2=-1)}function k(a,b,c,d,e){c=a.vertices[c].position;d=a.vertices[d].position;e=a.vertices[e].position;a=JSM.CoordSub(a.vertices[b].position,e);b=JSM.CoordSub(c,e);c=JSM.CoordSub(d,
e);return JSM.VectorDot(a,JSM.VectorCross(b,c))/6}function l(a,b,c,d,e){JSM.GetPlaneFromThreeCoords(a.vertices[b].position,a.vertices[c].position,a.vertices[d].position);return JSM.IsLower(k(a,b,c,d,e),0)?!1:!0}function m(a,b){var c=[],d,e;for(d=0;d<a.triangles.length;d++)e=a.triangles[d],e.valid?l(a,e.vertices[0],e.vertices[2],e.vertices[1],b)?c.push(!0):c.push(!1):c.push(!1);var f,m,k,n=[];for(d=0;d<c.length;d++)c[d]&&(e=a.triangles[d],e.valid&&(f=a.edges[e.edges[0]],m=a.edges[e.edges[1]],k=a.edges[e.edges[2]],
f=-1==f.tri1||-1==f.tri2||c[f.tri1]!=c[f.tri2],m=-1==m.tri1||-1==m.tri2||c[m.tri1]!=c[m.tri2],k=-1==k.tri1||-1==k.tri2||c[k.tri1]!=c[k.tri2],f&&n.push([e.vertices[0],e.vertices[1],b]),m&&n.push([e.vertices[1],e.vertices[2],b]),k&&n.push([e.vertices[2],e.vertices[0],b])));for(d=0;d<c.length;d++)c[d]&&(e=a.triangles[d],e.valid&&(e=a,k=d,f=e.triangles[k],f.valid&&(h(e,k,f.edges[0]),h(e,k,f.edges[1]),h(e,k,f.edges[2]),f.valid=!1)));for(d=0;d<n.length;d++)c=n[d],g(a,c[0],c[1],c[2])}var n=[],p=a.length;
if(4>p)return n;var r=new function(){this.vertices=[];this.edges=[];this.triangles=[]},q;for(q=0;q<p;q++)e(r,a[q]);(function(a){var b=-1,b=l(a,0,1,2,3)?g(a,0,1,2):g(a,0,2,1),b=a.triangles[b];g(a,b.vertices[0],b.vertices[2],3);g(a,b.vertices[2],b.vertices[1],3);g(a,b.vertices[1],b.vertices[0],3)})(r);for(q=4;q<p;q++)m(r,q);for(q=0;q<r.triangles.length;q++)a=r.triangles[q],a.valid&&n.push(a.vertices);return n};JSM.Polygon2D=function(){this.vertices=[]};
JSM.Polygon2D.prototype={AddVertex:function(a,b){this.vertices.push(new JSM.Coord2D(a,b))},GetVertex:function(a){return this.vertices[a]},SetVertex:function(a,b,c){this.vertices[a].Set(b,c)},VertexCount:function(){return this.vertices.length},Clear:function(){this.vertices=[]},Clone:function(a){a=new JSM.Polygon2D;var b;for(b=0;b<this.vertices.length;b++)a.vertices.push(this.vertices[b].Clone());return a}};JSM.ContourPolygon2D=function(){this.polygons=[]};
JSM.ContourPolygon2D.prototype={AddVertex:function(a,b,c){void 0===this.polygons[a]&&(this.polygons[a]=new JSM.Polygon2D);this.polygons[a].AddVertex(b,c)},VertexCount:function(a){return void 0===this.polygons[a]?0:this.polygons[a].VertexCount()},GetVertex:function(a,b){return this.polygons[a].GetVertex(b)},SetVertex:function(a,b,c,d){this.polygons[a].SetVertex(b,c,d)},AddContour:function(){this.polygons.push(new JSM.Polygon2D)},ContourCount:function(){return this.polygons.length},GetContour:function(a){return this.polygons[a]},
Clear:function(){this.polygons=[]},Clone:function(a){a=new JSM.ContourPolygon2D;var b;for(b=0;b<this.polygons.length;b++)a.polygons.push(this.polygons[b].Clone());return a}};JSM.Polygon=function(){this.vertices=[]};
JSM.Polygon.prototype={AddVertex:function(a,b,c){this.vertices.push(new JSM.Coord(a,b,c))},GetVertex:function(a){return this.vertices[a]},SetVertex:function(a,b,c,d){this.vertices[a].Set(b,c,d)},VertexCount:function(){return this.vertices.length},Clear:function(){this.vertices=[]},Clone:function(a){a=new JSM.Polygon;var b;for(b=0;b<this.vertices.length;b++)a.vertices.push(this.vertices[b].Clone());return a}};
JSM.PolygonSignedArea2D=function(a){var b=a.VertexCount(),c=0,d,e,f;for(d=0;d<b;d++)e=a.GetVertex(d),f=a.GetVertex((d+1)%b),c+=e.x*f.y-f.x*e.y;return c/2};JSM.PolygonArea2D=function(a){return Math.abs(JSM.PolygonSignedArea2D(a))};JSM.PolygonOrientation2D=function(a){a=JSM.PolygonSignedArea2D(a);return JSM.IsPositive(a)?"CounterClockwise":JSM.IsNegative(a)?"Clockwise":"Invalid"};
JSM.ChangePolygonOrientation2D=function(a){var b=a.Clone();a.Clear();var c,d;for(c=b.VertexCount()-1;0<=c;c--)d=b.GetVertex(c),a.AddVertex(d.x,d.y)};JSM.PolygonComplexity2D=function(a){var b=!1,c=!1,d=a.VertexCount(),e,f,g,h;for(e=0;e<d;e++)if(f=0===e?d-1:e-1,g=e,h=e===d-1?0:e+1,f=a.GetVertex(f),g=a.GetVertex(g),h=a.GetVertex(h),h=JSM.CoordTurnType2D(f,g,h),"CounterClockwise"===h?b=!0:"Clockwise"===h&&(c=!0),b&&c)return"Concave";return!b&&!c?"Invalid":"Convex"};
JSM.CoordPolygonPosition2D=function(a,b){var c=b.VertexCount(),d,e,f;for(d=0;d<c;d++)if(e=b.GetVertex(d),f=b.GetVertex((d+1)%c),e=new JSM.Sector2D(e,f),"CoordOutsideOfSector"!==JSM.CoordSectorPosition2D(a,e))return"CoordOnPolygonEdge";var g=0,h;for(d=0;d<c;d++)h=Math.abs(b.GetVertex(d).x-a.x),JSM.IsGreater(h,g)&&(g=h);g=new JSM.Sector2D(a,new JSM.Coord2D(a.x+2*g,a.y));h=0;var k;for(d=0;d<c;d++)e=b.GetVertex(d),f=b.GetVertex((d+1)%c),e=new JSM.Sector2D(e,f),f=new JSM.Coord2D,k=JSM.SectorSectorPosition2D(g,
e,f),"SectorsDontIntersects"!==k&&("SectorsIntersectsOnePoint"===k?h++:"SectorsIntersectsEndPoint"===k&&(JSM.CoordIsEqual2D(f,e.beg)?JSM.IsGreater(e.beg.y,e.end.y)&&h++:JSM.CoordIsEqual2D(f,e.end)&&JSM.IsLower(e.beg.y,e.end.y)&&h++));return 0===h%2?"CoordOutsideOfPolygon":"CoordInsideOfPolygon"};
JSM.SectorIntersectsPolygon2D=function(a,b,c,d){var e=a.VertexCount(),f,g,h;for(f=0;f<e;f++)if(g=f,h=(f+1)%e,!(g==c||h==c||g==d||h==d))if(g=new JSM.Sector2D(a.GetVertex(g),a.GetVertex(h)),g=JSM.SectorSectorPosition2D(b,g),"SectorsDontIntersects"!==g)return!0;return!1};
JSM.IsPolygonVertexVisible2D=function(a,b,c){if(b===c)return!1;var d=a.VertexCount();if(c===(0<b?b-1:d-1)||c===(b<d-1?b+1:0))return!1;d=new JSM.Sector2D(a.GetVertex(b),a.GetVertex(c));if(JSM.SectorIntersectsPolygon2D(a,d,b,c))return!1;b=JSM.MidCoord2D(d.beg,d.end);return"CoordInsideOfPolygon"!==JSM.CoordPolygonPosition2D(b,a)?!1:!0};
JSM.CreatePolygonWithHole2D=function(a){var b=[],c=[],d=0,e;c.push(-1);for(e=0;e<a.length;e++)null===a[e]&&(c.push(e),d+=1);c.push(e);d+=1;for(e=0;e<d;e++){var f=e,g=c[f]+1,h=c[f+1];if(0===f){f=void 0;for(f=g;f<h;f++)b.push(f)}else{for(var g=void 0,g=new JSM.Polygon2D,h=new JSM.Polygon2D,k=void 0,l=void 0,l=void 0,k=0;k<b.length;k++)l=a[b[k]],g.AddVertex(l.x,l.y);for(var m=c[f]+1,n=c[f+1],k=m;k<n;k++)l=a[k],h.AddVertex(l.x,l.y);for(var p=null,r=void 0,q=void 0,s=void 0,k=0;k<g.VertexCount();k++){q=
b[k];for(l=m;l<n;l++)if(s=l-m,r=new JSM.Sector(a[q],a[l]),!JSM.SectorIntersectsPolygon2D(g,r,k,-1)&&!JSM.SectorIntersectsPolygon2D(h,r,-1,s)){p=[q,l];break}if(null!==p)break}g=p;h=c[f]+1;f=c[f+1];k=[];n=m=void 0;for(m=0;m<b.length;m++)k[m]=b[m];b=[];p=l=void 0;for(m=0;m<k.length;m++)if(b.push(k[m]),k[m]==g[0]){n=g[1];l=!0;for(p=!1;!p;)b.push(n),!l&&n==g[1]&&(p=!0),l&&(l=!1),n=n<f-1?n+1:h;b.push(k[m])}}}return b};
JSM.PolygonTriangulate2D=function(a){function b(){var a=[],b,c,d,e;for(b=0;b<g.length;b++)if(d=g[b],3===d.length)if("CounterClockwise"===l)a.push(d);else{e=[];for(c=d.length-1;0<=c;c--)e.push(f-d[c]-1);a.push(e)}return a}function c(a,b,c){if(b===c)return!1;var d=a.VertexCount(),e;if(!(e=(b<d-1?b+1:0)===c))e=(0<b?b-1:d-1)===c;return e?!1:JSM.IsPolygonVertexVisible2D(a,b,c)}function d(a,b,c){var d=a.length;if(3>=d)return!0;var e,f,h,l;for(e=0;2>e;e++){h=f=-1;0===e?(f=b,h=c):1===e&&(f=c,h=b);l=[];for(l.push(a[h]);f!==
h;f=f<d-1?f+1:0)l.push(a[f]);g.push(l)}return!0}var e=a.Clone(),f=e.VertexCount();if(3>f)return[];var g=[],h=[],k;for(a=0;a<f;a++)h.push(a);g.push(h);if(3===f)return b();var h=JSM.PolygonComplexity2D(e),l=JSM.PolygonOrientation2D(e);if("Invalid"===h||"Invalid"===l)return[];if("CounterClockwise"!==l){var m,n,p;for(a=0;a<f/2;a++)m=a,n=f-a-1,p=e.vertices[m],e.vertices[m]=e.vertices[n],e.vertices[n]=p}if("Convex"===h){for(a=0;a<f-2;a++)e=[],e.push(0),e.push((a+1)%f),e.push((a+2)%f),g.push(e);return b()}var r;
for(a=0;a<g.length;a++)if(m=g[a],n=m.length,3!==n){p=new JSM.Polygon2D;for(h=0;h<n;h++)k=e.GetVertex(m[h]),p.AddVertex(k.x,k.y);r=!1;for(h=0;h<n;h++){for(k=0;k<n;k++)if(c(p,h,k)){d(m,h,k);r=!0;break}if(r)break}}return b()};
JSM.CheckTriangulation2D=function(a,b){var c=JSM.PolygonSignedArea2D(a),d=0,e,f,g,h,k;for(e=0;e<b.length;e++){g=b[e];if(3!==g.length)return!1;h=new JSM.Polygon2D;for(f=0;f<g.length;f++)k=a.GetVertex(g[f]),h.AddVertex(k.x,k.y);d+=JSM.PolygonSignedArea2D(h)}return!JSM.IsEqual(c,d)?!1:!0};
JSM.CreatePolygonWithHole=function(a){var b=[],c;for(c=0;c<a.length;c++)null!==a[c]&&b.push(a[c]);var b=JSM.CalculateNormal(b),d=new JSM.Coord(0,0,0),e=[],f;for(c=0;c<a.length;c++)null!==a[c]?(f=JSM.GetCoord2DFromCoord(a[c],d,b),e.push(f)):e.push(null);return JSM.CreatePolygonWithHole2D(e)};
JSM.PolygonTriangulate=function(a){var b=new JSM.Polygon2D,c=JSM.CalculateNormal(a.vertices),d=new JSM.Coord(0,0,0),e=a.VertexCount(),f,g;for(f=0;f<e;f++)g=JSM.GetCoord2DFromCoord(a.GetVertex(f),d,c),b.AddVertex(g.x,g.y);return JSM.PolygonTriangulate2D(b)};
JSM.OffsetPolygonContour=function(a,b){var c=a.VertexCount(),d=JSM.CalculateNormal(a.vertices),e,f,g,h,k,l=new JSM.Polygon,m;for(m=0;m<c;m++)e=0===m?c-1:m-1,f=m,g=m===c-1?0:m+1,e=a.GetVertex(e),f=a.GetVertex(f),h=a.GetVertex(g),k=JSM.CoordSub(e,f),g=JSM.CoordSub(h,f),k=JSM.GetVectorsAngle(k,g)/2,"Clockwise"===JSM.CoordTurnType(e,f,h,d)&&(k=Math.PI-k),e=b/Math.sin(k),e=JSM.CoordOffset(f,g,e),e=JSM.CoordRotate(e,d,k,f),l.AddVertex(e.x,e.y,e.z);return l};
JSM.CutPolygonWithPlane=function(a,b,c,d,e){function f(a,b){var c,d,e,f;for(c=0;c<a.length;c++)if(d=a[c],0===d){d=0<c?c-1:a.length-1;e=c<a.length-1?c+1:0;f=a[d];e=a[e];if(0!==e&&0===f){for(;0===a[d];)d=0<d?d-1:a.length-1;f=a[d]}(-1==f&&1==e||1==f&&-1==e)&&b.push(c)}}function g(a,b,c,d,e){1==b?c.push(a):-1==b?d.push(a):e.push(a)}function h(a,b,c,d,e){function f(a,b,c,d,e,g){function h(a,b){a[a[b]]=-1;a[b]=-1}var l=[];(function(a,b,c){var d;for(d=0;d<a.VertexCount();d++)c.push(-1);for(d=0;d<b.length;d+=
2){a=c;var e=b,f=d;a[e[f]]=e[f+1];a[e[f+1]]=e[f]}})(a,b,l);var k=0;g&&(k=b.length-1);for(var m=b[k],n=m,p=!1,r=0,q=new JSM.Polygon,s;;){p||(r=c[n],0!==r&&(p=!0));if(0<q.VertexCount()&&n==m)if(1==r?d.push(q):-1==r&&e.push(q),q=new JSM.Polygon,0<k&&k<b.length){n=m=b[k];continue}else break;s=a.GetVertex(n);q.AddVertex(s.x,s.y,s.z);-1!=l[n]?(k=g?k-2:k+2,n=l[n],h(l,n)):n=n<a.VertexCount()-1?n+1:0}}(function(a,b){if(!(2>b.length)){for(var c=a.GetVertex(b[0]),d=a.GetVertex(b[1]),d=JSM.CoordSub(d,c),e=JSM.GetPlaneFromCoordAndDirection(c,
d),f,d=[],c=0;c<b.length;c++)f=a.GetVertex(b[c]),d.push(JSM.CoordPlaneSignedDistance(f,e));for(c=0;c<b.length-1;c++)for(e=0;e<b.length-c-1;e++)if(JSM.IsGreater(d[e],d[e+1])){f=d;var g=e+1,h=f[e];f[e]=f[g];f[g]=h;f=b;g=e+1;h=f[e];f[e]=f[g];f[g]=h}}})(a,b);f(a,b,c,d,e,!1);f(a,b,c,d,e,!0)}var k=new JSM.Polygon,l=[];b=function(a,b,c,d){function e(a,c,d,f,g){function h(c,d,e,f,g){if(0<d.length){var l=d[d.length-1];0!==l&&(0!==g&&l!=g)&&(e=a.GetVertex(e),f=a.GetVertex(f),f=new JSM.Line(f,JSM.CoordSub(f,
e)),e=new JSM.Coord,"LineIntersectsPlane"==JSM.LinePlanePosition(f,b,e)&&(c.AddVertex(e.x,e.y,e.z),d.push(0)))}}c==a.VertexCount()?(c=0,a.VertexCount(),f=g[c],h(d,g,a.VertexCount()-1,c,f)):(f=f[c],h(d,g,c-1,c,f),c=a.GetVertex(c),d.AddVertex(c.x,c.y,c.z),g.push(f));return f}var f=[],g=!1,h=!1,l,k,w;for(l=0;l<a.VertexCount();l++)k=a.GetVertex(l),k=JSM.CoordPlanePosition(k,b),w=0,"CoordInFrontOfPlane"==k?(w=1,h=!0):"CoordAtBackOfPlane"==k&&(w=-1,g=!0),f.push(w);if(g&&h)for(l=0;l<=a.VertexCount();l++)e(a,
l,c,f,d);else{if(g)return-1;if(h)return 1}return 0}(a,b,k,l);if(0===k.VertexCount()&&0===l.length)g(a,b,c,d,e);else{a=[];f(l,a);if(0===a.length||0!==a.length%2)return!1;h(k,a,l,c,d)}return 0===c.length+d.length+e.length?!1:!0};JSM.BSPNode=function(){this.outside=this.inside=this.parent=this.plane=this.userData=this.polygon=null};JSM.BSPNode.prototype={IsLeaf:function(){return null===this.inside&&null===this.outside}};JSM.BSPTree=function(){this.root=null};
JSM.BSPTree.prototype={AddPolygon:function(a,b){null===this.root&&(this.root=this.GetNewNode());return this.AddPolygonToNode(this.root,a,b)},Traverse:function(a){this.TraverseNode(this.root,a)},TraverseNode:function(a,b){null!==a&&(b(a),this.TraverseNode(a.inside,b),this.TraverseNode(a.outside,b))},GetNodes:function(){var a=[];this.Traverse(function(b){a.push(b)});return a},NodeCount:function(){var a=0;this.Traverse(function(b){a+=1});return a},AddPolygonToNode:function(a,b,c){if(3>b.VertexCount())return!1;
var d;if(null===a.polygon){d=JSM.CalculateNormal(b.vertices);var e=JSM.GetPlaneFromCoordAndDirection(b.GetVertex(0),d);a.polygon=b;void 0!==c&&(a.userData=c);a.plane=e}else{d=[];var f=[],e=[];JSM.CutPolygonWithPlane(b,a.plane,f,d,e)&&(0<d.length&&this.AddInsidePolygonsToNode(a,d,c),0<f.length&&this.AddOutsidePolygonsToNode(a,f,c),0<e.length&&(d=JSM.CalculateNormal(b.vertices),0<JSM.VectorDot(d,a.plane.GetNormal())?this.AddInsidePolygonsToNode(a,e,c):this.AddOutsidePolygonsToNode(a,e,c)))}return!0},
AddInsidePolygonsToNode:function(a,b,c){null===a.inside&&(a.inside=this.GetNewNode(),a.inside.parent=a);var d;for(d=0;d<b.length;d++)this.AddPolygonToNode(a.inside,b[d],c)},AddOutsidePolygonsToNode:function(a,b,c){null===a.outside&&(a.outside=this.GetNewNode(),a.outside.parent=a);var d;for(d=0;d<b.length;d++)this.AddPolygonToNode(a.outside,b[d],c)},GetNewNode:function(){return new JSM.BSPNode}};
JSM.ClipPolygonWithBSPTree=function(a,b,c,d,e,f){function g(a,b,c){if(null!==b){var d=[],e=[],f=[];JSM.CutPolygonWithPlane(a,b.plane,e,d,f)&&(0<d.length&&k(b,d,c),0<e.length&&l(b,e,c),0<f.length&&(a=JSM.CalculateNormal(a.vertices),0<JSM.VectorDot(a,b.plane.GetNormal())?k(b,f,!0):l(b,f,!0)))}}function h(a,b){var c;for(c=0;c<a.length;c++)b.push(a[c])}function k(a,b,c){if(null!==a.inside){a=a.inside;var e;for(e=0;e<b.length;e++)g(b[e],a,c)}else h(b,c?f:d)}function l(a,b,d){if(null!==a.outside){a=a.outside;
var f;for(f=0;f<b.length;f++)g(b[f],a,d)}else h(b,d?e:c)}g(a,b.root,!1);return!0};JSM.BodyVertex=function(a){this.position=JSM.ValueOrDefault(a,new JSM.Coord)};JSM.BodyPolygon=function(a){this.vertices=JSM.ValueOrDefault(a,[]);this.curved=this.material=-1};JSM.Body=function(){this.vertices=[];this.polygons=[];this.projection="Cubic";this.coords=new JSM.CoordSystem(new JSM.Coord(0,0,0),new JSM.Coord(1,0,0),new JSM.Coord(0,1,0),new JSM.Coord(0,0,1))};
JSM.BodyVertex.prototype={GetPosition:function(){return this.position},SetPosition:function(a){this.position=a},Clone:function(){return new JSM.BodyVertex(this.position.Clone())}};
JSM.BodyPolygon.prototype={AddVertexIndex:function(a){this.vertices.push(a)},GetVertexIndex:function(a){return this.vertices[a]},VertexIndexCount:function(){return this.vertices.length},HasMaterialIndex:function(){return-1!==this.material},GetMaterialIndex:function(){return this.material},SetMaterialIndex:function(a){this.material=a},HasCurveGroup:function(){return-1!==this.curved},GetCurveGroup:function(){return this.curved},SetCurveGroup:function(a){this.curved=a},InheritAttributes:function(a){this.material=
a.material;this.curved=a.curved},Clone:function(){var a=new JSM.BodyPolygon,b;for(b=0;b<this.vertices.length;b++)a.vertices.push(this.vertices[b]);a.material=this.material;a.curved=this.curved;return a}};
JSM.Body.prototype={AddVertex:function(a){this.vertices.push(a);return this.vertices.length-1},AddPolygon:function(a){this.polygons.push(a);return this.polygons.length-1},GetVertex:function(a){return this.vertices[a]},GetVertexPosition:function(a){return this.vertices[a].position},GetPolygon:function(a){return this.polygons[a]},VertexCount:function(){return this.vertices.length},PolygonCount:function(){return this.polygons.length},SetVertexPosition:function(a,b){this.vertices[a].position=b},SetPolygonsMaterialIndex:function(a){var b;
for(b=0;b<this.polygons.length;b++)this.polygons[b].SetMaterialIndex(a)},SetPolygonsCurveGroup:function(a){var b;for(b=0;b<this.polygons.length;b++)this.polygons[b].SetCurveGroup(a)},GetTextureProjectionType:function(){return this.projection},SetTextureProjectionType:function(a){this.projection=a},GetTextureProjectionCoords:function(){return this.coords},SetTextureProjectionCoords:function(a){this.coords=a},Transform:function(a){var b;for(b=0;b<this.vertices.length;b++)this.vertices[b].position=a.Apply(this.vertices[b].position);
null!==this.coords&&(b=JSM.CoordSystemToAbsoluteCoords(this.coords),b.origo=a.Apply(b.origo),b.e1=a.Apply(b.e1),b.e2=a.Apply(b.e2),b.e3=a.Apply(b.e3),this.coords=JSM.CoordSystemToDirectionVectors(b))},GetCenter:function(){var a=this.GetBoundingBox();return JSM.MidCoord(a[0],a[1])},GetBoundingBox:function(){var a=new JSM.Coord(JSM.Inf,JSM.Inf,JSM.Inf),b=new JSM.Coord(-JSM.Inf,-JSM.Inf,-JSM.Inf),c,d;for(c=0;c<this.vertices.length;c++)d=this.vertices[c].position,a.x=JSM.Minimum(a.x,d.x),a.y=JSM.Minimum(a.y,
d.y),a.z=JSM.Minimum(a.z,d.z),b.x=JSM.Maximum(b.x,d.x),b.y=JSM.Maximum(b.y,d.y),b.z=JSM.Maximum(b.z,d.z);return[a,b]},GetBoundingSphereRadius:function(){var a=this.GetCenter(),b=0,c,d;for(c=0;c<this.vertices.length;c++)d=JSM.CoordDistance(a,this.vertices[c].position),JSM.IsGreater(d,b)&&(b=d);return b},OffsetToOrigo:function(){var a=this.GetCenter(),a=JSM.VectorMultiply(a,-1),b;for(b=0;b<this.vertices.length;b++)this.vertices[b].position=JSM.CoordAdd(this.vertices[b].position,a)},Merge:function(a){var b=
this.vertices.length,c,d;for(c=0;c<a.VertexCount();c++)this.vertices.push(a.GetVertex(c).Clone());var e;for(c=0;c<a.PolygonCount();c++){e=a.GetPolygon(c).Clone();for(d=0;d<e.VertexIndexCount();d++)e.vertices[d]+=b;this.polygons.push(e)}},Clear:function(){this.vertices=[];this.polygons=[];this.coords=this.projection=null}};JSM.AddVertexToBody=function(a,b,c,d){a.AddVertex(new JSM.BodyVertex(new JSM.Coord(b,c,d)))};JSM.AddPolygonToBody=function(a,b){a.AddPolygon(new JSM.BodyPolygon(b))};
JSM.CalculateBodyVertexToPolygon=function(a){var b=[],c,d;for(c=0;c<a.VertexCount();c++)b[c]=[];var e;for(c=0;c<a.PolygonCount();c++){e=a.GetPolygon(c);for(d=0;d<e.VertexIndexCount();d++)b[e.GetVertexIndex(d)].push(c)}return b};
JSM.CalculateBodyPolygonNormal=function(a,b){var c=a.GetPolygon(b),d=c.VertexIndexCount(),e=new JSM.Vector(0,0,0);if(3<=d){var f,g,h;for(f=0;f<d;f++)g=f,h=(f+1)%d,g=a.GetVertexPosition(c.GetVertexIndex(g)),h=a.GetVertexPosition(c.GetVertexIndex(h)),e.x+=(g.y-h.y)*(g.z+h.z),e.y+=(g.z-h.z)*(g.x+h.x),e.z+=(g.x-h.x)*(g.y+h.y)}return JSM.VectorNormalize(e)};JSM.CalculateBodyPolygonNormals=function(a){var b=[],c;for(c=0;c<a.PolygonCount();c++)b.push(JSM.CalculateBodyPolygonNormal(a,c));return b};
JSM.CalculateBodyVertexNormals=function(a){var b=[],c=JSM.CalculateBodyPolygonNormals(a),d=JSM.CalculateBodyVertexToPolygon(a),e,f,g,h,k,l,m,n;for(e=0;e<a.PolygonCount();e++)if(h=a.GetPolygon(e),b[e]=[],h.HasCurveGroup())for(f=0;f<h.VertexIndexCount();f++){k=new JSM.Vector(0,0,0);l=0;m=d[h.GetVertexIndex(f)];for(g=0;g<m.length;g++)n=a.GetPolygon(m[g]),n.GetCurveGroup()===h.GetCurveGroup()&&(k=JSM.CoordAdd(k,c[m[g]]),l++);k=JSM.VectorMultiply(k,1/l);k=JSM.VectorNormalize(k);b[e].push(k)}else{g=c[e];
for(f=0;f<h.VertexIndexCount();f++)b[e].push(new JSM.Vector(g.x,g.y,g.z))}return b};JSM.MakeBodyInsideOut=function(a){var b,c,d,e,f;for(b=0;b<a.PolygonCount();b++){d=a.GetPolygon(b);f=d.vertices.slice(0);e=f.length;d.vertices=[];for(c=0;c<e;c++)d.vertices.push(f[e-c-1])}};JSM.GetGaussianParameterToReachEpsilonAtValue=function(a,b,c,d){return Math.sqrt(-(Math.pow(a-c,2)/(2*Math.log(d/Math.abs(b)))))};JSM.GetGaussianValue=function(a,b,c,d){return b*Math.exp(-(Math.pow(a-c,2)/(2*Math.pow(d,2))))};
JSM.SoftMoveBodyVertex=function(a,b,c,d,e){b=a.GetVertex(b).position;var f=JSM.GetGaussianParameterToReachEpsilonAtValue(c,e,0,1E-5),g,h,k;for(g=0;g<a.VertexCount();g++)h=JSM.CoordDistance(b,a.GetVertex(g).position),JSM.IsGreater(h,c)||(h=JSM.GetGaussianValue(h,e,0,f),k=a.GetVertex(g).position,a.GetVertex(g).position=JSM.CoordOffset(k,d,h))};
JSM.CalculatePolygonCentroid=function(a,b){var c=a.GetPolygon(b),d=c.VertexIndexCount(),e=new JSM.Coord,f;for(f=0;f<d;f++)e=JSM.CoordAdd(e,a.GetVertexPosition(c.GetVertexIndex(f)));return e=JSM.VectorMultiply(e,1/d)};
JSM.TriangulateWithCentroids=function(a){var b=new JSM.Body,c,d;for(c=0;c<a.VertexCount();c++)d=a.GetVertex(c).position,b.AddVertex(new JSM.BodyVertex(new JSM.Coord(d.x,d.y,d.z)));var e,f,g,h,k;for(c=0;c<a.PolygonCount();c++){d=JSM.CalculatePolygonCentroid(a,c);k=b.VertexCount();b.AddVertex(new JSM.BodyVertex(new JSM.Coord(d.x,d.y,d.z)));f=a.GetPolygon(c);g=f.VertexIndexCount();for(d=0;d<g;d++)e=f.GetVertexIndex(d),h=f.GetVertexIndex(d<g-1?d+1:0),e=new JSM.BodyPolygon([e,h,k]),e.material=f.material,
e.curved=f.curved,b.AddPolygon(e)}return b};
JSM.TriangulatePolygons=function(a){var b=new JSM.Body,c,d,e;for(c=0;c<a.VertexCount();c++)e=a.GetVertexPosition(c),b.AddVertex(new JSM.BodyVertex(new JSM.Coord(e.x,e.y,e.z)));var f,g;for(c=0;c<a.PolygonCount();c++){f=new JSM.Polygon;g=a.GetPolygon(c);for(d=0;d<g.VertexIndexCount();d++)e=a.GetVertexPosition(g.GetVertexIndex(d)),f.AddVertex(e.x,e.y,e.z);e=JSM.PolygonTriangulate(f);for(d=0;d<e.length;d++)f=e[d],f=new JSM.BodyPolygon([g.GetVertexIndex(f[0]),g.GetVertexIndex(f[1]),g.GetVertexIndex(f[2])]),
f.InheritAttributes(g),b.AddPolygon(f)}return b};JSM.Vert=function(){this.edges=[];this.pgons=[]};JSM.Edge=function(){this.pgon2=this.pgon1=this.vert2=this.vert1=-1};JSM.PolyEdge=function(){this.index=-1;this.reverse=!1};JSM.Pgon=function(){this.verts=[];this.pedges=[]};JSM.AdjacencyList=function(){this.verts=[];this.edges=[];this.pgons=[]};JSM.GetPolyEdgeStartVertex=function(a,b){return a.reverse?b.edges[a.index].vert2:b.edges[a.index].vert1};
JSM.GetPolyEdgeEndVertex=function(a,b){return a.reverse?b.edges[a.index].vert1:b.edges[a.index].vert2};JSM.IsSolidBody=function(a){a=JSM.CalculateAdjacencyList(a);var b,c;for(b=0;b<a.edges.length;b++)if(c=a.edges[b],-1===c.pgon1||-1===c.pgon2)return!1;return!0};
JSM.CheckSolidBody=function(a){a=JSM.CalculateAdjacencyList(a);var b,c,d,e,f,g,h,k;for(b=0;b<a.edges.length;b++){d=a.edges[b];if(-1===d.pgon1||-1===d.pgon2)return!1;g=a.pgons[d.pgon1];f=!1;for(c=0;c<g.pedges.length;c++)if(e=g.pedges[c],e.index==b){h=e.reverse;f=!0;break}if(!f)return!1;d=a.pgons[d.pgon2];f=!1;for(c=0;c<d.pedges.length;c++)if(e=d.pedges[c],e.index==b){k=e.reverse;f=!0;break}if(!f||h==k)return!1}return!0};
JSM.CalculateAdjacencyList=function(a){var b=new JSM.AdjacencyList,c,d,e;for(c=0;c<a.VertexCount();c++)d=new JSM.Vert,b.verts.push(d);var f,g,h,k,l;for(c=0;c<a.PolygonCount();c++){f=a.GetPolygon(c);e=new JSM.Pgon;g=f.VertexIndexCount();for(d=0;d<g;d++){h=f.GetVertexIndex(d);k=f.GetVertexIndex(d<g-1?d+1:0);l=h;var m=k;k=c;for(var n=new JSM.PolyEdge,p=void 0,r=void 0,p=0;p<b.edges.length;p++)r=b.edges[p],r.vert1===l&&r.vert2===m?(n.index=p,n.reverse=!1):r.vert1===m&&r.vert2===l&&(n.index=p,n.reverse=
!0);-1===n.index?(p=new JSM.Edge,p.vert1=l,p.vert2=m,p.pgon1=k,p.pgon2=-1,b.edges.push(p),n.index=b.edges.length-1,n.reverse=!1):(l=b.edges[n.index],-1===l.pgon1?l.pgon1=k:l.pgon1!==k&&-1===l.pgon2&&(l.pgon2=k));l=n;e.verts.push(h);e.pedges.push(l);b.verts[h].edges.push(l.index);b.verts[h].pgons.push(c)}b.pgons.push(e)}return b};
JSM.CutBodyByPlane=function(a,b){function c(a,b,c){function d(a){r.push(new JSM.Coord(p.x,p.y,p.z));q.push(a)}function e(c,d){s=JSM.VectorNormalize(JSM.CoordSub(a[d],a[c]));M=new JSM.Line(a[c],s);J=JSM.LinePlaneIntersection(M,b);r.push(new JSM.Coord(J.x,J.y,J.z));q.push(-1)}var f=void 0!==c&&null!==c,g=a.length,h=[],l=[],k=!1,m,n,p;for(m=0;m<g;m++)p=a[m],n=JSM.CoordPlanePosition(p,b),l.push("CoordAtBackOfPlane"!==n),0<m&&l[m-1]!==l[m]&&(k=!0);if(!k){if(!1===l[0])return h;for(m=0;m<g;m++)p=a[m],h.push(new JSM.Coord(p.x,
p.y,p.z)),f&&c.push(m);return h}var r=[],q=[],s,M,J;for(m=0;m<g;m++)k=m-1,n=m,0===m&&(k=g-1),p=a[n],l[n]?(l[k]||e(k,n),d(n)):l[k]&&e(k,n);for(m=0;m<r.length;m++)g=r[m],l=h[h.length-1],0===m||!JSM.CoordIsEqual(l,g)?(h.push(new JSM.Coord(g.x,g.y,g.z)),f&&(g=q[m],c.push(g))):f&&(g=q[m],l=q[m-1],-1!==g?c[c.length-1]=g:-1!==l&&(c[c.length-1]=l));return h}function d(a){var b=-1,c;for(c=s;c<e.VertexCount();c++)if(JSM.CoordIsEqual(e.GetVertexPosition(c),a)){b=c;break}-1===b&&(b=e.AddVertex(new JSM.BodyVertex(new JSM.Coord(a.x,
a.y,a.z))));return b}var e=new JSM.Body,f=[],g=[],h=[],k=[],l,m,n,p,r;for(l=0;l<a.PolygonCount();l++){n=a.GetPolygon(l);p=[];for(m=0;m<n.VertexIndexCount();m++)r=a.GetVertexPosition(n.GetVertexIndex(m)),p.push(new JSM.Coord(r.x,r.y,r.z));r=[];p=c(p,b,r);for(m=0;m<r.length;m++)-1!==r[m]&&(h[n.GetVertexIndex(r[m])]=!0);f.push(p);g.push(r)}var q;for(l=0;l<a.VertexCount();l++)h[l]&&(q=a.GetVertexPosition(l),k[l]=e.AddVertex(new JSM.BodyVertex(new JSM.Coord(q.x,q.y,q.z))));var s=e.VertexCount();for(l=
0;l<a.PolygonCount();l++)if(n=a.GetPolygon(l),p=f[l],r=g[l],0!==r.length){h=[];for(m=0;m<r.length;m++)-1!==r[m]?h.push(k[n.GetVertexIndex(r[m])]):(q=p[m],h.push(d(q)));m=new JSM.BodyPolygon(h);m.InheritAttributes(n);e.AddPolygon(m)}return e};
JSM.CalculatePlanarTextureCoord=function(a,b){var c=new JSM.Coord2D,d=JSM.VectorNormalize(b.e1),e=JSM.VectorNormalize(b.e2),f=JSM.VectorCross(b.e1,b.e2),f=JSM.GetPlaneFromCoordAndDirection(b.origo,f),e=JSM.GetPlaneFromCoordAndDirection(b.origo,e),d=JSM.GetPlaneFromCoordAndDirection(b.origo,d),f=JSM.ProjectCoordToPlane(a,f);c.x=JSM.CoordPlaneSignedDistance(f,d);c.y=JSM.CoordPlaneSignedDistance(f,e);return c};
JSM.CalculatePolygonPlanarTextureCoords=function(a,b){var c=[],d=a.GetPolygon(b),e=a.GetTextureProjectionCoords(),f,g;for(f=0;f<d.VertexIndexCount();f++)g=a.GetVertexPosition(d.GetVertexIndex(f)),c.push(JSM.CalculatePlanarTextureCoord(g,e));return c};
JSM.CalculateCubicTextureCoord=function(a,b,c){var d=new JSM.Coord2D,e=JSM.VectorNormalize(c.e1),f=JSM.VectorNormalize(c.e2),g=JSM.VectorNormalize(c.e3),h=-1,k=0,l,m,n;for(l=0;3>l;l++)0===l?m=e:1===l?m=f:2===l&&(m=g),n=Math.abs(JSM.VectorDot(b,m)),JSM.IsGreater(n,k)&&(h=l,k=n);if(-1===h)return d;b=null;0===h?b=new JSM.CoordSystem(c.origo,f,g,null):1===h?b=new JSM.CoordSystem(c.origo,e,g,null):2===h&&(b=new JSM.CoordSystem(c.origo,e,f,null));return null===b?d:JSM.CalculatePlanarTextureCoord(a,b)};
JSM.CalculatePolygonCubicTextureCoords=function(a,b,c){var d=[];b=a.GetPolygon(b);var e=a.GetTextureProjectionCoords(),f,g;for(f=0;f<b.VertexIndexCount();f++)g=a.GetVertexPosition(b.GetVertexIndex(f)),d.push(JSM.CalculateCubicTextureCoord(g,c,e));return d};
JSM.CalculateCylindricalTextureCoord=function(a,b,c){var d=new JSM.Coord2D,e=JSM.VectorNormalize(c.e3);if(JSM.VectorsAreCollinear(e,b))return d=JSM.CalculateCubicTextureCoord(a,b,c),[d,0];b=new JSM.Line(c.origo,e);var f=JSM.ProjectCoordToLine(a,b);b=JSM.CoordSignedDistance(c.origo,f,c.e3);var g=JSM.VectorNormalize(c.e1);a=JSM.CoordSub(a,f);e=JSM.GetVectorsFullAngle(g,a,e);c=JSM.VectorLength(c.e1);d.x=e*c;d.y=b;return[d,e]};
JSM.CalculatePolygonCylindricalTextureCoords=function(a,b,c){var d=[],e=[],f=a.GetPolygon(b);b=a.GetTextureProjectionCoords();var g,h;for(g=0;g<f.VertexIndexCount();g++)h=a.GetVertexPosition(f.GetVertexIndex(g)),h=JSM.CalculateCylindricalTextureCoord(h,c,b),d.push(h[0]),e.push(h[1]);g=JSM.VectorNormalize(b.e3);if(JSM.VectorsAreCollinear(g,c))return d;a=!1;for(g=0;g<e.length;g++){for(c=g+1;c<e.length;c++)if(JSM.IsGreater(Math.abs(e[g]-e[c]),Math.PI)){a=!0;break}if(a)break}if(a){b=JSM.VectorLength(b.e1);
for(g=0;g<e.length;g++)JSM.IsLower(e[g],Math.PI)&&(d[g].x=b*(e[g]+2*Math.PI))}return d};JSM.CalculateBodyPlanarTextureCoords=function(a){var b=[],c;for(c=0;c<a.PolygonCount();c++)b.push(JSM.CalculatePolygonPlanarTextureCoords(a,c));return b};JSM.CalculateBodyCubicTextureCoords=function(a){var b=[],c=JSM.CalculateBodyPolygonNormals(a),d,e;for(d=0;d<a.PolygonCount();d++)e=c[d],b.push(JSM.CalculatePolygonCubicTextureCoords(a,d,e));return b};
JSM.CalculateBodyCylindricalTextureCoords=function(a){var b=[],c=JSM.CalculateBodyPolygonNormals(a),d,e;for(d=0;d<a.PolygonCount();d++)e=c[d],b.push(JSM.CalculatePolygonCylindricalTextureCoords(a,d,e));return b};JSM.CalculateBodyTextureCoords=function(a){var b=[],c=a.GetTextureProjectionType();"Planar"===c?b=JSM.CalculateBodyPlanarTextureCoords(a):"Cubic"===c?b=JSM.CalculateBodyCubicTextureCoords(a):"Cylindrical"===c&&(b=JSM.CalculateBodyCylindricalTextureCoords(a));return b};
JSM.Model=function(){this.bodies=[]};JSM.Model.prototype={AddBody:function(a){this.bodies.push(a);return this.bodies.length-1},GetBody:function(a){return this.bodies[a]},BodyCount:function(){return this.bodies.length},VertexCount:function(){var a=0,b;for(b=0;b<this.bodies.length;b++)a+=this.bodies[b].VertexCount();return a},PolygonCount:function(){var a=0,b;for(b=0;b<this.bodies.length;b++)a+=this.bodies[b].PolygonCount();return a}};
JSM.HexColorToRGBComponents=function(a){for(var b=a.toString(16);6>b.length;)b="0"+b;a=parseInt(b.substr(0,2),16);var c=parseInt(b.substr(2,2),16),b=parseInt(b.substr(4,2),16);return[a,c,b]};JSM.HexColorToRGBColor=function(a){return parseInt("0x"+a,16)};JSM.RGBComponentsToRGBColor=function(a,b,c){function d(a){for(a=parseInt(a,10).toString(16);2>a.length;)a="0"+a;return a}a=d(a);b=d(b);c=d(c);return parseInt("0x"+a+b+c,16)};
JSM.Material=function(a,b,c,d,e,f){this.ambient=JSM.ValueOrDefault(a,52224);this.diffuse=JSM.ValueOrDefault(b,52224);this.opacity=JSM.ValueOrDefault(c,1);this.texture=JSM.ValueOrDefault(d,null);this.textureWidth=JSM.ValueOrDefault(e,1);this.textureHeight=JSM.ValueOrDefault(f,1)};JSM.Material.prototype={};JSM.Materials=function(){this.materials=[];this.defaultMaterial=new JSM.Material};
JSM.Materials.prototype={AddMaterial:function(a){this.materials.push(a)},GetMaterial:function(a){return 0>a||a>=this.materials.length?this.defaultMaterial:this.materials[a]},GetDefaultMaterial:function(a){return this.defaultMaterial},Count:function(){return this.materials.length},Clone:function(){return new JSM.Material(this.ambient,this.diffuse,this.opacity,this.texture,this.textureWidth,this.textureHeight)}};
JSM.GenerateRectangle=function(a,b){var c=new JSM.Body,d=a/2,e=b/2;c.AddVertex(new JSM.BodyVertex(new JSM.Coord(-d,-e,0)));c.AddVertex(new JSM.BodyVertex(new JSM.Coord(d,-e,0)));c.AddVertex(new JSM.BodyVertex(new JSM.Coord(d,e,0)));c.AddVertex(new JSM.BodyVertex(new JSM.Coord(-d,e,0)));c.AddPolygon(new JSM.BodyPolygon([0,1,2,3]));c.SetTextureProjectionType("Cubic");c.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(-d,-e,0),new JSM.Coord(1,0,0),new JSM.Coord(0,1,0),new JSM.Coord(0,0,1)));
return c};
JSM.GenerateCuboid=function(a,b,c){var d=new JSM.Body;a/=2;b/=2;c/=2;d.AddVertex(new JSM.BodyVertex(new JSM.Coord(-a,-b,-c)));d.AddVertex(new JSM.BodyVertex(new JSM.Coord(a,-b,-c)));d.AddVertex(new JSM.BodyVertex(new JSM.Coord(a,-b,c)));d.AddVertex(new JSM.BodyVertex(new JSM.Coord(-a,-b,c)));d.AddVertex(new JSM.BodyVertex(new JSM.Coord(-a,b,-c)));d.AddVertex(new JSM.BodyVertex(new JSM.Coord(a,b,-c)));d.AddVertex(new JSM.BodyVertex(new JSM.Coord(a,b,c)));d.AddVertex(new JSM.BodyVertex(new JSM.Coord(-a,b,
c)));d.AddPolygon(new JSM.BodyPolygon([0,1,2,3]));d.AddPolygon(new JSM.BodyPolygon([1,5,6,2]));d.AddPolygon(new JSM.BodyPolygon([5,4,7,6]));d.AddPolygon(new JSM.BodyPolygon([4,0,3,7]));d.AddPolygon(new JSM.BodyPolygon([0,4,5,1]));d.AddPolygon(new JSM.BodyPolygon([3,2,6,7]));d.SetTextureProjectionType("Cubic");d.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(-a,-b,-c),new JSM.Coord(1,0,0),new JSM.Coord(0,1,0),new JSM.Coord(0,0,1)));return d};
JSM.GenerateCuboidSides=function(a,b,c,d){var e=new JSM.Body;a/=2;b/=2;c/=2;e.AddVertex(new JSM.BodyVertex(new JSM.Coord(-a,-b,-c)));e.AddVertex(new JSM.BodyVertex(new JSM.Coord(a,-b,-c)));e.AddVertex(new JSM.BodyVertex(new JSM.Coord(a,-b,c)));e.AddVertex(new JSM.BodyVertex(new JSM.Coord(-a,-b,c)));e.AddVertex(new JSM.BodyVertex(new JSM.Coord(-a,b,-c)));e.AddVertex(new JSM.BodyVertex(new JSM.Coord(a,b,-c)));e.AddVertex(new JSM.BodyVertex(new JSM.Coord(a,b,c)));e.AddVertex(new JSM.BodyVertex(new JSM.Coord(-a,
b,c)));d[0]&&e.AddPolygon(new JSM.BodyPolygon([0,1,2,3]));d[1]&&e.AddPolygon(new JSM.BodyPolygon([1,5,6,2]));d[2]&&e.AddPolygon(new JSM.BodyPolygon([5,4,7,6]));d[3]&&e.AddPolygon(new JSM.BodyPolygon([4,0,3,7]));d[4]&&e.AddPolygon(new JSM.BodyPolygon([0,4,5,1]));d[5]&&e.AddPolygon(new JSM.BodyPolygon([3,2,6,7]));e.SetTextureProjectionType("Cubic");e.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(-a,-b,-c),new JSM.Coord(1,0,0),new JSM.Coord(0,1,0),new JSM.Coord(0,0,1)));return e};
JSM.GenerateSegmentedRectangle=function(a,b,c){var d=new JSM.Body,e=a/2,f=b/2,g=a/c,h=b/c;(function(){var a,b,m;for(a=0;a<=c;a++)for(b=0;b<=c;b++)m=new JSM.Coord(b*g-e,a*h-f,0),d.AddVertex(new JSM.BodyVertex(m))})(0);(function(){var a,b,e,f,g,h;for(a=0;a<c;a++)for(b=0;b<c;b++)e=a*(c+1)+b,f=e+1,g=e+c+1,h=g+1,d.AddPolygon(new JSM.BodyPolygon([e,f,h,g]))})(0);return d};
JSM.GenerateSegmentedCuboid=function(a,b,c,d){function e(a){var b=0;0<a&&a<=d&&(b=(d+1)*(d+1)+(a-1)*4*d);return b}function f(a){var b=[],c=e(a);if(0===a||a===d){for(a=0;a<=d;a++)b.push(c+a);for(a=1;a<=d;a++)b.push(c+(a+1)*d+a);for(a=d-1;0<=a;a--)b.push(c+(d+1)*d+a);for(a=d-1;0<a;a--)b.push(c+a*(d+1))}else if(0<a&&a<d){for(a=0;a<=d;a++)b.push(c+a);for(a=1;a<d;a++)b.push(c+d+2*a);for(a=d;0<=a;a--)b.push(c+3*d+a-1);for(a=d-1;0<a;a--)b.push(c+d+2*a-1)}return b}function g(a){var b,c,e=a*q;if(0===a||a===
d)for(a=0;a<=d;a++)for(b=0;b<=d;b++)c=new JSM.Coord(b*p-l,a*r-m,e-n),k.AddVertex(new JSM.BodyVertex(c));else if(0<a&&a<d)for(a=0;a<=d;a++)for(b=0;b<=d;b++)if(0===a||a===d||0===b||b===d)c=new JSM.Coord(b*p-l,a*r-m,e-n),k.AddVertex(new JSM.BodyVertex(c))}function h(a){var b,c,f,g,h,l;if(0===a||a===d){var m=e(a);for(b=0;b<d;b++)for(c=0;c<d;c++)f=m+b*(d+1)+c,g=f+1,h=f+d+1,l=h+1,0===a?k.AddPolygon(new JSM.BodyPolygon([f,h,l,g])):k.AddPolygon(new JSM.BodyPolygon([f,g,l,h]))}if(0<a&&a<=d){c=s[a-1];a=s[a];
for(b=0;b<4*d;b++)f=c[b],h=a[b],b<4*d-1?(g=c[b+1],l=a[b+1]):(g=c[0],l=a[0]),k.AddPolygon(new JSM.BodyPolygon([f,g,l,h]))}}var k=new JSM.Body,l=a/2,m=b/2,n=c/2,p=a/d,r=b/d,q=c/d;for(a=0;a<=d;a++)g(a);var s=[];for(a=0;a<=d;a++)s.push(f(a));for(a=0;a<=d;a++)h(a);return k};
JSM.GenerateCircle=function(a,b){var c=new JSM.Body,d=2*Math.PI,e=2*Math.PI/b,f;for(f=0;f<b;f++)c.AddVertex(new JSM.BodyVertex(JSM.CylindricalToCartesian(a,0,d))),d-=e;d=new JSM.BodyPolygon;for(f=0;f<b;f++)d.AddVertexIndex(b-f-1);c.AddPolygon(d);c.SetTextureProjectionType("Cylindrical");c.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(0,0,0),new JSM.Coord(a,0,0),new JSM.Coord(0,a,0),new JSM.Coord(0,0,1)));return c};
JSM.GenerateSphere=function(a,b,c){var d=new JSM.Body,e=2*b,f=d.AddVertex(new JSM.BodyVertex(JSM.SphericalToCartesian(a,0,0))),g=Math.PI/b,h=g,k,l,m;for(k=1;k<b;k++){for(l=m=0;l<e;l++)d.AddVertex(new JSM.BodyVertex(JSM.SphericalToCartesian(a,h,m))),m+=g;h+=g}a=d.AddVertex(new JSM.BodyVertex(JSM.SphericalToCartesian(-a,0,0)));var n,p;for(k=1;k<=b;k++)if(1===k){g=1;for(l=0;l<e;l++)h=g+l,m=h+1,l===e-1&&(m=g),h=new JSM.BodyPolygon([h,m,f]),c&&h.SetCurveGroup(0),d.AddPolygon(h)}else if(k<b){g=(k-1)*e+
1;for(l=0;l<e;l++)h=g+l,m=h+1,n=h-e,p=n+1,l===e-1&&(m=g,p=g-e),h=new JSM.BodyPolygon([h,m,p,n]),c&&h.SetCurveGroup(0),d.AddPolygon(h)}else if(k===b){g=(k-2)*e+1;for(l=0;l<e;l++)h=g+l,m=h+1,l===e-1&&(m=g),h=new JSM.BodyPolygon([h,a,m]),c&&h.SetCurveGroup(0),d.AddPolygon(h)}d.SetTextureProjectionType("Cubic");d.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(0,0,0),new JSM.Coord(1,0,0),new JSM.Coord(0,1,0),new JSM.Coord(0,0,1)));return d};
JSM.GenerateTriangulatedSphere=function(a,b,c){var d;d=new JSM.Body;var e=(1+Math.sqrt(5))/2;JSM.AddVertexToBody(d,0,1,+e);JSM.AddVertexToBody(d,0,1,-e);JSM.AddVertexToBody(d,0,-1,+e);JSM.AddVertexToBody(d,0,-1,-e);JSM.AddVertexToBody(d,1,+e,0);JSM.AddVertexToBody(d,1,-e,0);JSM.AddVertexToBody(d,-1,+e,0);JSM.AddVertexToBody(d,-1,-e,0);JSM.AddVertexToBody(d,+e,0,1);JSM.AddVertexToBody(d,-e,0,1);JSM.AddVertexToBody(d,+e,0,-1);JSM.AddVertexToBody(d,-e,0,-1);JSM.AddPolygonToBody(d,[0,2,8]);JSM.AddPolygonToBody(d,
[0,4,6]);JSM.AddPolygonToBody(d,[0,6,9]);JSM.AddPolygonToBody(d,[0,8,4]);JSM.AddPolygonToBody(d,[0,9,2]);JSM.AddPolygonToBody(d,[1,3,11]);JSM.AddPolygonToBody(d,[1,4,10]);JSM.AddPolygonToBody(d,[1,6,4]);JSM.AddPolygonToBody(d,[1,10,3]);JSM.AddPolygonToBody(d,[1,11,6]);JSM.AddPolygonToBody(d,[2,5,8]);JSM.AddPolygonToBody(d,[2,7,5]);JSM.AddPolygonToBody(d,[2,9,7]);JSM.AddPolygonToBody(d,[3,5,7]);JSM.AddPolygonToBody(d,[3,7,11]);JSM.AddPolygonToBody(d,[3,10,5]);JSM.AddPolygonToBody(d,[4,8,10]);JSM.AddPolygonToBody(d,
[6,11,9]);JSM.AddPolygonToBody(d,[5,10,8]);JSM.AddPolygonToBody(d,[7,9,11]);for(var e=JSM.VectorLength(d.GetVertexPosition(0)),f=a/e,g,h,e=0;e<d.VertexCount();e++)h=d.GetVertex(e),h.SetPosition(JSM.VectorMultiply(h.GetPosition(),f));for(var k,l,m,n,f=0;f<b;f++){g=d;d=new JSM.Body;h=JSM.CalculateAdjacencyList(g);for(e=0;e<h.verts.length;e++)k=g.GetVertexPosition(e),JSM.AddVertexToBody(d,k.x,k.y,k.z);k=[];for(e=0;e<h.edges.length;e++)l=h.edges[e],l=JSM.MidCoord(g.GetVertexPosition(l.vert1),g.GetVertexPosition(l.vert2)),
l=JSM.VectorMultiply(JSM.VectorNormalize(l),a),k.push(d.AddVertex(new JSM.BodyVertex(l)));for(e=0;e<h.pgons.length;e++){l=h.pgons[e];m=[];for(g=0;g<l.pedges.length;g++)n=l.pedges[g],m.push(JSM.GetPolyEdgeStartVertex(n,h)),m.push(k[n.index]);JSM.AddPolygonToBody(d,[m[0],m[1],m[5]]);JSM.AddPolygonToBody(d,[m[1],m[2],m[3]]);JSM.AddPolygonToBody(d,[m[3],m[4],m[5]]);JSM.AddPolygonToBody(d,[m[1],m[3],m[5]])}}if(c)for(e=0;e<d.PolygonCount();e++)d.GetPolygon(e).SetCurveGroup(0);d.SetTextureProjectionType("Cubic");
d.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(0,0,0),new JSM.Coord(1,0,0),new JSM.Coord(0,1,0),new JSM.Coord(0,0,1)));return d};
JSM.GenerateCylinder=function(a,b,c,d,e){var f=new JSM.Body,g=2*Math.PI,h=2*Math.PI/c,k;for(k=0;k<c;k++)f.AddVertex(new JSM.BodyVertex(JSM.CylindricalToCartesian(a,b/2,g))),f.AddVertex(new JSM.BodyVertex(JSM.CylindricalToCartesian(a,-b/2,g))),g-=h;for(k=0;k<c;k++)g=2*k,h=g+2,k===c-1&&(h=0),g=new JSM.BodyPolygon([g,h,h+1,g+1]),e&&g.SetCurveGroup(0),f.AddPolygon(g);if(d){d=new JSM.BodyPolygon;e=new JSM.BodyPolygon;for(k=0;k<c;k++)d.AddVertexIndex(2*(c-k-1)),e.AddVertexIndex(2*k+1);f.AddPolygon(d);f.AddPolygon(e)}f.SetTextureProjectionType("Cylindrical");
f.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(0,0,-(b/2)),new JSM.Coord(a,0,0),new JSM.Coord(0,a,0),new JSM.Coord(0,0,1)));return f};
JSM.GeneratePie=function(a,b,c,d,e,f){var g=new JSM.Body,h=c,k=c/(d-1);g.AddVertex(new JSM.BodyVertex(JSM.CylindricalToCartesian(0,b/2,0)));g.AddVertex(new JSM.BodyVertex(JSM.CylindricalToCartesian(0,-b/2,0)));for(c=0;c<d;c++)g.AddVertex(new JSM.BodyVertex(JSM.CylindricalToCartesian(a,b/2,h))),g.AddVertex(new JSM.BodyVertex(JSM.CylindricalToCartesian(a,-b/2,h))),h-=k;for(c=0;c<=d;c++)h=2*c,k=h+2,c===d&&(k=0),h=new JSM.BodyPolygon([h,k,k+1,h+1]),f&&(0<c&&c<d)&&h.SetCurveGroup(0),g.AddPolygon(h);if(e){e=
new JSM.BodyPolygon;f=new JSM.BodyPolygon;for(c=0;c<=d;c++)e.AddVertexIndex(2*(d-c)),f.AddVertexIndex(2*c+1);g.AddPolygon(e);g.AddPolygon(f)}g.SetTextureProjectionType("Cylindrical");g.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(0,0,-(b/2)),new JSM.Coord(a,0,0),new JSM.Coord(0,a,0),new JSM.Coord(0,0,1)));return g};
JSM.GenerateCone=function(a,b,c,d,e,f){var g=new JSM.Body,h=JSM.IsZero(a),k=JSM.IsZero(b),l=2*Math.PI,m=2*Math.PI/d;h&&g.AddVertex(new JSM.BodyVertex(JSM.CylindricalToCartesian(0,c/2,0)));var n;for(n=0;n<d;n++)h||g.AddVertex(new JSM.BodyVertex(JSM.CylindricalToCartesian(a,c/2,l))),k||g.AddVertex(new JSM.BodyVertex(JSM.CylindricalToCartesian(b,-c/2,l))),l-=m;k&&g.AddVertex(new JSM.BodyVertex(JSM.CylindricalToCartesian(0,-c/2,0)));for(n=0;n<d;n++)h?(l=n+1,m=l+1,n===d-1&&(m=1),l=new JSM.BodyPolygon([0,
m,l])):k?(l=n,m=l+1,n===d-1&&(m=0),l=new JSM.BodyPolygon([l,m,d])):(l=2*n,m=l+2,n===d-1&&(m=0),l=new JSM.BodyPolygon([l,m,m+1,l+1])),f&&l.SetCurveGroup(0),g.AddPolygon(l);if(e)if(h){f=new JSM.BodyPolygon;for(n=0;n<d;n++)f.AddVertexIndex(n+1);g.AddPolygon(f)}else if(k){e=new JSM.BodyPolygon;for(n=0;n<d;n++)e.AddVertexIndex(d-n-1);g.AddPolygon(e)}else{e=new JSM.BodyPolygon;f=new JSM.BodyPolygon;for(n=0;n<d;n++)e.AddVertexIndex(2*(d-n-1)),f.AddVertexIndex(2*n+1);g.AddPolygon(e);g.AddPolygon(f)}a=(a+
b)/2;g.SetTextureProjectionType("Cylindrical");g.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(0,0,-(c/2)),new JSM.Coord(a,0,0),new JSM.Coord(0,a,0),new JSM.Coord(0,0,1)));return g};
JSM.GeneratePrism=function(a,b,c,d){var e=new JSM.Body,f=a.length,g;for(g=0;g<f;g++)e.AddVertex(new JSM.BodyVertex(a[g])),e.AddVertex(new JSM.BodyVertex(JSM.CoordOffset(a[g],b,c)));var h;for(g=0;g<f;g++)c=2*g,h=c+2,g===f-1&&(h=0),e.AddPolygon(new JSM.BodyPolygon([c,h,h+1,c+1]));if(d){d=new JSM.BodyPolygon;c=new JSM.BodyPolygon;for(g=0;g<f;g++)d.AddVertexIndex(2*g+1),c.AddVertexIndex(2*(f-g-1));e.AddPolygon(d);e.AddPolygon(c)}f=JSM.VectorNormalize(JSM.CoordSub(a[1],a[0]));a=new JSM.Coord(a[0].x,a[0].y,
a[0].z);b=JSM.VectorNormalize(b);f=JSM.VectorCross(b,f);g=JSM.VectorCross(f,b);e.SetTextureProjectionType("Cubic");e.SetTextureProjectionCoords(new JSM.CoordSystem(a,g,f,b));return e};JSM.GenerateCurvedPrism=function(a,b,c,d,e){c=JSM.GeneratePrism(a,c,d,e);if(void 0===b||null===b||a.length!=b.length)return c;for(d=0;d<a.length;d++)e=b[d],c.GetPolygon(d).SetCurveGroup(e);return c};
JSM.GeneratePrismWithHole=function(a,b,c,d){function e(){var b=0,c=[],d;for(d=0;d<a.length;d++)null===a[d]&&(b+=1),c.push(d-b);var b=JSM.CreatePolygonWithHole(a),e=new JSM.Polygon,g;for(d=0;d<b.length;d++)g=a[b[d]],e.AddVertex(g.x,g.y,g.z);g=JSM.PolygonTriangulate(e);var h,k,v;for(d=0;d<g.length;d++){h=g[d];k=new JSM.BodyPolygon;v=new JSM.BodyPolygon;for(e=0;3>e;e++)k.AddVertexIndex(2*c[b[h[e]]]+1),v.AddVertexIndex(2*c[b[h[3-e-1]]]);f.AddPolygon(k);f.AddPolygon(v)}}var f=new JSM.Body;(function(){var d;
for(d=0;d<a.length;d++)null!==a[d]&&(f.AddVertex(new JSM.BodyVertex(a[d])),f.AddVertex(new JSM.BodyVertex(JSM.CoordOffset(a[d],b,c))))})();(function(){var b=0,c=[];c.push(0);var d;for(d=0;d<a.length;d++)null===a[d]&&(c.push(d-b),b+=1);c.push(d-b);for(b=0;b<c.length-1;b++){var e=d=void 0,g=void 0,h=c[b],k=c[b+1];for(d=h;d<k;d++)e=2*d,g=e+2,d===k-1&&(g=2*h),f.AddPolygon(new JSM.BodyPolygon([e,g,g+1,e+1]))}})();d&&e();var g=JSM.VectorNormalize(JSM.CoordSub(a[1],a[0]));d=new JSM.Coord(a[0].x,a[0].y,a[0].z);
var h=JSM.VectorNormalize(b),g=JSM.VectorCross(h,g),k=JSM.VectorCross(g,h);f.SetTextureProjectionType("Cubic");f.SetTextureProjectionCoords(new JSM.CoordSystem(d,k,g,h));return f};JSM.GenerateCurvedPrismWithHole=function(a,b,c,d,e){c=JSM.GeneratePrismWithHole(a,c,d,e);if(void 0===b||null===b||a.length!=b.length)return c;d=0;var f;for(e=0;e<a.length;e++)f=b[e],null!==f&&(c.GetPolygon(d).SetCurveGroup(f),d++);return c};
JSM.GeneratePrismShell=function(a,b,c,d,e){var f=new JSM.Body,g=a.length,h;for(h=0;h<g;h++)f.AddVertex(new JSM.BodyVertex(a[h]));h=new JSM.Polygon;h.vertices=a;d=JSM.OffsetPolygonContour(h,d).vertices;for(h=0;h<g;h++)f.AddVertex(new JSM.BodyVertex(d[h]));var k;for(h=0;h<g;h++)k=JSM.CoordOffset(a[h],b,c),f.AddVertex(new JSM.BodyVertex(k));for(h=0;h<g;h++)k=JSM.CoordOffset(d[h],b,c),f.AddVertex(new JSM.BodyVertex(k));var l;for(h=0;h<g;h++)c=h,d=c+1,k=c+2*g,l=k+1,h===g-1&&(d=0,l=2*g),f.AddPolygon(new JSM.BodyPolygon([c,
d,l,k])),f.AddPolygon(new JSM.BodyPolygon([c+g,k+g,l+g,d+g]));if(e)for(h=0;h<g;h++)c=h,d=c+1,k=h+g,l=k+1,h===g-1&&(d=0,l=g),f.AddPolygon(new JSM.BodyPolygon([c,k,l,d])),f.AddPolygon(new JSM.BodyPolygon([c+2*g,d+2*g,l+2*g,k+2*g]));e=JSM.VectorNormalize(JSM.CoordSub(a[1],a[0]));a=new JSM.Coord(a[0].x,a[0].y,a[0].z);b=JSM.VectorNormalize(b);e=JSM.VectorCross(b,e);g=JSM.VectorCross(e,b);f.SetTextureProjectionType("Cubic");f.SetTextureProjectionCoords(new JSM.CoordSystem(a,g,e,b));return f};
JSM.GenerateCylinderShell=function(a,b,c,d,e,f){for(var g=new JSM.Vector(0,0,1),h=-b/2,k=[],l=2*Math.PI/d,m,n=0,n=0;n<d;n++)m=n*l,m=JSM.PolarToCartesian(a,m),k.push(new JSM.Coord(m.x,m.y,h));a=JSM.GeneratePrismShell(k,g,b,c,e);if(f)for(f=0;f<d;f++)a.GetPolygon(2*f).SetCurveGroup(0),a.GetPolygon(2*f+1).SetCurveGroup(0);return a};
JSM.GenerateLineShell=function(a,b,c,d,e,f){var g=new JSM.Body,h=a.length,k=[],l,m,n,p,r,q;for(l=0;l<h;l++)0===l||l===h-1?r=Math.PI/2:(m=l-1,n=l,p=l+1,q=JSM.CoordSub(a[p],a[n]),r=JSM.CoordSub(a[m],a[n]),r=JSM.GetVectorsAngle(q,r)/2,"Clockwise"===JSM.CoordTurnType(a[m],a[n],a[p],b)&&(r=Math.PI-r)),k.push(r);m=[];for(l=0;l<h;l++)n=l,l===h-1?q=JSM.CoordSub(a[n-1],a[n]):(p=(l+1)%h,q=JSM.CoordSub(a[n],a[p])),r=k[n],p=d/Math.sin(r),p=JSM.CoordOffset(a[n],q,p),p=JSM.CoordRotate(p,b,-(Math.PI-r),a[n]),m.push(p);
for(l=0;l<h;l++)g.AddVertex(new JSM.BodyVertex(a[l]));for(l=0;l<h;l++)g.AddVertex(new JSM.BodyVertex(m[l]));for(l=0;l<h;l++)n=JSM.CoordOffset(a[l],b,c),g.AddVertex(new JSM.BodyVertex(n));for(l=0;l<h;l++)n=JSM.CoordOffset(m[l],b,c),g.AddVertex(new JSM.BodyVertex(n));for(l=0;l<h-1;l++)n=l,p=n+1,c=n+2*h,d=c+1,g.AddPolygon(new JSM.BodyPolygon([n,p,d,c])),g.AddPolygon(new JSM.BodyPolygon([n+h,c+h,d+h,p+h]));e&&(n=0,g.AddPolygon(new JSM.BodyPolygon([n,n+2*h,n+3*h,n+h])),n=h-1,g.AddPolygon(new JSM.BodyPolygon([n,
n+h,n+3*h,n+2*h])));if(f)for(l=0;l<h-1;l++)n=l,p=n+1,c=l+h,d=c+1,g.AddPolygon(new JSM.BodyPolygon([n,c,d,p])),g.AddPolygon(new JSM.BodyPolygon([n+2*h,p+2*h,d+2*h,c+2*h]));e=JSM.VectorNormalize(JSM.CoordSub(a[1],a[0]));a=new JSM.Coord(a[0].x,a[0].y,a[0].z);b=JSM.VectorNormalize(b);e=JSM.VectorCross(b,e);f=JSM.VectorCross(e,b);g.SetTextureProjectionType("Cubic");g.SetTextureProjectionCoords(new JSM.CoordSystem(a,f,e,b));return g};
JSM.GenerateTorus=function(a,b,c,d,e){var f=new JSM.Body,g=2*Math.PI,h=2*Math.PI/d,k=[],l,m;for(l=0;l<d;l++)m=JSM.PolarToCartesian(b,g),m=new JSM.Coord(m.x+a,0,m.y),k.push(m),g-=h;b=new JSM.Coord(0,0,1);g=new JSM.Coord(0,0,0);h=2*Math.PI/c;for(l=0;l<c;l++)for(a=0;a<d;a++)m=JSM.CoordRotate(k[a],b,l*h,g),f.AddVertex(new JSM.BodyVertex(m));for(l=0;l<c;l++){new JSM.BodyPolygon;for(a=0;a<d;a++)h=l*d+a,b=h+d,k=h+1,g=b+1,a===d-1&&(k=l*d,g=(l+1)*d),l===c-1&&(b=a,g=a+1,a===d-1&&(g=0)),h=new JSM.BodyPolygon([h,
b,g,k]),e&&h.SetCurveGroup(0),f.AddPolygon(h)}f.SetTextureProjectionType("Cubic");f.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(0,0,0),new JSM.Coord(1,0,0),new JSM.Coord(0,1,0),new JSM.Coord(0,0,1)));return f};
JSM.GeneratePolyTorus=function(a,b,c,d){var e=new JSM.Body,f=a.length,g=2*Math.PI/f,h=[],k;for(k=0;k<f;k++)g=a[k],g=new JSM.Coord(g.x+b,0,g.y),h.push(g);b=new JSM.Coord(0,0,1);var l=new JSM.Coord(0,0,0),g=2*Math.PI/c,m;for(k=0;k<c;k++)for(a=0;a<f;a++)m=JSM.CoordRotate(h[a],b,k*g,l),e.AddVertex(new JSM.BodyVertex(m));for(k=0;k<c;k++){new JSM.BodyPolygon;for(a=0;a<f;a++)h=k*f+a,b=h+f,g=h+1,l=b+1,a===f-1&&(g=k*f,l=(k+1)*f),k===c-1&&(b=a,l=a+1,a===f-1&&(l=0)),h=new JSM.BodyPolygon([h,b,l,g]),d&&h.SetCurveGroup(a),
e.AddPolygon(h)}e.SetTextureProjectionType("Cubic");e.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(0,0,0),new JSM.Coord(1,0,0),new JSM.Coord(0,1,0),new JSM.Coord(0,0,1)));return e};JSM.GetLineSegmentation=function(a,b,c,d){var e=JSM.CoordSub(b,a);b=JSM.CoordDistance(a,b)/c;var f=0,g;for(g=0;g<=c;g++)d.push(JSM.CoordOffset(a,e,f)),f+=b};
JSM.GetRuledMesh=function(a,b,c,d,e){if(a.length===b.length){var f=a.length-1,g=[],h=[],k;for(k=0;k<=f;k++)g.push(JSM.CoordSub(b[k],a[k])),h.push(JSM.CoordDistance(a[k],b[k]));var l,m;for(k=0;k<=f;k++){l=h[k]/c;for(b=0;b<=c;b++)m=JSM.CoordOffset(a[k],g[k],l*b),d.push(m)}for(k=0;k<f;k++)for(b=0;b<c;b++)a=k*(c+1)+b,d=a+1,g=a+c+1,h=g+1,a=[a,g,h,d],e.push(a)}};
JSM.GenerateRuledFromSectors=function(a,b,c,d,e){var f=new JSM.Body,g=[],h=[];JSM.GetLineSegmentation(a.beg,a.end,c,g);JSM.GetLineSegmentation(b.beg,b.end,c,h);b=[];a=[];JSM.GetRuledMesh(g,h,d,b,a);for(d=0;d<b.length;d++)f.AddVertex(new JSM.BodyVertex(b[d]));for(d=0;d<a.length;d++)g=a[d],g=new JSM.BodyPolygon(g),e&&g.SetCurveGroup(0),f.AddPolygon(g);f.SetTextureProjectionType("Cubic");f.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(0,0,0),new JSM.Coord(1,0,0),new JSM.Coord(0,1,0),new JSM.Coord(0,
0,1)));return f};JSM.GenerateGrid=function(a,b,c,d,e){var f=new JSM.Sector(new JSM.Coord(0,0,0),new JSM.Coord(a,0,0));a=new JSM.Sector(new JSM.Coord(0,b,0),new JSM.Coord(a,b,0));return JSM.GenerateRuledFromSectors(f,a,c,d,e)};JSM.GenerateQuadGrid=function(a,b,c){return JSM.GenerateGrid(a,a,b,b,c)};
JSM.GenerateRuledFromSectorsWithHeight=function(a,b,c,d,e,f){var g=new JSM.Body,h=[],k=[];JSM.GetLineSegmentation(a.beg,a.end,c,h);JSM.GetLineSegmentation(b.beg,b.end,c,k);b=[];a=[];JSM.GetRuledMesh(h,k,d,b,a);for(h=0;h<b.length;h++)g.AddVertex(new JSM.BodyVertex(b[h]));for(var l,h=0;h<a.length;h++)l=a[h],l=new JSM.BodyPolygon(l),e&&l.SetCurveGroup(0),g.AddPolygon(l);k=g.VertexCount();for(h=0;h<b.length;h++)l=b[h],l=new JSM.Coord(l.x,l.y,l.z),l.z-=f,g.AddVertex(new JSM.BodyVertex(l));for(h=0;h<a.length;h++){l=
a[h];b=[];for(f=l.length-1;0<=f;f--)b.push(l[f]+k);l=new JSM.BodyPolygon(b);e&&l.SetCurveGroup(0);g.AddPolygon(l)}for(h=0;h<d;h++)e=h+k,f=e+1,a=e-k,b=a+1,l=new JSM.BodyPolygon([e,f,b,a]),g.AddPolygon(l);for(h=0;h<d;h++)e=h+c*(d+1)+k,f=e+1,a=e-k,b=a+1,l=new JSM.BodyPolygon([e,a,b,f]),g.AddPolygon(l);for(h=0;h<c;h++)e=h*(d+1)+k,f=e+d+1,a=e-k,b=a+d+1,l=new JSM.BodyPolygon([e,a,b,f]),g.AddPolygon(l);for(h=0;h<c;h++)e=(h+1)*d+h+k,f=e+d+1,a=e-k,b=a+d+1,l=new JSM.BodyPolygon([e,f,b,a]),g.AddPolygon(l);g.SetTextureProjectionType("Cubic");
g.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(0,0,0),new JSM.Coord(1,0,0),new JSM.Coord(0,1,0),new JSM.Coord(0,0,1)));return g};
JSM.GenerateRuledFromCoords=function(a,b,c,d){var e=new JSM.Body,f=[],g=[];JSM.GetRuledMesh(a,b,c,f,g);for(a=0;a<f.length;a++)e.AddVertex(new JSM.BodyVertex(f[a]));for(a=0;a<g.length;a++)f=g[a],f=new JSM.BodyPolygon(f),d&&f.SetCurveGroup(0),e.AddPolygon(f);e.SetTextureProjectionType("Cubic");e.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(0,0,0),new JSM.Coord(1,0,0),new JSM.Coord(0,1,0),new JSM.Coord(0,0,1)));return e};
JSM.GenerateRevolved=function(a,b,c,d,e,f){var g=new JSM.Body,h=JSM.IsEqual(c,2*Math.PI),k=a.length,l=c/d;c=JSM.CoordSub(b.end,b.beg);var m,n,p;for(m=0;m<k;m++)for(n=0;n<=d;n++)h&&n===d||(p=JSM.CoordRotate(a[m],c,n*l,b.beg),g.AddVertex(new JSM.BodyVertex(p)));var r,q;for(m=0;m<k-1;m++)for(n=0;n<d;n++)l=m*(d+1)+n,p=l+d+1,r=l+1,q=p+1,h&&(l=m*d+n,p=l+d,r=l+1,q=p+1,n===d-1&&(r=m*d,q=(m+1)*d)),l=new JSM.BodyPolygon([l,r,q,p]),f&&l.SetCurveGroup(m),g.AddPolygon(l);if(h&&e){e=new JSM.BodyPolygon;f=new JSM.BodyPolygon;
for(m=0;m<d;m++)e.AddVertexIndex(d*(k-1)+m),f.AddVertexIndex(d-m-1);g.AddPolygon(e);g.AddPolygon(f)}e=new JSM.Line(b.beg,JSM.VectorNormalize(c));for(m=d=0;m<k;m++)f=JSM.ProjectCoordToLine(a[m],e),d+=JSM.CoordDistance(f,a[m]);d/=k;b=new JSM.Coord(b.beg.x,b.beg.y,b.beg.z);k=JSM.VectorNormalize(c);c=new JSM.Line(b,c);c=JSM.ProjectCoordToLine(a[0],c);a=JSM.VectorSetLength(JSM.CoordSub(a[0],c),d);c=JSM.VectorSetLength(JSM.VectorCross(k,a),d);g.SetTextureProjectionType("Cylindrical");g.SetTextureProjectionCoords(new JSM.CoordSystem(b,
a,c,k));return g};JSM.GenerateFunctionSurface=function(a,b,c,d,e){var f=new JSM.Sector(new JSM.Coord(b.x,b.y,0),new JSM.Coord(c.x,b.y,0));b=new JSM.Sector(new JSM.Coord(b.x,c.y,0),new JSM.Coord(c.x,c.y,0));d=JSM.GenerateRuledFromSectors(f,b,d,d,e);for(e=0;e<d.VertexCount();e++)f=d.GetVertexPosition(e),f.z=a(f.x,f.y);d.SetTextureProjectionType("Cubic");d.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(0,0,0),new JSM.Coord(1,0,0),new JSM.Coord(0,1,0),new JSM.Coord(0,0,1)));return d};
JSM.GenerateFunctionSurfaceSolid=function(a,b,c,d,e,f){var g=new JSM.Sector(new JSM.Coord(c.x,b.y,0),new JSM.Coord(b.x,b.y,0));b=new JSM.Sector(new JSM.Coord(c.x,c.y,0),new JSM.Coord(b.x,c.y,0));e=JSM.GenerateRuledFromSectorsWithHeight(g,b,d,d,e,f);g=(d+1)*(d+1);for(d=0;d<g;d++)f=e.GetVertexPosition(d),f.z=a(f.x,f.y);e.SetTextureProjectionType("Cubic");e.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(0,0,0),new JSM.Coord(1,0,0),new JSM.Coord(0,1,0),new JSM.Coord(0,0,1)));return e};
JSM.GenerateSolidWithRadius=function(a,b){var c=new JSM.Body,d=!0;"Tetrahedron"===a?c=JSM.GenerateTetrahedron():"Hexahedron"===a?c=JSM.GenerateHexahedron():"Octahedron"===a?c=JSM.GenerateOctahedron():"Dodecahedron"===a?c=JSM.GenerateDodecahedron():"Icosahedron"===a?c=JSM.GenerateIcosahedron():"TruncatedTetrahedron"===a?c=JSM.GenerateTruncatedTetrahedron():"Cuboctahedron"===a?c=JSM.GenerateCuboctahedron():"TruncatedCube"===a?c=JSM.GenerateTruncatedCube():"TruncatedOctahedron"===a?c=JSM.GenerateTruncatedOctahedron():
"Rhombicuboctahedron"===a?c=JSM.GenerateRhombicuboctahedron():"TruncatedCuboctahedron"===a?c=JSM.GenerateTruncatedCuboctahedron():"SnubCube"===a?c=JSM.GenerateSnubCube():"Icosidodecahedron"===a?c=JSM.GenerateIcosidodecahedron():"TruncatedDodecahedron"===a?c=JSM.GenerateTruncatedDodecahedron():"TruncatedIcosahedron"===a?c=JSM.GenerateTruncatedIcosahedron():"Rhombicosidodecahedron"===a?c=JSM.GenerateRhombicosidodecahedron():"TruncatedIcosidodecahedron"===a?c=JSM.GenerateTruncatedIcosidodecahedron():
"SnubDodecahedron"===a?c=JSM.GenerateSnubDodecahedron():"TetrakisHexahedron"===a?(c=JSM.GenerateTetrakisHexahedron(),d=!1):"RhombicDodecahedron"===a?(c=JSM.GenerateRhombicDodecahedron(),d=!1):"PentakisDodecahedron"===a?(c=JSM.GeneratePentakisDodecahedron(),d=!1):"SmallStellatedDodecahedron"===a?(c=JSM.GenerateSmallStellatedDodecahedron(),d=!1):"GreatDodecahedron"===a?(c=JSM.GenerateGreatDodecahedron(),d=!1):"SmallTriambicIcosahedron"===a?(c=JSM.GenerateSmallTriambicIcosahedron(),d=!1):"GreatStellatedDodecahedron"===
a?(c=JSM.GenerateGreatStellatedDodecahedron(),d=!1):"SmallTriakisOctahedron"===a?(c=JSM.GenerateSmallTriakisOctahedron(),d=!1):"StellaOctangula"===a?(c=JSM.GenerateStellaOctangula(),d=!1):"TriakisTetrahedron"===a&&(c=JSM.GenerateTriakisTetrahedron(),d=!1);if(0<c.VertexCount()){var e=0;if(d)e=JSM.VectorLength(c.GetVertexPosition(0));else for(var f,d=0;d<c.VertexCount();d++)f=JSM.VectorLength(c.GetVertexPosition(d)),JSM.IsGreater(f,e)&&(e=f);e=b/e;for(d=0;d<c.VertexCount();d++)f=c.GetVertex(d),f.SetPosition(JSM.VectorMultiply(f.GetPosition(),
e))}return c};JSM.GenerateTetrahedron=function(){var a=new JSM.Body;a.AddVertex(new JSM.BodyVertex(new JSM.Coord(1,1,1)));a.AddVertex(new JSM.BodyVertex(new JSM.Coord(-1,-1,1)));a.AddVertex(new JSM.BodyVertex(new JSM.Coord(-1,1,-1)));a.AddVertex(new JSM.BodyVertex(new JSM.Coord(1,-1,-1)));a.AddPolygon(new JSM.BodyPolygon([0,1,3]));a.AddPolygon(new JSM.BodyPolygon([0,2,1]));a.AddPolygon(new JSM.BodyPolygon([0,3,2]));a.AddPolygon(new JSM.BodyPolygon([1,2,3]));return a};
JSM.GenerateHexahedron=function(){var a=new JSM.Body;JSM.AddVertexToBody(a,1,1,1);JSM.AddVertexToBody(a,1,1,-1);JSM.AddVertexToBody(a,1,-1,1);JSM.AddVertexToBody(a,-1,1,1);JSM.AddVertexToBody(a,1,-1,-1);JSM.AddVertexToBody(a,-1,1,-1);JSM.AddVertexToBody(a,-1,-1,1);JSM.AddVertexToBody(a,-1,-1,-1);JSM.AddPolygonToBody(a,[0,1,5,3]);JSM.AddPolygonToBody(a,[0,2,4,1]);JSM.AddPolygonToBody(a,[0,3,6,2]);JSM.AddPolygonToBody(a,[1,4,7,5]);JSM.AddPolygonToBody(a,[2,6,7,4]);JSM.AddPolygonToBody(a,[3,5,7,6]);
return a};JSM.GenerateOctahedron=function(){var a=new JSM.Body;JSM.AddVertexToBody(a,1,0,0);JSM.AddVertexToBody(a,-1,0,0);JSM.AddVertexToBody(a,0,1,0);JSM.AddVertexToBody(a,0,-1,0);JSM.AddVertexToBody(a,0,0,1);JSM.AddVertexToBody(a,0,0,-1);JSM.AddPolygonToBody(a,[0,2,4]);JSM.AddPolygonToBody(a,[0,3,5]);JSM.AddPolygonToBody(a,[0,4,3]);JSM.AddPolygonToBody(a,[0,5,2]);JSM.AddPolygonToBody(a,[1,2,5]);JSM.AddPolygonToBody(a,[1,3,4]);JSM.AddPolygonToBody(a,[1,4,2]);JSM.AddPolygonToBody(a,[1,5,3]);return a};
JSM.GenerateDodecahedron=function(){var a=new JSM.Body,b=(1+Math.sqrt(5))/2,c=1/b;JSM.AddVertexToBody(a,1,1,1);JSM.AddVertexToBody(a,1,1,-1);JSM.AddVertexToBody(a,1,-1,1);JSM.AddVertexToBody(a,-1,1,1);JSM.AddVertexToBody(a,1,-1,-1);JSM.AddVertexToBody(a,-1,1,-1);JSM.AddVertexToBody(a,-1,-1,1);JSM.AddVertexToBody(a,-1,-1,-1);JSM.AddVertexToBody(a,0,+c,+b);JSM.AddVertexToBody(a,0,+c,-b);JSM.AddVertexToBody(a,0,-c,+b);JSM.AddVertexToBody(a,0,-c,-b);JSM.AddVertexToBody(a,+c,+b,0);JSM.AddVertexToBody(a,
+c,-b,0);JSM.AddVertexToBody(a,-c,+b,0);JSM.AddVertexToBody(a,-c,-b,0);JSM.AddVertexToBody(a,+b,0,+c);JSM.AddVertexToBody(a,-b,0,+c);JSM.AddVertexToBody(a,+b,0,-c);JSM.AddVertexToBody(a,-b,0,-c);JSM.AddPolygonToBody(a,[0,8,10,2,16]);JSM.AddPolygonToBody(a,[0,16,18,1,12]);JSM.AddPolygonToBody(a,[0,12,14,3,8]);JSM.AddPolygonToBody(a,[1,9,5,14,12]);JSM.AddPolygonToBody(a,[1,18,4,11,9]);JSM.AddPolygonToBody(a,[2,10,6,15,13]);JSM.AddPolygonToBody(a,[2,13,4,18,16]);JSM.AddPolygonToBody(a,[3,14,5,19,17]);
JSM.AddPolygonToBody(a,[3,17,6,10,8]);JSM.AddPolygonToBody(a,[4,13,15,7,11]);JSM.AddPolygonToBody(a,[5,9,11,7,19]);JSM.AddPolygonToBody(a,[6,17,19,7,15]);return a};
JSM.GenerateIcosahedron=function(){var a=new JSM.Body,b=(1+Math.sqrt(5))/2;JSM.AddVertexToBody(a,0,1,+b);JSM.AddVertexToBody(a,0,1,-b);JSM.AddVertexToBody(a,0,-1,+b);JSM.AddVertexToBody(a,0,-1,-b);JSM.AddVertexToBody(a,1,+b,0);JSM.AddVertexToBody(a,1,-b,0);JSM.AddVertexToBody(a,-1,+b,0);JSM.AddVertexToBody(a,-1,-b,0);JSM.AddVertexToBody(a,+b,0,1);JSM.AddVertexToBody(a,-b,0,1);JSM.AddVertexToBody(a,+b,0,-1);JSM.AddVertexToBody(a,-b,0,-1);JSM.AddPolygonToBody(a,[0,2,8]);JSM.AddPolygonToBody(a,[0,4,
6]);JSM.AddPolygonToBody(a,[0,6,9]);JSM.AddPolygonToBody(a,[0,8,4]);JSM.AddPolygonToBody(a,[0,9,2]);JSM.AddPolygonToBody(a,[1,3,11]);JSM.AddPolygonToBody(a,[1,4,10]);JSM.AddPolygonToBody(a,[1,6,4]);JSM.AddPolygonToBody(a,[1,10,3]);JSM.AddPolygonToBody(a,[1,11,6]);JSM.AddPolygonToBody(a,[2,5,8]);JSM.AddPolygonToBody(a,[2,7,5]);JSM.AddPolygonToBody(a,[2,9,7]);JSM.AddPolygonToBody(a,[3,5,7]);JSM.AddPolygonToBody(a,[3,7,11]);JSM.AddPolygonToBody(a,[3,10,5]);JSM.AddPolygonToBody(a,[4,8,10]);JSM.AddPolygonToBody(a,
[6,11,9]);JSM.AddPolygonToBody(a,[5,10,8]);JSM.AddPolygonToBody(a,[7,9,11]);return a};
JSM.GenerateTruncatedTetrahedron=function(){var a=new JSM.Body;JSM.AddVertexToBody(a,1,1,3);JSM.AddVertexToBody(a,1,-1,-3);JSM.AddVertexToBody(a,-1,-1,3);JSM.AddVertexToBody(a,-1,1,-3);JSM.AddVertexToBody(a,1,3,1);JSM.AddVertexToBody(a,1,-3,-1);JSM.AddVertexToBody(a,-1,-3,1);JSM.AddVertexToBody(a,-1,3,-1);JSM.AddVertexToBody(a,3,1,1);JSM.AddVertexToBody(a,3,-1,-1);JSM.AddVertexToBody(a,-3,-1,1);JSM.AddVertexToBody(a,-3,1,-1);JSM.AddPolygonToBody(a,[0,8,4]);JSM.AddPolygonToBody(a,[1,9,5]);JSM.AddPolygonToBody(a,
[2,10,6]);JSM.AddPolygonToBody(a,[3,11,7]);JSM.AddPolygonToBody(a,[0,2,6,5,9,8]);JSM.AddPolygonToBody(a,[0,4,7,11,10,2]);JSM.AddPolygonToBody(a,[1,3,7,4,8,9]);JSM.AddPolygonToBody(a,[1,5,6,10,11,3]);return a};
JSM.GenerateCuboctahedron=function(){var a=new JSM.Body;JSM.AddVertexToBody(a,1,1,0);JSM.AddVertexToBody(a,1,-1,0);JSM.AddVertexToBody(a,-1,-1,0);JSM.AddVertexToBody(a,-1,1,0);JSM.AddVertexToBody(a,1,0,1);JSM.AddVertexToBody(a,1,0,-1);JSM.AddVertexToBody(a,-1,0,1);JSM.AddVertexToBody(a,-1,0,-1);JSM.AddVertexToBody(a,0,1,1);JSM.AddVertexToBody(a,0,-1,-1);JSM.AddVertexToBody(a,0,-1,1);JSM.AddVertexToBody(a,0,1,-1);JSM.AddPolygonToBody(a,[0,5,11]);JSM.AddPolygonToBody(a,[0,8,4]);JSM.AddPolygonToBody(a,
[1,4,10]);JSM.AddPolygonToBody(a,[1,9,5]);JSM.AddPolygonToBody(a,[2,7,9]);JSM.AddPolygonToBody(a,[2,10,6]);JSM.AddPolygonToBody(a,[3,6,8]);JSM.AddPolygonToBody(a,[3,11,7]);JSM.AddPolygonToBody(a,[0,4,1,5]);JSM.AddPolygonToBody(a,[0,11,3,8]);JSM.AddPolygonToBody(a,[1,10,2,9]);JSM.AddPolygonToBody(a,[2,6,3,7]);JSM.AddPolygonToBody(a,[4,8,6,10]);JSM.AddPolygonToBody(a,[5,9,7,11]);return a};
JSM.GenerateTruncatedCube=function(){var a=new JSM.Body,b=Math.sqrt(2)-1;JSM.AddVertexToBody(a,1,1,+b);JSM.AddVertexToBody(a,1,1,-b);JSM.AddVertexToBody(a,1,-1,+b);JSM.AddVertexToBody(a,-1,1,+b);JSM.AddVertexToBody(a,1,-1,-b);JSM.AddVertexToBody(a,-1,1,-b);JSM.AddVertexToBody(a,-1,-1,+b);JSM.AddVertexToBody(a,-1,-1,-b);JSM.AddVertexToBody(a,1,+b,1);JSM.AddVertexToBody(a,1,+b,-1);JSM.AddVertexToBody(a,1,-b,1);JSM.AddVertexToBody(a,-1,+b,1);JSM.AddVertexToBody(a,1,-b,-1);JSM.AddVertexToBody(a,-1,+b,
-1);JSM.AddVertexToBody(a,-1,-b,1);JSM.AddVertexToBody(a,-1,-b,-1);JSM.AddVertexToBody(a,+b,1,1);JSM.AddVertexToBody(a,+b,1,-1);JSM.AddVertexToBody(a,+b,-1,1);JSM.AddVertexToBody(a,-b,1,1);JSM.AddVertexToBody(a,+b,-1,-1);JSM.AddVertexToBody(a,-b,1,-1);JSM.AddVertexToBody(a,-b,-1,1);JSM.AddVertexToBody(a,-b,-1,-1);JSM.AddPolygonToBody(a,[0,16,8]);JSM.AddPolygonToBody(a,[1,9,17]);JSM.AddPolygonToBody(a,[2,10,18]);JSM.AddPolygonToBody(a,[3,11,19]);JSM.AddPolygonToBody(a,[4,20,12]);JSM.AddPolygonToBody(a,
[5,21,13]);JSM.AddPolygonToBody(a,[6,22,14]);JSM.AddPolygonToBody(a,[7,15,23]);JSM.AddPolygonToBody(a,[0,1,17,21,5,3,19,16]);JSM.AddPolygonToBody(a,[0,8,10,2,4,12,9,1]);JSM.AddPolygonToBody(a,[2,18,22,6,7,23,20,4]);JSM.AddPolygonToBody(a,[3,5,13,15,7,6,14,11]);JSM.AddPolygonToBody(a,[8,16,19,11,14,22,18,10]);JSM.AddPolygonToBody(a,[9,12,20,23,15,13,21,17]);return a};
JSM.GenerateTruncatedOctahedron=function(){var a=new JSM.Body;JSM.AddVertexToBody(a,0,1,2);JSM.AddVertexToBody(a,0,1,-2);JSM.AddVertexToBody(a,0,-1,2);JSM.AddVertexToBody(a,0,-1,-2);JSM.AddVertexToBody(a,0,2,1);JSM.AddVertexToBody(a,0,-2,1);JSM.AddVertexToBody(a,0,2,-1);JSM.AddVertexToBody(a,0,-2,-1);JSM.AddVertexToBody(a,1,0,2);JSM.AddVertexToBody(a,1,0,-2);JSM.AddVertexToBody(a,-1,0,2);JSM.AddVertexToBody(a,-1,0,-2);JSM.AddVertexToBody(a,1,2,0);JSM.AddVertexToBody(a,1,-2,0);JSM.AddVertexToBody(a,
-1,2,0);JSM.AddVertexToBody(a,-1,-2,0);JSM.AddVertexToBody(a,2,0,1);JSM.AddVertexToBody(a,-2,0,1);JSM.AddVertexToBody(a,2,0,-1);JSM.AddVertexToBody(a,-2,0,-1);JSM.AddVertexToBody(a,2,1,0);JSM.AddVertexToBody(a,-2,1,0);JSM.AddVertexToBody(a,2,-1,0);JSM.AddVertexToBody(a,-2,-1,0);JSM.AddPolygonToBody(a,[0,10,2,8]);JSM.AddPolygonToBody(a,[1,9,3,11]);JSM.AddPolygonToBody(a,[4,12,6,14]);JSM.AddPolygonToBody(a,[5,15,7,13]);JSM.AddPolygonToBody(a,[16,22,18,20]);JSM.AddPolygonToBody(a,[17,21,19,23]);JSM.AddPolygonToBody(a,
[0,4,14,21,17,10]);JSM.AddPolygonToBody(a,[0,8,16,20,12,4]);JSM.AddPolygonToBody(a,[1,6,12,20,18,9]);JSM.AddPolygonToBody(a,[1,11,19,21,14,6]);JSM.AddPolygonToBody(a,[2,5,13,22,16,8]);JSM.AddPolygonToBody(a,[2,10,17,23,15,5]);JSM.AddPolygonToBody(a,[3,7,15,23,19,11]);JSM.AddPolygonToBody(a,[3,9,18,22,13,7]);return a};
JSM.GenerateRhombicuboctahedron=function(){var a=new JSM.Body,b=1+Math.sqrt(2);JSM.AddVertexToBody(a,1,1,+b);JSM.AddVertexToBody(a,1,1,-b);JSM.AddVertexToBody(a,1,-1,+b);JSM.AddVertexToBody(a,-1,1,+b);JSM.AddVertexToBody(a,1,-1,-b);JSM.AddVertexToBody(a,-1,1,-b);JSM.AddVertexToBody(a,-1,-1,+b);JSM.AddVertexToBody(a,-1,-1,-b);JSM.AddVertexToBody(a,1,+b,1);JSM.AddVertexToBody(a,1,+b,-1);JSM.AddVertexToBody(a,1,-b,1);JSM.AddVertexToBody(a,-1,+b,1);JSM.AddVertexToBody(a,1,-b,-1);JSM.AddVertexToBody(a,
-1,+b,-1);JSM.AddVertexToBody(a,-1,-b,1);JSM.AddVertexToBody(a,-1,-b,-1);JSM.AddVertexToBody(a,+b,1,1);JSM.AddVertexToBody(a,+b,1,-1);JSM.AddVertexToBody(a,+b,-1,1);JSM.AddVertexToBody(a,-b,1,1);JSM.AddVertexToBody(a,+b,-1,-1);JSM.AddVertexToBody(a,-b,1,-1);JSM.AddVertexToBody(a,-b,-1,1);JSM.AddVertexToBody(a,-b,-1,-1);JSM.AddPolygonToBody(a,[0,16,8]);JSM.AddPolygonToBody(a,[1,9,17]);JSM.AddPolygonToBody(a,[2,10,18]);JSM.AddPolygonToBody(a,[3,11,19]);JSM.AddPolygonToBody(a,[4,20,12]);JSM.AddPolygonToBody(a,
[5,21,13]);JSM.AddPolygonToBody(a,[6,22,14]);JSM.AddPolygonToBody(a,[7,15,23]);JSM.AddPolygonToBody(a,[0,2,18,16]);JSM.AddPolygonToBody(a,[0,3,6,2]);JSM.AddPolygonToBody(a,[0,8,11,3]);JSM.AddPolygonToBody(a,[1,4,7,5]);JSM.AddPolygonToBody(a,[1,5,13,9]);JSM.AddPolygonToBody(a,[1,17,20,4]);JSM.AddPolygonToBody(a,[2,6,14,10]);JSM.AddPolygonToBody(a,[3,19,22,6]);JSM.AddPolygonToBody(a,[4,12,15,7]);JSM.AddPolygonToBody(a,[5,7,23,21]);JSM.AddPolygonToBody(a,[8,9,13,11]);JSM.AddPolygonToBody(a,[8,16,17,
9]);JSM.AddPolygonToBody(a,[10,12,20,18]);JSM.AddPolygonToBody(a,[10,14,15,12]);JSM.AddPolygonToBody(a,[11,13,21,19]);JSM.AddPolygonToBody(a,[14,22,23,15]);JSM.AddPolygonToBody(a,[16,18,20,17]);JSM.AddPolygonToBody(a,[19,21,23,22]);return a};
JSM.GenerateTruncatedCuboctahedron=function(){var a=new JSM.Body,b=1+Math.sqrt(2),c=1+2*Math.sqrt(2);JSM.AddVertexToBody(a,1,+b,+c);JSM.AddVertexToBody(a,1,+b,-c);JSM.AddVertexToBody(a,1,-b,+c);JSM.AddVertexToBody(a,-1,+b,+c);JSM.AddVertexToBody(a,1,-b,-c);JSM.AddVertexToBody(a,-1,+b,-c);JSM.AddVertexToBody(a,-1,-b,+c);JSM.AddVertexToBody(a,-1,-b,-c);JSM.AddVertexToBody(a,1,+c,+b);JSM.AddVertexToBody(a,1,-c,+b);JSM.AddVertexToBody(a,1,+c,-b);JSM.AddVertexToBody(a,-1,+c,+b);JSM.AddVertexToBody(a,1,
-c,-b);JSM.AddVertexToBody(a,-1,-c,+b);JSM.AddVertexToBody(a,-1,+c,-b);JSM.AddVertexToBody(a,-1,-c,-b);JSM.AddVertexToBody(a,+b,1,+c);JSM.AddVertexToBody(a,+b,1,-c);JSM.AddVertexToBody(a,-b,1,+c);JSM.AddVertexToBody(a,+b,-1,+c);JSM.AddVertexToBody(a,-b,1,-c);JSM.AddVertexToBody(a,+b,-1,-c);JSM.AddVertexToBody(a,-b,-1,+c);JSM.AddVertexToBody(a,-b,-1,-c);JSM.AddVertexToBody(a,+b,+c,1);JSM.AddVertexToBody(a,+b,-c,1);JSM.AddVertexToBody(a,-b,+c,1);JSM.AddVertexToBody(a,+b,+c,-1);JSM.AddVertexToBody(a,
-b,-c,1);JSM.AddVertexToBody(a,+b,-c,-1);JSM.AddVertexToBody(a,-b,+c,-1);JSM.AddVertexToBody(a,-b,-c,-1);JSM.AddVertexToBody(a,+c,1,+b);JSM.AddVertexToBody(a,-c,1,+b);JSM.AddVertexToBody(a,+c,1,-b);JSM.AddVertexToBody(a,+c,-1,+b);JSM.AddVertexToBody(a,-c,1,-b);JSM.AddVertexToBody(a,-c,-1,+b);JSM.AddVertexToBody(a,+c,-1,-b);JSM.AddVertexToBody(a,-c,-1,-b);JSM.AddVertexToBody(a,+c,+b,1);JSM.AddVertexToBody(a,-c,+b,1);JSM.AddVertexToBody(a,+c,-b,1);JSM.AddVertexToBody(a,+c,+b,-1);JSM.AddVertexToBody(a,
-c,-b,1);JSM.AddVertexToBody(a,-c,+b,-1);JSM.AddVertexToBody(a,+c,-b,-1);JSM.AddVertexToBody(a,-c,-b,-1);JSM.AddPolygonToBody(a,[0,8,11,3]);JSM.AddPolygonToBody(a,[1,5,14,10]);JSM.AddPolygonToBody(a,[2,6,13,9]);JSM.AddPolygonToBody(a,[4,12,15,7]);JSM.AddPolygonToBody(a,[16,19,35,32]);JSM.AddPolygonToBody(a,[17,34,38,21]);JSM.AddPolygonToBody(a,[18,33,37,22]);JSM.AddPolygonToBody(a,[23,39,36,20]);JSM.AddPolygonToBody(a,[24,40,43,27]);JSM.AddPolygonToBody(a,[25,29,46,42]);JSM.AddPolygonToBody(a,[26,
30,45,41]);JSM.AddPolygonToBody(a,[28,44,47,31]);JSM.AddPolygonToBody(a,[0,16,32,40,24,8]);JSM.AddPolygonToBody(a,[1,10,27,43,34,17]);JSM.AddPolygonToBody(a,[2,9,25,42,35,19]);JSM.AddPolygonToBody(a,[3,11,26,41,33,18]);JSM.AddPolygonToBody(a,[4,21,38,46,29,12]);JSM.AddPolygonToBody(a,[5,20,36,45,30,14]);JSM.AddPolygonToBody(a,[6,22,37,44,28,13]);JSM.AddPolygonToBody(a,[7,15,31,47,39,23]);JSM.AddPolygonToBody(a,[0,3,18,22,6,2,19,16]);JSM.AddPolygonToBody(a,[1,17,21,4,7,23,20,5]);JSM.AddPolygonToBody(a,
[8,24,27,10,14,30,26,11]);JSM.AddPolygonToBody(a,[9,13,28,31,15,12,29,25]);JSM.AddPolygonToBody(a,[32,35,42,46,38,34,43,40]);JSM.AddPolygonToBody(a,[33,41,45,36,39,47,44,37]);return a};
JSM.GenerateSnubCube=function(){var a=new JSM.Body,b=1/3*(Math.pow(17+3*Math.sqrt(33),1/3)-Math.pow(-17+3*Math.sqrt(33),1/3)-1),c=1/b;JSM.AddVertexToBody(a,1,+b,-c);JSM.AddVertexToBody(a,1,-b,+c);JSM.AddVertexToBody(a,-1,+b,+c);JSM.AddVertexToBody(a,-1,-b,-c);JSM.AddVertexToBody(a,+b,-c,1);JSM.AddVertexToBody(a,-b,+c,1);JSM.AddVertexToBody(a,+b,+c,-1);JSM.AddVertexToBody(a,-b,-c,-1);JSM.AddVertexToBody(a,-c,1,+b);JSM.AddVertexToBody(a,+c,1,-b);JSM.AddVertexToBody(a,+c,-1,+b);JSM.AddVertexToBody(a,
-c,-1,-b);JSM.AddVertexToBody(a,1,+c,+b);JSM.AddVertexToBody(a,1,-c,-b);JSM.AddVertexToBody(a,-1,+c,-b);JSM.AddVertexToBody(a,-1,-c,+b);JSM.AddVertexToBody(a,+b,1,+c);JSM.AddVertexToBody(a,-b,1,-c);JSM.AddVertexToBody(a,-b,-1,+c);JSM.AddVertexToBody(a,+b,-1,-c);JSM.AddVertexToBody(a,+c,+b,1);JSM.AddVertexToBody(a,-c,-b,1);JSM.AddVertexToBody(a,+c,-b,-1);JSM.AddVertexToBody(a,-c,+b,-1);JSM.AddPolygonToBody(a,[0,6,9]);JSM.AddPolygonToBody(a,[0,9,22]);JSM.AddPolygonToBody(a,[0,17,6]);JSM.AddPolygonToBody(a,
[0,22,19]);JSM.AddPolygonToBody(a,[1,4,10]);JSM.AddPolygonToBody(a,[1,10,20]);JSM.AddPolygonToBody(a,[1,18,4]);JSM.AddPolygonToBody(a,[1,20,16]);JSM.AddPolygonToBody(a,[2,5,8]);JSM.AddPolygonToBody(a,[2,8,21]);JSM.AddPolygonToBody(a,[2,16,5]);JSM.AddPolygonToBody(a,[2,21,18]);JSM.AddPolygonToBody(a,[3,7,11]);JSM.AddPolygonToBody(a,[3,11,23]);JSM.AddPolygonToBody(a,[3,19,7]);JSM.AddPolygonToBody(a,[3,23,17]);JSM.AddPolygonToBody(a,[4,13,10]);JSM.AddPolygonToBody(a,[4,18,15]);JSM.AddPolygonToBody(a,
[5,14,8]);JSM.AddPolygonToBody(a,[5,16,12]);JSM.AddPolygonToBody(a,[6,12,9]);JSM.AddPolygonToBody(a,[6,17,14]);JSM.AddPolygonToBody(a,[7,15,11]);JSM.AddPolygonToBody(a,[7,19,13]);JSM.AddPolygonToBody(a,[8,14,23]);JSM.AddPolygonToBody(a,[9,12,20]);JSM.AddPolygonToBody(a,[10,13,22]);JSM.AddPolygonToBody(a,[11,15,21]);JSM.AddPolygonToBody(a,[12,16,20]);JSM.AddPolygonToBody(a,[13,19,22]);JSM.AddPolygonToBody(a,[14,17,23]);JSM.AddPolygonToBody(a,[15,18,21]);JSM.AddPolygonToBody(a,[0,19,3,17]);JSM.AddPolygonToBody(a,
[1,16,2,18]);JSM.AddPolygonToBody(a,[4,15,7,13]);JSM.AddPolygonToBody(a,[5,12,6,14]);JSM.AddPolygonToBody(a,[8,23,11,21]);JSM.AddPolygonToBody(a,[9,20,10,22]);return a};
JSM.GenerateIcosidodecahedron=function(){var a=new JSM.Body,b=(1+Math.sqrt(5))/2,c=b/2,d=(1+b)/2;JSM.AddVertexToBody(a,0,0,+b);JSM.AddVertexToBody(a,0,0,-b);JSM.AddVertexToBody(a,0,+b,0);JSM.AddVertexToBody(a,0,-b,0);JSM.AddVertexToBody(a,+b,0,0);JSM.AddVertexToBody(a,-b,0,0);JSM.AddVertexToBody(a,0.5,+c,+d);JSM.AddVertexToBody(a,0.5,+c,-d);JSM.AddVertexToBody(a,0.5,-c,+d);JSM.AddVertexToBody(a,-0.5,+c,+d);JSM.AddVertexToBody(a,0.5,-c,-d);JSM.AddVertexToBody(a,-0.5,+c,-d);JSM.AddVertexToBody(a,-0.5,
-c,+d);JSM.AddVertexToBody(a,-0.5,-c,-d);JSM.AddVertexToBody(a,+c,+d,0.5);JSM.AddVertexToBody(a,+c,-d,0.5);JSM.AddVertexToBody(a,-c,+d,0.5);JSM.AddVertexToBody(a,+c,+d,-0.5);JSM.AddVertexToBody(a,-c,-d,0.5);JSM.AddVertexToBody(a,+c,-d,-0.5);JSM.AddVertexToBody(a,-c,+d,-0.5);JSM.AddVertexToBody(a,-c,-d,-0.5);JSM.AddVertexToBody(a,+d,0.5,+c);JSM.AddVertexToBody(a,-d,0.5,+c);JSM.AddVertexToBody(a,+d,0.5,-c);JSM.AddVertexToBody(a,+d,-0.5,+c);JSM.AddVertexToBody(a,-d,0.5,-c);JSM.AddVertexToBody(a,-d,-0.5,
+c);JSM.AddVertexToBody(a,+d,-0.5,-c);JSM.AddVertexToBody(a,-d,-0.5,-c);JSM.AddPolygonToBody(a,[0,6,9]);JSM.AddPolygonToBody(a,[0,12,8]);JSM.AddPolygonToBody(a,[1,10,13]);JSM.AddPolygonToBody(a,[1,11,7]);JSM.AddPolygonToBody(a,[2,14,17]);JSM.AddPolygonToBody(a,[2,20,16]);JSM.AddPolygonToBody(a,[3,18,21]);JSM.AddPolygonToBody(a,[3,19,15]);JSM.AddPolygonToBody(a,[4,22,25]);JSM.AddPolygonToBody(a,[4,28,24]);JSM.AddPolygonToBody(a,[5,26,29]);JSM.AddPolygonToBody(a,[5,27,23]);JSM.AddPolygonToBody(a,[6,
22,14]);JSM.AddPolygonToBody(a,[7,17,24]);JSM.AddPolygonToBody(a,[8,15,25]);JSM.AddPolygonToBody(a,[9,16,23]);JSM.AddPolygonToBody(a,[10,28,19]);JSM.AddPolygonToBody(a,[11,26,20]);JSM.AddPolygonToBody(a,[12,27,18]);JSM.AddPolygonToBody(a,[13,21,29]);JSM.AddPolygonToBody(a,[0,8,25,22,6]);JSM.AddPolygonToBody(a,[0,9,23,27,12]);JSM.AddPolygonToBody(a,[1,7,24,28,10]);JSM.AddPolygonToBody(a,[1,13,29,26,11]);JSM.AddPolygonToBody(a,[2,16,9,6,14]);JSM.AddPolygonToBody(a,[2,17,7,11,20]);JSM.AddPolygonToBody(a,
[3,15,8,12,18]);JSM.AddPolygonToBody(a,[3,21,13,10,19]);JSM.AddPolygonToBody(a,[4,24,17,14,22]);JSM.AddPolygonToBody(a,[4,25,15,19,28]);JSM.AddPolygonToBody(a,[5,23,16,20,26]);JSM.AddPolygonToBody(a,[5,29,21,18,27]);return a};
JSM.GenerateTruncatedDodecahedron=function(){var a=new JSM.Body,b=(1+Math.sqrt(5))/2,c=1/b,d=2+b,e=2*b,f=Math.pow(b,2);JSM.AddVertexToBody(a,0,+c,+d);JSM.AddVertexToBody(a,0,+c,-d);JSM.AddVertexToBody(a,0,-c,+d);JSM.AddVertexToBody(a,0,-c,-d);JSM.AddVertexToBody(a,+d,0,+c);JSM.AddVertexToBody(a,-d,0,+c);JSM.AddVertexToBody(a,+d,0,-c);JSM.AddVertexToBody(a,-d,0,-c);JSM.AddVertexToBody(a,+c,+d,0);JSM.AddVertexToBody(a,+c,-d,0);JSM.AddVertexToBody(a,-c,+d,0);JSM.AddVertexToBody(a,-c,-d,0);JSM.AddVertexToBody(a,
+c,+b,+e);JSM.AddVertexToBody(a,+c,+b,-e);JSM.AddVertexToBody(a,+c,-b,+e);JSM.AddVertexToBody(a,-c,+b,+e);JSM.AddVertexToBody(a,+c,-b,-e);JSM.AddVertexToBody(a,-c,+b,-e);JSM.AddVertexToBody(a,-c,-b,+e);JSM.AddVertexToBody(a,-c,-b,-e);JSM.AddVertexToBody(a,+e,+c,+b);JSM.AddVertexToBody(a,+e,+c,-b);JSM.AddVertexToBody(a,+e,-c,+b);JSM.AddVertexToBody(a,-e,+c,+b);JSM.AddVertexToBody(a,+e,-c,-b);JSM.AddVertexToBody(a,-e,+c,-b);JSM.AddVertexToBody(a,-e,-c,+b);JSM.AddVertexToBody(a,-e,-c,-b);JSM.AddVertexToBody(a,
+b,+e,+c);JSM.AddVertexToBody(a,+b,+e,-c);JSM.AddVertexToBody(a,+b,-e,+c);JSM.AddVertexToBody(a,-b,+e,+c);JSM.AddVertexToBody(a,+b,-e,-c);JSM.AddVertexToBody(a,-b,+e,-c);JSM.AddVertexToBody(a,-b,-e,+c);JSM.AddVertexToBody(a,-b,-e,-c);JSM.AddVertexToBody(a,+b,2,+f);JSM.AddVertexToBody(a,+b,2,-f);JSM.AddVertexToBody(a,+b,-2,+f);JSM.AddVertexToBody(a,-b,2,+f);JSM.AddVertexToBody(a,+b,-2,-f);JSM.AddVertexToBody(a,-b,2,-f);JSM.AddVertexToBody(a,-b,-2,+f);JSM.AddVertexToBody(a,-b,-2,-f);JSM.AddVertexToBody(a,
+f,+b,2);JSM.AddVertexToBody(a,+f,+b,-2);JSM.AddVertexToBody(a,+f,-b,2);JSM.AddVertexToBody(a,-f,+b,2);JSM.AddVertexToBody(a,+f,-b,-2);JSM.AddVertexToBody(a,-f,+b,-2);JSM.AddVertexToBody(a,-f,-b,2);JSM.AddVertexToBody(a,-f,-b,-2);JSM.AddVertexToBody(a,2,+f,+b);JSM.AddVertexToBody(a,2,+f,-b);JSM.AddVertexToBody(a,2,-f,+b);JSM.AddVertexToBody(a,-2,+f,+b);JSM.AddVertexToBody(a,2,-f,-b);JSM.AddVertexToBody(a,-2,+f,-b);JSM.AddVertexToBody(a,-2,-f,+b);JSM.AddVertexToBody(a,-2,-f,-b);JSM.AddPolygonToBody(a,
[0,12,15]);JSM.AddPolygonToBody(a,[1,17,13]);JSM.AddPolygonToBody(a,[2,18,14]);JSM.AddPolygonToBody(a,[3,16,19]);JSM.AddPolygonToBody(a,[4,20,22]);JSM.AddPolygonToBody(a,[5,26,23]);JSM.AddPolygonToBody(a,[6,24,21]);JSM.AddPolygonToBody(a,[7,25,27]);JSM.AddPolygonToBody(a,[8,28,29]);JSM.AddPolygonToBody(a,[9,32,30]);JSM.AddPolygonToBody(a,[10,33,31]);JSM.AddPolygonToBody(a,[11,34,35]);JSM.AddPolygonToBody(a,[36,44,52]);JSM.AddPolygonToBody(a,[37,53,45]);JSM.AddPolygonToBody(a,[38,54,46]);JSM.AddPolygonToBody(a,
[39,55,47]);JSM.AddPolygonToBody(a,[40,48,56]);JSM.AddPolygonToBody(a,[41,49,57]);JSM.AddPolygonToBody(a,[42,50,58]);JSM.AddPolygonToBody(a,[43,59,51]);JSM.AddPolygonToBody(a,[0,2,14,38,46,22,20,44,36,12]);JSM.AddPolygonToBody(a,[0,15,39,47,23,26,50,42,18,2]);JSM.AddPolygonToBody(a,[1,3,19,43,51,27,25,49,41,17]);JSM.AddPolygonToBody(a,[1,13,37,45,21,24,48,40,16,3]);JSM.AddPolygonToBody(a,[4,6,21,45,53,29,28,52,44,20]);JSM.AddPolygonToBody(a,[4,22,46,54,30,32,56,48,24,6]);JSM.AddPolygonToBody(a,[5,
7,27,51,59,35,34,58,50,26]);JSM.AddPolygonToBody(a,[5,23,47,55,31,33,57,49,25,7]);JSM.AddPolygonToBody(a,[8,10,31,55,39,15,12,36,52,28]);JSM.AddPolygonToBody(a,[8,29,53,37,13,17,41,57,33,10]);JSM.AddPolygonToBody(a,[9,11,35,59,43,19,16,40,56,32]);JSM.AddPolygonToBody(a,[9,30,54,38,14,18,42,58,34,11]);return a};
JSM.GenerateTruncatedIcosahedron=function(){var a=new JSM.Body,b=(1+Math.sqrt(5))/2,c=3*b,d=1+2*b,e=2+b,f=2*b;JSM.AddVertexToBody(a,0,1,+c);JSM.AddVertexToBody(a,0,1,-c);JSM.AddVertexToBody(a,0,-1,+c);JSM.AddVertexToBody(a,0,-1,-c);JSM.AddVertexToBody(a,1,+c,0);JSM.AddVertexToBody(a,1,-c,0);JSM.AddVertexToBody(a,-1,+c,0);JSM.AddVertexToBody(a,-1,-c,0);JSM.AddVertexToBody(a,+c,0,1);JSM.AddVertexToBody(a,-c,0,1);JSM.AddVertexToBody(a,+c,0,-1);JSM.AddVertexToBody(a,-c,0,-1);JSM.AddVertexToBody(a,2,+d,
+b);JSM.AddVertexToBody(a,2,+d,-b);JSM.AddVertexToBody(a,2,-d,+b);JSM.AddVertexToBody(a,-2,+d,+b);JSM.AddVertexToBody(a,2,-d,-b);JSM.AddVertexToBody(a,-2,+d,-b);JSM.AddVertexToBody(a,-2,-d,+b);JSM.AddVertexToBody(a,-2,-d,-b);JSM.AddVertexToBody(a,+d,+b,2);JSM.AddVertexToBody(a,+d,-b,2);JSM.AddVertexToBody(a,-d,+b,2);JSM.AddVertexToBody(a,+d,+b,-2);JSM.AddVertexToBody(a,-d,-b,2);JSM.AddVertexToBody(a,+d,-b,-2);JSM.AddVertexToBody(a,-d,+b,-2);JSM.AddVertexToBody(a,-d,-b,-2);JSM.AddVertexToBody(a,+b,
2,+d);JSM.AddVertexToBody(a,-b,2,+d);JSM.AddVertexToBody(a,+b,2,-d);JSM.AddVertexToBody(a,+b,-2,+d);JSM.AddVertexToBody(a,-b,2,-d);JSM.AddVertexToBody(a,-b,-2,+d);JSM.AddVertexToBody(a,+b,-2,-d);JSM.AddVertexToBody(a,-b,-2,-d);JSM.AddVertexToBody(a,1,+e,+f);JSM.AddVertexToBody(a,1,+e,-f);JSM.AddVertexToBody(a,1,-e,+f);JSM.AddVertexToBody(a,-1,+e,+f);JSM.AddVertexToBody(a,1,-e,-f);JSM.AddVertexToBody(a,-1,+e,-f);JSM.AddVertexToBody(a,-1,-e,+f);JSM.AddVertexToBody(a,-1,-e,-f);JSM.AddVertexToBody(a,
+e,+f,1);JSM.AddVertexToBody(a,+e,-f,1);JSM.AddVertexToBody(a,-e,+f,1);JSM.AddVertexToBody(a,+e,+f,-1);JSM.AddVertexToBody(a,-e,-f,1);JSM.AddVertexToBody(a,+e,-f,-1);JSM.AddVertexToBody(a,-e,+f,-1);JSM.AddVertexToBody(a,-e,-f,-1);JSM.AddVertexToBody(a,+f,1,+e);JSM.AddVertexToBody(a,-f,1,+e);JSM.AddVertexToBody(a,+f,1,-e);JSM.AddVertexToBody(a,+f,-1,+e);JSM.AddVertexToBody(a,-f,1,-e);JSM.AddVertexToBody(a,-f,-1,+e);JSM.AddVertexToBody(a,+f,-1,-e);JSM.AddVertexToBody(a,-f,-1,-e);JSM.AddPolygonToBody(a,
[0,28,36,39,29]);JSM.AddPolygonToBody(a,[1,32,41,37,30]);JSM.AddPolygonToBody(a,[2,33,42,38,31]);JSM.AddPolygonToBody(a,[3,34,40,43,35]);JSM.AddPolygonToBody(a,[4,12,44,47,13]);JSM.AddPolygonToBody(a,[5,16,49,45,14]);JSM.AddPolygonToBody(a,[6,17,50,46,15]);JSM.AddPolygonToBody(a,[7,18,48,51,19]);JSM.AddPolygonToBody(a,[8,20,52,55,21]);JSM.AddPolygonToBody(a,[9,24,57,53,22]);JSM.AddPolygonToBody(a,[10,25,58,54,23]);JSM.AddPolygonToBody(a,[11,26,56,59,27]);JSM.AddPolygonToBody(a,[0,2,31,55,52,28]);
JSM.AddPolygonToBody(a,[0,29,53,57,33,2]);JSM.AddPolygonToBody(a,[1,3,35,59,56,32]);JSM.AddPolygonToBody(a,[1,30,54,58,34,3]);JSM.AddPolygonToBody(a,[4,6,15,39,36,12]);JSM.AddPolygonToBody(a,[4,13,37,41,17,6]);JSM.AddPolygonToBody(a,[5,7,19,43,40,16]);JSM.AddPolygonToBody(a,[5,14,38,42,18,7]);JSM.AddPolygonToBody(a,[8,10,23,47,44,20]);JSM.AddPolygonToBody(a,[8,21,45,49,25,10]);JSM.AddPolygonToBody(a,[9,11,27,51,48,24]);JSM.AddPolygonToBody(a,[9,22,46,50,26,11]);JSM.AddPolygonToBody(a,[12,36,28,52,
20,44]);JSM.AddPolygonToBody(a,[13,47,23,54,30,37]);JSM.AddPolygonToBody(a,[14,45,21,55,31,38]);JSM.AddPolygonToBody(a,[15,46,22,53,29,39]);JSM.AddPolygonToBody(a,[16,40,34,58,25,49]);JSM.AddPolygonToBody(a,[17,41,32,56,26,50]);JSM.AddPolygonToBody(a,[18,42,33,57,24,48]);JSM.AddPolygonToBody(a,[19,51,27,59,35,43]);return a};
JSM.GenerateRhombicosidodecahedron=function(){var a=new JSM.Body,b=(1+Math.sqrt(5))/2,c=Math.pow(b,2),d=Math.pow(b,3),e=2*b,f=2+b;JSM.AddVertexToBody(a,1,1,+d);JSM.AddVertexToBody(a,1,1,-d);JSM.AddVertexToBody(a,1,-1,+d);JSM.AddVertexToBody(a,-1,1,+d);JSM.AddVertexToBody(a,1,-1,-d);JSM.AddVertexToBody(a,-1,1,-d);JSM.AddVertexToBody(a,-1,-1,+d);JSM.AddVertexToBody(a,-1,-1,-d);JSM.AddVertexToBody(a,+d,1,1);JSM.AddVertexToBody(a,+d,1,-1);JSM.AddVertexToBody(a,+d,-1,1);JSM.AddVertexToBody(a,-d,1,1);JSM.AddVertexToBody(a,
+d,-1,-1);JSM.AddVertexToBody(a,-d,1,-1);JSM.AddVertexToBody(a,-d,-1,1);JSM.AddVertexToBody(a,-d,-1,-1);JSM.AddVertexToBody(a,1,+d,1);JSM.AddVertexToBody(a,1,+d,-1);JSM.AddVertexToBody(a,1,-d,1);JSM.AddVertexToBody(a,-1,+d,1);JSM.AddVertexToBody(a,1,-d,-1);JSM.AddVertexToBody(a,-1,+d,-1);JSM.AddVertexToBody(a,-1,-d,1);JSM.AddVertexToBody(a,-1,-d,-1);JSM.AddVertexToBody(a,+c,+b,+e);JSM.AddVertexToBody(a,+c,+b,-e);JSM.AddVertexToBody(a,+c,-b,+e);JSM.AddVertexToBody(a,-c,+b,+e);JSM.AddVertexToBody(a,
+c,-b,-e);JSM.AddVertexToBody(a,-c,+b,-e);JSM.AddVertexToBody(a,-c,-b,+e);JSM.AddVertexToBody(a,-c,-b,-e);JSM.AddVertexToBody(a,+e,+c,+b);JSM.AddVertexToBody(a,+e,+c,-b);JSM.AddVertexToBody(a,+e,-c,+b);JSM.AddVertexToBody(a,-e,+c,+b);JSM.AddVertexToBody(a,+e,-c,-b);JSM.AddVertexToBody(a,-e,+c,-b);JSM.AddVertexToBody(a,-e,-c,+b);JSM.AddVertexToBody(a,-e,-c,-b);JSM.AddVertexToBody(a,+b,+e,+c);JSM.AddVertexToBody(a,+b,+e,-c);JSM.AddVertexToBody(a,+b,-e,+c);JSM.AddVertexToBody(a,-b,+e,+c);JSM.AddVertexToBody(a,
+b,-e,-c);JSM.AddVertexToBody(a,-b,+e,-c);JSM.AddVertexToBody(a,-b,-e,+c);JSM.AddVertexToBody(a,-b,-e,-c);JSM.AddVertexToBody(a,+f,0,+c);JSM.AddVertexToBody(a,+f,0,-c);JSM.AddVertexToBody(a,-f,0,+c);JSM.AddVertexToBody(a,-f,0,-c);JSM.AddVertexToBody(a,+c,+f,0);JSM.AddVertexToBody(a,-c,+f,0);JSM.AddVertexToBody(a,+c,-f,0);JSM.AddVertexToBody(a,-c,-f,0);JSM.AddVertexToBody(a,0,+c,+f);JSM.AddVertexToBody(a,0,-c,+f);JSM.AddVertexToBody(a,0,+c,-f);JSM.AddVertexToBody(a,0,-c,-f);JSM.AddPolygonToBody(a,
[0,56,3]);JSM.AddPolygonToBody(a,[1,5,58]);JSM.AddPolygonToBody(a,[2,6,57]);JSM.AddPolygonToBody(a,[4,59,7]);JSM.AddPolygonToBody(a,[8,48,10]);JSM.AddPolygonToBody(a,[9,12,49]);JSM.AddPolygonToBody(a,[11,14,50]);JSM.AddPolygonToBody(a,[13,51,15]);JSM.AddPolygonToBody(a,[16,52,17]);JSM.AddPolygonToBody(a,[18,20,54]);JSM.AddPolygonToBody(a,[19,21,53]);JSM.AddPolygonToBody(a,[22,55,23]);JSM.AddPolygonToBody(a,[24,32,40]);JSM.AddPolygonToBody(a,[25,41,33]);JSM.AddPolygonToBody(a,[26,42,34]);JSM.AddPolygonToBody(a,
[27,43,35]);JSM.AddPolygonToBody(a,[28,36,44]);JSM.AddPolygonToBody(a,[29,37,45]);JSM.AddPolygonToBody(a,[30,38,46]);JSM.AddPolygonToBody(a,[31,47,39]);JSM.AddPolygonToBody(a,[0,3,6,2]);JSM.AddPolygonToBody(a,[0,24,40,56]);JSM.AddPolygonToBody(a,[1,4,7,5]);JSM.AddPolygonToBody(a,[1,58,41,25]);JSM.AddPolygonToBody(a,[2,57,42,26]);JSM.AddPolygonToBody(a,[3,56,43,27]);JSM.AddPolygonToBody(a,[4,28,44,59]);JSM.AddPolygonToBody(a,[5,29,45,58]);JSM.AddPolygonToBody(a,[6,30,46,57]);JSM.AddPolygonToBody(a,
[7,59,47,31]);JSM.AddPolygonToBody(a,[8,10,12,9]);JSM.AddPolygonToBody(a,[8,32,24,48]);JSM.AddPolygonToBody(a,[9,49,25,33]);JSM.AddPolygonToBody(a,[10,48,26,34]);JSM.AddPolygonToBody(a,[11,13,15,14]);JSM.AddPolygonToBody(a,[11,50,27,35]);JSM.AddPolygonToBody(a,[12,36,28,49]);JSM.AddPolygonToBody(a,[13,37,29,51]);JSM.AddPolygonToBody(a,[14,38,30,50]);JSM.AddPolygonToBody(a,[15,51,31,39]);JSM.AddPolygonToBody(a,[16,17,21,19]);JSM.AddPolygonToBody(a,[16,40,32,52]);JSM.AddPolygonToBody(a,[17,52,33,41]);
JSM.AddPolygonToBody(a,[18,22,23,20]);JSM.AddPolygonToBody(a,[18,54,34,42]);JSM.AddPolygonToBody(a,[19,53,35,43]);JSM.AddPolygonToBody(a,[20,44,36,54]);JSM.AddPolygonToBody(a,[21,45,37,53]);JSM.AddPolygonToBody(a,[22,46,38,55]);JSM.AddPolygonToBody(a,[23,55,39,47]);JSM.AddPolygonToBody(a,[0,2,26,48,24]);JSM.AddPolygonToBody(a,[1,25,49,28,4]);JSM.AddPolygonToBody(a,[3,27,50,30,6]);JSM.AddPolygonToBody(a,[5,7,31,51,29]);JSM.AddPolygonToBody(a,[8,9,33,52,32]);JSM.AddPolygonToBody(a,[10,34,54,36,12]);
JSM.AddPolygonToBody(a,[11,35,53,37,13]);JSM.AddPolygonToBody(a,[14,15,39,55,38]);JSM.AddPolygonToBody(a,[16,19,43,56,40]);JSM.AddPolygonToBody(a,[17,41,58,45,21]);JSM.AddPolygonToBody(a,[18,42,57,46,22]);JSM.AddPolygonToBody(a,[20,23,47,59,44]);return a};
JSM.GenerateTruncatedIcosidodecahedron=function(){var a=new JSM.Body,b=(1+Math.sqrt(5))/2,c=1/b,d=3+b,e=2/b,f=1+2*b,g=Math.pow(b,2),h=-1+3*b,k=-1+2*b,l=2+b,m=2*b;JSM.AddVertexToBody(a,+c,+c,+d);JSM.AddVertexToBody(a,+c,+c,-d);JSM.AddVertexToBody(a,+c,-c,+d);JSM.AddVertexToBody(a,-c,+c,+d);JSM.AddVertexToBody(a,+c,-c,-d);JSM.AddVertexToBody(a,-c,+c,-d);JSM.AddVertexToBody(a,-c,-c,+d);JSM.AddVertexToBody(a,-c,-c,-d);JSM.AddVertexToBody(a,+c,+d,+c);JSM.AddVertexToBody(a,+c,-d,+c);JSM.AddVertexToBody(a,
-c,+d,+c);JSM.AddVertexToBody(a,+c,+d,-c);JSM.AddVertexToBody(a,-c,-d,+c);JSM.AddVertexToBody(a,+c,-d,-c);JSM.AddVertexToBody(a,-c,+d,-c);JSM.AddVertexToBody(a,-c,-d,-c);JSM.AddVertexToBody(a,+d,+c,+c);JSM.AddVertexToBody(a,-d,+c,+c);JSM.AddVertexToBody(a,+d,+c,-c);JSM.AddVertexToBody(a,+d,-c,+c);JSM.AddVertexToBody(a,-d,+c,-c);JSM.AddVertexToBody(a,-d,-c,+c);JSM.AddVertexToBody(a,+d,-c,-c);JSM.AddVertexToBody(a,-d,-c,-c);JSM.AddVertexToBody(a,+e,+b,+f);JSM.AddVertexToBody(a,+e,+b,-f);JSM.AddVertexToBody(a,
+e,-b,+f);JSM.AddVertexToBody(a,-e,+b,+f);JSM.AddVertexToBody(a,+e,-b,-f);JSM.AddVertexToBody(a,-e,+b,-f);JSM.AddVertexToBody(a,-e,-b,+f);JSM.AddVertexToBody(a,-e,-b,-f);JSM.AddVertexToBody(a,+b,+f,+e);JSM.AddVertexToBody(a,+b,-f,+e);JSM.AddVertexToBody(a,-b,+f,+e);JSM.AddVertexToBody(a,+b,+f,-e);JSM.AddVertexToBody(a,-b,-f,+e);JSM.AddVertexToBody(a,+b,-f,-e);JSM.AddVertexToBody(a,-b,+f,-e);JSM.AddVertexToBody(a,-b,-f,-e);JSM.AddVertexToBody(a,+f,+e,+b);JSM.AddVertexToBody(a,-f,+e,+b);JSM.AddVertexToBody(a,
+f,+e,-b);JSM.AddVertexToBody(a,+f,-e,+b);JSM.AddVertexToBody(a,-f,+e,-b);JSM.AddVertexToBody(a,-f,-e,+b);JSM.AddVertexToBody(a,+f,-e,-b);JSM.AddVertexToBody(a,-f,-e,-b);JSM.AddVertexToBody(a,+c,+g,+h);JSM.AddVertexToBody(a,+c,+g,-h);JSM.AddVertexToBody(a,+c,-g,+h);JSM.AddVertexToBody(a,-c,+g,+h);JSM.AddVertexToBody(a,+c,-g,-h);JSM.AddVertexToBody(a,-c,+g,-h);JSM.AddVertexToBody(a,-c,-g,+h);JSM.AddVertexToBody(a,-c,-g,-h);JSM.AddVertexToBody(a,+g,+h,+c);JSM.AddVertexToBody(a,+g,-h,+c);JSM.AddVertexToBody(a,
-g,+h,+c);JSM.AddVertexToBody(a,+g,+h,-c);JSM.AddVertexToBody(a,-g,-h,+c);JSM.AddVertexToBody(a,+g,-h,-c);JSM.AddVertexToBody(a,-g,+h,-c);JSM.AddVertexToBody(a,-g,-h,-c);JSM.AddVertexToBody(a,+h,+c,+g);JSM.AddVertexToBody(a,-h,+c,+g);JSM.AddVertexToBody(a,+h,+c,-g);JSM.AddVertexToBody(a,+h,-c,+g);JSM.AddVertexToBody(a,-h,+c,-g);JSM.AddVertexToBody(a,-h,-c,+g);JSM.AddVertexToBody(a,+h,-c,-g);JSM.AddVertexToBody(a,-h,-c,-g);JSM.AddVertexToBody(a,+k,2,+l);JSM.AddVertexToBody(a,+k,2,-l);JSM.AddVertexToBody(a,
+k,-2,+l);JSM.AddVertexToBody(a,-k,2,+l);JSM.AddVertexToBody(a,+k,-2,-l);JSM.AddVertexToBody(a,-k,2,-l);JSM.AddVertexToBody(a,-k,-2,+l);JSM.AddVertexToBody(a,-k,-2,-l);JSM.AddVertexToBody(a,2,+l,+k);JSM.AddVertexToBody(a,2,-l,+k);JSM.AddVertexToBody(a,-2,+l,+k);JSM.AddVertexToBody(a,2,+l,-k);JSM.AddVertexToBody(a,-2,-l,+k);JSM.AddVertexToBody(a,2,-l,-k);JSM.AddVertexToBody(a,-2,+l,-k);JSM.AddVertexToBody(a,-2,-l,-k);JSM.AddVertexToBody(a,+l,+k,2);JSM.AddVertexToBody(a,-l,+k,2);JSM.AddVertexToBody(a,
+l,+k,-2);JSM.AddVertexToBody(a,+l,-k,2);JSM.AddVertexToBody(a,-l,+k,-2);JSM.AddVertexToBody(a,-l,-k,2);JSM.AddVertexToBody(a,+l,-k,-2);JSM.AddVertexToBody(a,-l,-k,-2);JSM.AddVertexToBody(a,+b,3,+m);JSM.AddVertexToBody(a,+b,3,-m);JSM.AddVertexToBody(a,+b,-3,+m);JSM.AddVertexToBody(a,-b,3,+m);JSM.AddVertexToBody(a,+b,-3,-m);JSM.AddVertexToBody(a,-b,3,-m);JSM.AddVertexToBody(a,-b,-3,+m);JSM.AddVertexToBody(a,-b,-3,-m);JSM.AddVertexToBody(a,3,+m,+b);JSM.AddVertexToBody(a,3,-m,+b);JSM.AddVertexToBody(a,
-3,+m,+b);JSM.AddVertexToBody(a,3,+m,-b);JSM.AddVertexToBody(a,-3,-m,+b);JSM.AddVertexToBody(a,3,-m,-b);JSM.AddVertexToBody(a,-3,+m,-b);JSM.AddVertexToBody(a,-3,-m,-b);JSM.AddVertexToBody(a,+m,+b,3);JSM.AddVertexToBody(a,-m,+b,3);JSM.AddVertexToBody(a,+m,+b,-3);JSM.AddVertexToBody(a,+m,-b,3);JSM.AddVertexToBody(a,-m,+b,-3);JSM.AddVertexToBody(a,-m,-b,3);JSM.AddVertexToBody(a,+m,-b,-3);JSM.AddVertexToBody(a,-m,-b,-3);JSM.AddPolygonToBody(a,[0,3,6,2]);JSM.AddPolygonToBody(a,[1,4,7,5]);JSM.AddPolygonToBody(a,
[8,11,14,10]);JSM.AddPolygonToBody(a,[9,12,15,13]);JSM.AddPolygonToBody(a,[16,19,22,18]);JSM.AddPolygonToBody(a,[17,20,23,21]);JSM.AddPolygonToBody(a,[24,72,96,48]);JSM.AddPolygonToBody(a,[25,49,97,73]);JSM.AddPolygonToBody(a,[26,50,98,74]);JSM.AddPolygonToBody(a,[27,51,99,75]);JSM.AddPolygonToBody(a,[28,76,100,52]);JSM.AddPolygonToBody(a,[29,77,101,53]);JSM.AddPolygonToBody(a,[30,78,102,54]);JSM.AddPolygonToBody(a,[31,55,103,79]);JSM.AddPolygonToBody(a,[32,80,104,56]);JSM.AddPolygonToBody(a,[33,
57,105,81]);JSM.AddPolygonToBody(a,[34,58,106,82]);JSM.AddPolygonToBody(a,[35,59,107,83]);JSM.AddPolygonToBody(a,[36,84,108,60]);JSM.AddPolygonToBody(a,[37,85,109,61]);JSM.AddPolygonToBody(a,[38,86,110,62]);JSM.AddPolygonToBody(a,[39,63,111,87]);JSM.AddPolygonToBody(a,[40,88,112,64]);JSM.AddPolygonToBody(a,[41,65,113,89]);JSM.AddPolygonToBody(a,[42,66,114,90]);JSM.AddPolygonToBody(a,[43,67,115,91]);JSM.AddPolygonToBody(a,[44,92,116,68]);JSM.AddPolygonToBody(a,[45,93,117,69]);JSM.AddPolygonToBody(a,
[46,94,118,70]);JSM.AddPolygonToBody(a,[47,71,119,95]);JSM.AddPolygonToBody(a,[0,24,48,51,27,3]);JSM.AddPolygonToBody(a,[1,5,29,53,49,25]);JSM.AddPolygonToBody(a,[2,6,30,54,50,26]);JSM.AddPolygonToBody(a,[4,28,52,55,31,7]);JSM.AddPolygonToBody(a,[8,32,56,59,35,11]);JSM.AddPolygonToBody(a,[9,13,37,61,57,33]);JSM.AddPolygonToBody(a,[10,14,38,62,58,34]);JSM.AddPolygonToBody(a,[12,36,60,63,39,15]);JSM.AddPolygonToBody(a,[16,40,64,67,43,19]);JSM.AddPolygonToBody(a,[17,21,45,69,65,41]);JSM.AddPolygonToBody(a,
[18,22,46,70,66,42]);JSM.AddPolygonToBody(a,[20,44,68,71,47,23]);JSM.AddPolygonToBody(a,[72,112,88,104,80,96]);JSM.AddPolygonToBody(a,[73,97,83,107,90,114]);JSM.AddPolygonToBody(a,[74,98,81,105,91,115]);JSM.AddPolygonToBody(a,[75,99,82,106,89,113]);JSM.AddPolygonToBody(a,[76,118,94,109,85,100]);JSM.AddPolygonToBody(a,[78,117,93,108,84,102]);JSM.AddPolygonToBody(a,[79,103,87,111,95,119]);JSM.AddPolygonToBody(a,[86,101,77,116,92,110]);JSM.AddPolygonToBody(a,[0,2,26,74,115,67,64,112,72,24]);JSM.AddPolygonToBody(a,
[1,25,73,114,66,70,118,76,28,4]);JSM.AddPolygonToBody(a,[3,27,75,113,65,69,117,78,30,6]);JSM.AddPolygonToBody(a,[5,7,31,79,119,71,68,116,77,29]);JSM.AddPolygonToBody(a,[8,10,34,82,99,51,48,96,80,32]);JSM.AddPolygonToBody(a,[9,33,81,98,50,54,102,84,36,12]);JSM.AddPolygonToBody(a,[11,35,83,97,49,53,101,86,38,14]);JSM.AddPolygonToBody(a,[13,15,39,87,103,55,52,100,85,37]);JSM.AddPolygonToBody(a,[16,18,42,90,107,59,56,104,88,40]);JSM.AddPolygonToBody(a,[17,41,89,106,58,62,110,92,44,20]);JSM.AddPolygonToBody(a,
[19,43,91,105,57,61,109,94,46,22]);JSM.AddPolygonToBody(a,[21,23,47,95,111,63,60,108,93,45]);return a};
JSM.GenerateSnubDodecahedron=function(){var a=new JSM.Body,b=(1+Math.sqrt(5))/2,c=Math.pow(b/2+0.5*Math.sqrt(b-5/27),1/3)+Math.pow(b/2-0.5*Math.sqrt(b-5/27),1/3),d=c-1/c,e=c*b+Math.pow(b,2)+b/c,c=2*d,f=2*e,g=d+e/b+b,h=-(d*b)+e+1/b,k=d/b+e*b-1,l=-(d/b)+e*b+1,m=-d+e/b-b,n=d*b+e-1/b,p=-(d/b)+e*b-1,r=d-e/b-b,q=d*b+e+1/b,s=d+e/b-b,v=d*b-e+1/b,b=d/b+e*b+1;JSM.AddVertexToBody(a,+c,2,-f);JSM.AddVertexToBody(a,+c,-2,+f);JSM.AddVertexToBody(a,-c,2,+f);JSM.AddVertexToBody(a,-c,-2,-f);JSM.AddVertexToBody(a,2,
-f,+c);JSM.AddVertexToBody(a,-2,+f,+c);JSM.AddVertexToBody(a,2,+f,-c);JSM.AddVertexToBody(a,-2,-f,-c);JSM.AddVertexToBody(a,-f,+c,2);JSM.AddVertexToBody(a,+f,+c,-2);JSM.AddVertexToBody(a,+f,-c,2);JSM.AddVertexToBody(a,-f,-c,-2);JSM.AddVertexToBody(a,+g,+h,-k);JSM.AddVertexToBody(a,+g,-h,+k);JSM.AddVertexToBody(a,-g,+h,+k);JSM.AddVertexToBody(a,-g,-h,-k);JSM.AddVertexToBody(a,+h,-k,+g);JSM.AddVertexToBody(a,-h,+k,+g);JSM.AddVertexToBody(a,+h,+k,-g);JSM.AddVertexToBody(a,-h,-k,-g);JSM.AddVertexToBody(a,
-k,+g,+h);JSM.AddVertexToBody(a,+k,+g,-h);JSM.AddVertexToBody(a,+k,-g,+h);JSM.AddVertexToBody(a,-k,-g,-h);JSM.AddVertexToBody(a,+l,+m,-n);JSM.AddVertexToBody(a,+l,-m,+n);JSM.AddVertexToBody(a,-l,+m,+n);JSM.AddVertexToBody(a,-l,-m,-n);JSM.AddVertexToBody(a,+m,-n,+l);JSM.AddVertexToBody(a,-m,+n,+l);JSM.AddVertexToBody(a,+m,+n,-l);JSM.AddVertexToBody(a,-m,-n,-l);JSM.AddVertexToBody(a,-n,+l,+m);JSM.AddVertexToBody(a,+n,+l,-m);JSM.AddVertexToBody(a,+n,-l,+m);JSM.AddVertexToBody(a,-n,-l,-m);JSM.AddVertexToBody(a,
+p,+r,-q);JSM.AddVertexToBody(a,+p,-r,+q);JSM.AddVertexToBody(a,-p,+r,+q);JSM.AddVertexToBody(a,-p,-r,-q);JSM.AddVertexToBody(a,+r,-q,+p);JSM.AddVertexToBody(a,-r,+q,+p);JSM.AddVertexToBody(a,+r,+q,-p);JSM.AddVertexToBody(a,-r,-q,-p);JSM.AddVertexToBody(a,-q,+p,+r);JSM.AddVertexToBody(a,+q,+p,-r);JSM.AddVertexToBody(a,+q,-p,+r);JSM.AddVertexToBody(a,-q,-p,-r);JSM.AddVertexToBody(a,+s,+v,-b);JSM.AddVertexToBody(a,+s,-v,+b);JSM.AddVertexToBody(a,-s,+v,+b);JSM.AddVertexToBody(a,-s,-v,-b);JSM.AddVertexToBody(a,
+v,-b,+s);JSM.AddVertexToBody(a,-v,+b,+s);JSM.AddVertexToBody(a,+v,+b,-s);JSM.AddVertexToBody(a,-v,-b,-s);JSM.AddVertexToBody(a,-b,+s,+v);JSM.AddVertexToBody(a,+b,+s,-v);JSM.AddVertexToBody(a,+b,-s,+v);JSM.AddVertexToBody(a,-b,-s,-v);JSM.AddPolygonToBody(a,[0,3,51]);JSM.AddPolygonToBody(a,[0,30,12]);JSM.AddPolygonToBody(a,[0,48,3]);JSM.AddPolygonToBody(a,[0,51,30]);JSM.AddPolygonToBody(a,[1,2,50]);JSM.AddPolygonToBody(a,[1,28,13]);JSM.AddPolygonToBody(a,[1,49,2]);JSM.AddPolygonToBody(a,[1,50,28]);
JSM.AddPolygonToBody(a,[2,29,14]);JSM.AddPolygonToBody(a,[2,49,29]);JSM.AddPolygonToBody(a,[3,31,15]);JSM.AddPolygonToBody(a,[3,48,31]);JSM.AddPolygonToBody(a,[4,7,55]);JSM.AddPolygonToBody(a,[4,34,16]);JSM.AddPolygonToBody(a,[4,52,7]);JSM.AddPolygonToBody(a,[4,55,34]);JSM.AddPolygonToBody(a,[5,6,54]);JSM.AddPolygonToBody(a,[5,32,17]);JSM.AddPolygonToBody(a,[5,53,6]);JSM.AddPolygonToBody(a,[5,54,32]);JSM.AddPolygonToBody(a,[6,33,18]);JSM.AddPolygonToBody(a,[6,53,33]);JSM.AddPolygonToBody(a,[7,35,
19]);JSM.AddPolygonToBody(a,[7,52,35]);JSM.AddPolygonToBody(a,[8,11,59]);JSM.AddPolygonToBody(a,[8,26,20]);JSM.AddPolygonToBody(a,[8,56,11]);JSM.AddPolygonToBody(a,[8,59,26]);JSM.AddPolygonToBody(a,[9,10,58]);JSM.AddPolygonToBody(a,[9,24,21]);JSM.AddPolygonToBody(a,[9,57,10]);JSM.AddPolygonToBody(a,[9,58,24]);JSM.AddPolygonToBody(a,[10,25,22]);JSM.AddPolygonToBody(a,[10,57,25]);JSM.AddPolygonToBody(a,[11,27,23]);JSM.AddPolygonToBody(a,[11,56,27]);JSM.AddPolygonToBody(a,[12,18,21]);JSM.AddPolygonToBody(a,
[12,21,24]);JSM.AddPolygonToBody(a,[12,30,18]);JSM.AddPolygonToBody(a,[13,16,22]);JSM.AddPolygonToBody(a,[13,22,25]);JSM.AddPolygonToBody(a,[13,28,16]);JSM.AddPolygonToBody(a,[14,17,20]);JSM.AddPolygonToBody(a,[14,20,26]);JSM.AddPolygonToBody(a,[14,29,17]);JSM.AddPolygonToBody(a,[15,19,23]);JSM.AddPolygonToBody(a,[15,23,27]);JSM.AddPolygonToBody(a,[15,31,19]);JSM.AddPolygonToBody(a,[16,34,22]);JSM.AddPolygonToBody(a,[17,32,20]);JSM.AddPolygonToBody(a,[18,33,21]);JSM.AddPolygonToBody(a,[19,35,23]);
JSM.AddPolygonToBody(a,[24,58,36]);JSM.AddPolygonToBody(a,[25,57,37]);JSM.AddPolygonToBody(a,[26,59,38]);JSM.AddPolygonToBody(a,[27,56,39]);JSM.AddPolygonToBody(a,[28,50,40]);JSM.AddPolygonToBody(a,[29,49,41]);JSM.AddPolygonToBody(a,[30,51,42]);JSM.AddPolygonToBody(a,[31,48,43]);JSM.AddPolygonToBody(a,[32,54,44]);JSM.AddPolygonToBody(a,[33,53,45]);JSM.AddPolygonToBody(a,[34,55,46]);JSM.AddPolygonToBody(a,[35,52,47]);JSM.AddPolygonToBody(a,[36,43,48]);JSM.AddPolygonToBody(a,[36,46,43]);JSM.AddPolygonToBody(a,
[36,58,46]);JSM.AddPolygonToBody(a,[37,41,49]);JSM.AddPolygonToBody(a,[37,45,41]);JSM.AddPolygonToBody(a,[37,57,45]);JSM.AddPolygonToBody(a,[38,40,50]);JSM.AddPolygonToBody(a,[38,47,40]);JSM.AddPolygonToBody(a,[38,59,47]);JSM.AddPolygonToBody(a,[39,42,51]);JSM.AddPolygonToBody(a,[39,44,42]);JSM.AddPolygonToBody(a,[39,56,44]);JSM.AddPolygonToBody(a,[40,47,52]);JSM.AddPolygonToBody(a,[41,45,53]);JSM.AddPolygonToBody(a,[42,44,54]);JSM.AddPolygonToBody(a,[43,46,55]);JSM.AddPolygonToBody(a,[0,12,24,36,
48]);JSM.AddPolygonToBody(a,[1,13,25,37,49]);JSM.AddPolygonToBody(a,[2,14,26,38,50]);JSM.AddPolygonToBody(a,[3,15,27,39,51]);JSM.AddPolygonToBody(a,[4,16,28,40,52]);JSM.AddPolygonToBody(a,[5,17,29,41,53]);JSM.AddPolygonToBody(a,[6,18,30,42,54]);JSM.AddPolygonToBody(a,[7,19,31,43,55]);JSM.AddPolygonToBody(a,[8,20,32,44,56]);JSM.AddPolygonToBody(a,[9,21,33,45,57]);JSM.AddPolygonToBody(a,[10,22,34,46,58]);JSM.AddPolygonToBody(a,[11,23,35,47,59]);return a};
JSM.AddCumulatedPolygonToBody=function(a,b,c){var d=new JSM.Coord,e=new JSM.Vector,f=d,g=[],h;for(h=0;h<b.length;h++)g.push(a.GetVertexPosition(b[h]));h=JSM.CalculateCentroid(g);g=JSM.CalculateNormal(g);f.Set(h.x,h.y,h.z);e.Set(g.x,g.y,g.z);d=JSM.CoordOffset(d,e,c);c=a.VertexCount();JSM.AddVertexToBody(a,d.x,d.y,d.z);d=b.length;for(e=0;e<d;e++)f=b[e],g=b[e<d-1?e+1:0],JSM.AddPolygonToBody(a,[f,g,c])};
JSM.GenerateCumulatedTetrahedron=function(a){var b=new JSM.Body;b.AddVertex(new JSM.BodyVertex(new JSM.Coord(1,1,1)));b.AddVertex(new JSM.BodyVertex(new JSM.Coord(-1,-1,1)));b.AddVertex(new JSM.BodyVertex(new JSM.Coord(-1,1,-1)));b.AddVertex(new JSM.BodyVertex(new JSM.Coord(1,-1,-1)));a*=2*Math.sqrt(2);JSM.AddCumulatedPolygonToBody(b,[0,1,3],a);JSM.AddCumulatedPolygonToBody(b,[0,2,1],a);JSM.AddCumulatedPolygonToBody(b,[0,3,2],a);JSM.AddCumulatedPolygonToBody(b,[1,2,3],a);return b};
JSM.GenerateCumulatedHexahedron=function(a){var b=new JSM.Body;JSM.AddVertexToBody(b,1,1,1);JSM.AddVertexToBody(b,1,1,-1);JSM.AddVertexToBody(b,1,-1,1);JSM.AddVertexToBody(b,-1,1,1);JSM.AddVertexToBody(b,1,-1,-1);JSM.AddVertexToBody(b,-1,1,-1);JSM.AddVertexToBody(b,-1,-1,1);JSM.AddVertexToBody(b,-1,-1,-1);a*=2;JSM.AddCumulatedPolygonToBody(b,[0,1,5,3],a);JSM.AddCumulatedPolygonToBody(b,[0,2,4,1],a);JSM.AddCumulatedPolygonToBody(b,[0,3,6,2],a);JSM.AddCumulatedPolygonToBody(b,[1,4,7,5],a);JSM.AddCumulatedPolygonToBody(b,
[2,6,7,4],a);JSM.AddCumulatedPolygonToBody(b,[3,5,7,6],a);return b};
JSM.GenerateCumulatedOctahedron=function(a){var b=new JSM.Body;JSM.AddVertexToBody(b,1,0,0);JSM.AddVertexToBody(b,-1,0,0);JSM.AddVertexToBody(b,0,1,0);JSM.AddVertexToBody(b,0,-1,0);JSM.AddVertexToBody(b,0,0,1);JSM.AddVertexToBody(b,0,0,-1);a*=Math.sqrt(2);JSM.AddCumulatedPolygonToBody(b,[0,2,4],a);JSM.AddCumulatedPolygonToBody(b,[0,3,5],a);JSM.AddCumulatedPolygonToBody(b,[0,4,3],a);JSM.AddCumulatedPolygonToBody(b,[0,5,2],a);JSM.AddCumulatedPolygonToBody(b,[1,2,5],a);JSM.AddCumulatedPolygonToBody(b,
[1,3,4],a);JSM.AddCumulatedPolygonToBody(b,[1,4,2],a);JSM.AddCumulatedPolygonToBody(b,[1,5,3],a);return b};
JSM.GenerateCumulatedDodecahedron=function(a){var b=new JSM.Body,c=(1+Math.sqrt(5))/2,d=1/c;JSM.AddVertexToBody(b,1,1,1);JSM.AddVertexToBody(b,1,1,-1);JSM.AddVertexToBody(b,1,-1,1);JSM.AddVertexToBody(b,-1,1,1);JSM.AddVertexToBody(b,1,-1,-1);JSM.AddVertexToBody(b,-1,1,-1);JSM.AddVertexToBody(b,-1,-1,1);JSM.AddVertexToBody(b,-1,-1,-1);JSM.AddVertexToBody(b,0,+d,+c);JSM.AddVertexToBody(b,0,+d,-c);JSM.AddVertexToBody(b,0,-d,+c);JSM.AddVertexToBody(b,0,-d,-c);JSM.AddVertexToBody(b,+d,+c,0);JSM.AddVertexToBody(b,
+d,-c,0);JSM.AddVertexToBody(b,-d,+c,0);JSM.AddVertexToBody(b,-d,-c,0);JSM.AddVertexToBody(b,+c,0,+d);JSM.AddVertexToBody(b,-c,0,+d);JSM.AddVertexToBody(b,+c,0,-d);JSM.AddVertexToBody(b,-c,0,-d);a*=Math.sqrt(5)-1;JSM.AddCumulatedPolygonToBody(b,[0,8,10,2,16],a);JSM.AddCumulatedPolygonToBody(b,[0,16,18,1,12],a);JSM.AddCumulatedPolygonToBody(b,[0,12,14,3,8],a);JSM.AddCumulatedPolygonToBody(b,[1,9,5,14,12],a);JSM.AddCumulatedPolygonToBody(b,[1,18,4,11,9],a);JSM.AddCumulatedPolygonToBody(b,[2,10,6,15,
13],a);JSM.AddCumulatedPolygonToBody(b,[2,13,4,18,16],a);JSM.AddCumulatedPolygonToBody(b,[3,14,5,19,17],a);JSM.AddCumulatedPolygonToBody(b,[3,17,6,10,8],a);JSM.AddCumulatedPolygonToBody(b,[4,13,15,7,11],a);JSM.AddCumulatedPolygonToBody(b,[5,9,11,7,19],a);JSM.AddCumulatedPolygonToBody(b,[6,17,19,7,15],a);return b};
JSM.GenerateCumulatedIcosahedron=function(a){var b=new JSM.Body,c=(1+Math.sqrt(5))/2;JSM.AddVertexToBody(b,0,1,+c);JSM.AddVertexToBody(b,0,1,-c);JSM.AddVertexToBody(b,0,-1,+c);JSM.AddVertexToBody(b,0,-1,-c);JSM.AddVertexToBody(b,1,+c,0);JSM.AddVertexToBody(b,1,-c,0);JSM.AddVertexToBody(b,-1,+c,0);JSM.AddVertexToBody(b,-1,-c,0);JSM.AddVertexToBody(b,+c,0,1);JSM.AddVertexToBody(b,-c,0,1);JSM.AddVertexToBody(b,+c,0,-1);JSM.AddVertexToBody(b,-c,0,-1);a*=2;JSM.AddCumulatedPolygonToBody(b,[0,2,8],a);JSM.AddCumulatedPolygonToBody(b,
[0,4,6],a);JSM.AddCumulatedPolygonToBody(b,[0,6,9],a);JSM.AddCumulatedPolygonToBody(b,[0,8,4],a);JSM.AddCumulatedPolygonToBody(b,[0,9,2],a);JSM.AddCumulatedPolygonToBody(b,[1,3,11],a);JSM.AddCumulatedPolygonToBody(b,[1,4,10],a);JSM.AddCumulatedPolygonToBody(b,[1,6,4],a);JSM.AddCumulatedPolygonToBody(b,[1,10,3],a);JSM.AddCumulatedPolygonToBody(b,[1,11,6],a);JSM.AddCumulatedPolygonToBody(b,[2,5,8],a);JSM.AddCumulatedPolygonToBody(b,[2,7,5],a);JSM.AddCumulatedPolygonToBody(b,[2,9,7],a);JSM.AddCumulatedPolygonToBody(b,
[3,5,7],a);JSM.AddCumulatedPolygonToBody(b,[3,7,11],a);JSM.AddCumulatedPolygonToBody(b,[3,10,5],a);JSM.AddCumulatedPolygonToBody(b,[4,8,10],a);JSM.AddCumulatedPolygonToBody(b,[6,11,9],a);JSM.AddCumulatedPolygonToBody(b,[5,10,8],a);JSM.AddCumulatedPolygonToBody(b,[7,9,11],a);return b};JSM.GenerateTetrakisHexahedron=function(){return JSM.GenerateCumulatedHexahedron(0.25)};JSM.GenerateRhombicDodecahedron=function(){return JSM.GenerateCumulatedHexahedron(0.5)};
JSM.GeneratePentakisDodecahedron=function(){var a=Math.sqrt((65+22*Math.sqrt(5))/5)/19;return JSM.GenerateCumulatedDodecahedron(a)};JSM.GenerateSmallStellatedDodecahedron=function(){var a=Math.sqrt((5+2*Math.sqrt(5))/5);return JSM.GenerateCumulatedDodecahedron(a)};JSM.GenerateGreatDodecahedron=function(){var a=Math.sqrt(3)*(Math.sqrt(5)-3)/6;return JSM.GenerateCumulatedIcosahedron(a)};JSM.GenerateSmallTriambicIcosahedron=function(){var a=Math.sqrt(15)/15;return JSM.GenerateCumulatedIcosahedron(a)};
JSM.GenerateGreatStellatedDodecahedron=function(){var a=Math.sqrt(3)*(3+Math.sqrt(5))/6;return JSM.GenerateCumulatedIcosahedron(a)};JSM.GenerateSmallTriakisOctahedron=function(){var a=Math.sqrt(3)-2*Math.sqrt(6)/3;return JSM.GenerateCumulatedOctahedron(a)};JSM.GenerateStellaOctangula=function(){var a=Math.sqrt(6)/3;return JSM.GenerateCumulatedOctahedron(a)};JSM.GenerateTriakisTetrahedron=function(){var a=Math.sqrt(6)/15;return JSM.GenerateCumulatedTetrahedron(a)};
JSM.Camera=function(a,b,c){this.eye=new JSM.Coord(a[0],a[1],a[2]);this.center=new JSM.Coord(b[0],b[1],b[2]);this.up=new JSM.Coord(c[0],c[1],c[2]);this.zoom=this.orbit=this.fixUp=!0};
JSM.Camera.prototype={Set:function(a,b,c){this.eye=new JSM.Coord(a[0],a[1],a[2]);this.center=new JSM.Coord(b[0],b[1],b[2]);this.up=new JSM.Coord(c[0],c[1],c[2])},SetFixUp:function(a){this.fixUp=a},SetOrbitEnabled:function(a){this.orbit=a},SetZoomEnabled:function(a){this.zoom=a},Zoom:function(a){if(this.zoom){var b=JSM.CoordSub(this.center,this.eye),c=JSM.VectorLength(b);if(a&&0.1>c)return 0;c*=0.1;a||(c*=-1);this.eye=JSM.CoordOffset(this.eye,b,c)}},Orbit:function(a,b){if(this.orbit){var c=a*JSM.DegRad,
d=b*JSM.DegRad,e=JSM.VectorNormalize(JSM.CoordSub(this.center,this.eye)),f=JSM.VectorNormalize(JSM.VectorCross(e,this.up));if(this.fixUp){var e=JSM.GetVectorsAngle(e,this.up),g=5*JSM.DegRad;0>d&&e>Math.PI-g||0<d&&e<g||(this.eye=JSM.CoordRotate(this.eye,f,d,this.center));this.eye=JSM.CoordRotate(this.eye,this.up,c,this.center)}else e=JSM.VectorNormalize(JSM.VectorCross(f,e)),this.eye=JSM.CoordRotate(this.eye,f,d,this.center),this.eye=JSM.CoordRotate(this.eye,e,c,this.center),this.up=e}},Clone:function(){var a=
new JSM.Camera;a.eye=this.eye;a.center=this.center;a.up=this.up;a.orbit=this.orbit;a.zoom=this.zoom;return a}};
JSM.ExportBodyContentToStl=function(a,b,c){function d(a){g+=a+"\n"}function e(a,b,c,e){d("\tfacet normal "+a.x+" "+a.y+" "+a.z);d("\t\touter loop");d("\t\t\tvertex "+b.x+" "+b.y+" "+b.z);d("\t\t\tvertex "+c.x+" "+c.y+" "+c.z);d("\t\t\tvertex "+e.x+" "+e.y+" "+e.z);d("\t\tendloop");d("\tendfacet")}function f(b){var d=a.GetPolygon(b),f=d.VertexIndexCount();if(!(3>f)){var g,n,p,r=null;if(3===f)r=JSM.CalculateBodyPolygonNormal(a,b),g=a.GetVertex(d.GetVertexIndex(0)).position,n=a.GetVertex(d.GetVertexIndex(1)).position,
p=a.GetVertex(d.GetVertexIndex(2)).position,e(r,g,n,p);else if(g=!0,void 0!==c&&c&&(g=!1),r=JSM.CalculateBodyPolygonNormal(a,b),g){g=new JSM.Polygon;for(b=0;b<f;b++)n=a.GetVertex(d.vertices[b]),g.AddVertex(n.position.x,n.position.y,n.position.z);f=JSM.PolygonTriangulate(g,r);for(b=0;b<f.length;b++)p=f[b],g=a.GetVertex(d.GetVertexIndex(p[0])).position,n=a.GetVertex(d.GetVertexIndex(p[1])).position,p=a.GetVertex(d.GetVertexIndex(p[2])).position,e(r,g,n,p)}else for(b=0;b<f-2;b++)g=a.GetVertex(d.GetVertexIndex(0)).position,
n=a.GetVertex(d.GetVertexIndex((b+1)%f)).position,p=a.GetVertex(d.GetVertexIndex((b+2)%f)).position,e(r,g,n,p)}}var g="";for(b=0;b<a.PolygonCount();b++)f(b);return g};JSM.ExportBodyToStl=function(a,b,c){a=""+("solid "+b+"\n")+JSM.ExportBodyContentToStl(a,b,c);return a+="endsolid "+b+"\n"};JSM.ExportModelToStl=function(a,b,c){var d;d=""+("solid "+b+"\n");var e,f;for(e=0;e<a.BodyCount();e++)f=a.GetBody(e),d+=JSM.ExportBodyContentToStl(f,b+(e+1).toString(),c);return d+("endsolid "+b+"\n")};
JSM.ExportBodyContentToObj=function(a,b,c){function d(b){b=a.GetVertex(b).position;g+="v "+b.x+" "+b.y+" "+b.z+"\n"}function e(b){b=JSM.CalculateBodyPolygonNormal(a,b);g+="vn "+b.x+" "+b.y+" "+b.z+"\n"}function f(d){var e=a.GetPolygon(d);g+="f ";var f;for(f=0;f<e.VertexIndexCount();f++){var h=b+e.GetVertexIndex(f)+1+"//"+(c+d+1)+" ";g+=h}g+="\n"}var g="",h;for(h=0;h<a.VertexCount();h++)d(h);for(h=0;h<a.PolygonCount();h++)e(h);for(h=0;h<a.PolygonCount();h++)f(h);return g};
JSM.ExportBodyToObj=function(a){return JSM.ExportBodyContentToObj(a,0,0)};JSM.ExportModelToObj=function(a,b,c){b="";var d=c=0,e,f;for(e=0;e<a.BodyCount();e++)f=a.GetBody(e),b+=JSM.ExportBodyContentToObj(f,c,d),c+=f.VertexCount(),d+=f.PolygonCount();return b};
JSM.ExportMaterialsToGDL=function(a){function b(a,b){var d=JSM.HexColorToRGBComponents(a.diffuse);c+='define material "material'+b+'" 2, '+(d[0]/255+","+d[1]/255+","+d[2]/255)+" ! "+b+"\n"}var c="",d=!1;void 0!==a&&null!==a&&(d=!0);if(d){b(a.GetDefaultMaterial(),1);for(d=0;d<a.Count();d++)b(a.GetMaterial(d),d+2)}return c};
JSM.ExportBodyGeometryToGDL=function(a,b){function c(a){if(200<a.length){var b=0,c,d;for(c=0;c<a.length;c++)d=a[c],h+=d,b++,200<b&&","==d&&(h+="\n",b=0)}else h+=a}function d(a){c(a+"\n")}function e(b){var c=a.GetVertex(b).position;d("vert "+c.x+", "+c.y+", "+c.z+" ! "+(b+1))}function f(a){var b=k.edges[a];d("edge "+(b.vert1+1)+", "+(b.vert2+1)+", -1, -1, 0 ! "+(a+1))}function g(e){if(b){var f=a.GetPolygon(e).GetMaterialIndex()+2;d('set material "material'+f+'"')}f=k.pgons[e];c("pgon "+f.pedges.length+
", 0, 0, ");var g="",h,l;for(h=0;h<f.pedges.length;h++)l=f.pedges[h],g=l.reverse?g+-(l.index+1):g+(l.index+1),h<f.pedges.length-1&&(g+=", ");c(g);c(" ! "+(e+1));d("")}var h="";d("base");var k=JSM.CalculateAdjacencyList(a),l;for(l=0;l<k.verts.length;l++)e(l);for(l=0;l<k.edges.length;l++)f(l);for(l=0;l<k.pgons.length;l++)g(l);d("body -1");return h};JSM.ExportBodyToGDL=function(a,b){var c="",d=!1;void 0!==b&&null!==b&&(c+=JSM.ExportMaterialsToGDL(b),d=!0);return c+=JSM.ExportBodyGeometryToGDL(a,d)};
JSM.ExportModelToGDL=function(a,b){var c="",d=!1;void 0!==b&&null!==b&&(c+=JSM.ExportMaterialsToGDL(b),d=!0);var e,f;for(e=0;e<a.BodyCount();e++)f=a.GetBody(e),c+=JSM.ExportBodyGeometryToGDL(f,d);return c};
JSM.LegoDimensions=function(){this.legoWidth=0.78;this.legoSmallHeight=0.32;this.legoLargeHeight=0.96;this.legoWallWidth=0.16;this.legoCylinderWidth=0.5;this.legoCylinderHeight=0.17;this.legoBottomSmallCylinderWidth=0.3;this.legoBottomLargeCylinderWidth=0.6;this.legoBottomLargeCylinderWallWidth=0.1};
JSM.GenerateLegoBrick=function(a,b,c,d,e,f,g){function h(a,b){var c,d;for(c=0;c<a.VertexCount();c++)d=a.GetVertex(c),d.position=JSM.CoordAdd(d.position,b)}var k=new JSM.LegoDimensions,l=new THREE.Vector3(0,0,1),m=k.legoWidth,n=k.legoLargeHeight;c||(n=k.legoSmallHeight);c=k.legoWallWidth;var p=k.legoCylinderWidth,r=k.legoCylinderHeight,q=k.legoBottomSmallCylinderWidth,s=k.legoBottomLargeCylinderWidth,v=k.legoBottomLargeCylinderWallWidth,u=[];u.push(new JSM.Coord(0,0,0));u.push(new JSM.Coord(m*a,0,
0));u.push(new JSM.Coord(m*a,m*b,0));u.push(new JSM.Coord(0,m*b,0));var k=new JSM.Body,t=JSM.GeneratePrismShell(u,l,n-c,c,!0);k.Merge(t);for(t=0;4>t;t++)u[t].z=n-c;t=JSM.GeneratePrism(u,l,c,!0);k.Merge(t);if(d)for(t=0;t<a;t++)for(u=0;u<b;u++)d=new JSM.Coord(m*t+m/2,m*u+m/2,n+r/2),l=JSM.GenerateCylinder(p/2,r,f,!0,g),h(l,d),k.Merge(l);if(e)if(1===a&&1<b||1===b&&1<a){e=b;p=!0;a>b&&(e=a,p=!1);for(t=0;t<e-1;t++)d=p?new JSM.Coord(m/2,m*(t+1),(n-c)/2):new JSM.Coord(m*(t+1),m/2,(n-c)/2),l=JSM.GenerateCylinder(q/
2,n-c,f,!0,g),h(l,d),k.Merge(l)}else if(1<a&&1<b)for(t=0;t<a-1;t++)for(u=0;u<b-1;u++)d=new JSM.Coord(m*(t+1),m*(u+1),(n-c)/2),l=JSM.GenerateCylinderShell(s/2,n-c,v,f,!0,g),h(l,d),k.Merge(l);k.SetTextureProjectionType("Cubic");k.SetTextureProjectionCoords(new JSM.CoordSystem(new JSM.Coord(0,0,0),new JSM.Coord(1,0,0),new JSM.Coord(0,1,0),new JSM.Coord(0,0,1)));return k};
JSM.GenerateSuperShape=function(a,b,c,d,e,f,g,h,k,l,m,n,p,r){function q(a){var b=Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z),c=Math.asin(a.z/b);a=Math.atan2(a.y,a.x);return[b,c,a]}function s(a,b,c,d,e,f,g){b=Math.abs(Math.cos(d*a/4)/b);a=Math.abs(Math.sin(d*a/4)/c);return Math.pow(Math.pow(b,f)+Math.pow(a,g),-1/e)}function v(p,r){var q=new JSM.Coord,t=s(p,g,h,k,l,m,n),v=s(r,a,b,c,d,e,f);q.x=v*Math.cos(r)*t*Math.cos(p);q.y=v*Math.sin(r)*t*Math.cos(p);q.z=t*Math.sin(p);return q}p=JSM.GenerateSphere(1,p,r);var u,
t;for(r=0;r<p.VertexCount();r++)u=p.GetVertex(r),t=u.position,t=q(t),t=v(t[1],t[2]),u.SetPosition(t);return p};
JSM.OrderPolygons=function(a,b,c,d,e,f,g,h,k){var l=[],m=[],n=[],p=[],r=[],q=[],s=[];d=a.PolygonCount();for(e=0;e<d;e++){q.push(e);s.push([]);for(f=0;f<d;f++)s[e].push(null)}(function(){var d=JSM.VectorNormalize(JSM.CoordSub(c,b)),d=JSM.GetPlaneFromCoordAndDirection(b,d),e,f,g,h,k,q;for(e=0;e<a.PolygonCount();e++){k=JSM.Inf;q=-JSM.Inf;g=a.GetPolygon(e);for(f=0;f<g.VertexIndexCount();f++)h=a.GetVertexPosition(g.GetVertexIndex(f)),h=JSM.CoordPlaneDistance(h,d),JSM.IsLower(h,k)&&(k=h),JSM.IsGreater(h,
q)&&(q=h);l.push(k);m.push(q);f=a.GetPolygon(e);g=new JSM.Coord;q=k=void 0;for(k=0;k<f.VertexIndexCount();k++)q=a.GetVertexPosition(f.GetVertexIndex(k)),g=JSM.CoordAdd(g,q);f=g=JSM.VectorMultiply(g,1/f.VertexIndexCount());g=JSM.CoordPlaneDistance(f,d);n.push(f);p.push(g);g=JSM.CalculateBodyPolygonNormal(a,e);k=JSM.VectorNormalize(JSM.CoordSub(f,b));k=JSM.VectorDot(g,k);JSM.IsGreaterOrEqual(k,0)&&(g=JSM.VectorMultiply(g,-1));f=JSM.GetPlaneFromCoordAndDirection(f,g);r.push(f)}})();(function(){var a=
q.length,b,c;for(b=0;b<a-1;b++)for(c=0;c<a-b-1;c++){var d;d=q[c];var e=q[c+1];d=JSM.IsLower(m[d],m[e])?!0:JSM.IsEqual(m[d],m[e])&&JSM.IsLower(p[d],p[e])?!0:!1;if(d){d=q;var e=c+1,f=d[c];d[c]=d[e];d[e]=f}}})();(function(){var b=q.length,c,d;for(c=0;c<b-1;c++)for(d=0;d<b-c-1;d++){var e;e=q[d];var f=q[d+1];if(null!==s[e][f])e=s[e][f];else{var g;if(g=JSM.IsLowerOrEqual(l[e],m[f])){var h=f;g=r[e];for(var k=r[h],n=void 0,p=void 0,E=!0,F=a.GetPolygon(e),n=0;n<F.VertexIndexCount();n++)if(p=a.GetVertexPosition(F.GetVertexIndex(n)),
"CoordInFrontOfPlane"===JSM.CoordPlanePosition(p,k)){E=!1;break}if(E)g=!1;else{k=!0;h=a.GetPolygon(h);for(n=0;n<h.VertexIndexCount();n++)if(p=a.GetVertexPosition(h.GetVertexIndex(n)),"CoordAtBackOfPlane"===JSM.CoordPlanePosition(p,g)){k=!1;break}g=k?!1:!0}}e=g?s[e][f]=!0:s[e][f]=!1}e&&(e=q,f=d+1,g=e[d],e[d]=e[f],e[f]=g)}})();return q};JSM.CanvasDrawer=function(a){this.canvas=a;this.context=this.canvas.getContext("2d")};
JSM.CanvasDrawer.prototype={GetWidth:function(){return this.canvas.width},GetHeight:function(){return this.canvas.height},BeginPath:function(){this.context.beginPath()},EndPath:function(){this.context.stroke()},Clear:function(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height);this.context.fillStyle="#ffffff";this.context.fillRect(0,0,this.canvas.width,this.canvas.height)},DrawLine:function(a,b){this.context.moveTo(a.x,this.canvas.height-a.y);this.context.lineTo(b.x,this.canvas.height-
b.y)},DrawPolygon:function(a,b){var c=this.context,d=JSM.HexColorToRGBComponents(b);c.fillStyle="rgb("+d[0]+","+d[1]+","+d[2]+")";this.context.beginPath();for(var e,c=0;c<a.VertexCount();c++)d=a.GetVertex(c),0===c?this.context.moveTo(d.x,this.canvas.height-d.y):this.context.lineTo(d.x,this.canvas.height-d.y);this.context.closePath();this.context.fill();this.BeginPath();for(c=0;c<a.VertexCount();c++)d=a.GetVertex(c),e=a.GetVertex(c<a.VertexCount()-1?c+1:0),this.DrawLine(d,e);this.EndPath()}};
JSM.SVGDrawer=function(a){this.svgObject=a;this.svgNameSpace="http://www.w3.org/2000/svg"};
JSM.SVGDrawer.prototype={GetWidth:function(){return this.svgObject.getAttribute("width")},GetHeight:function(){return this.svgObject.getAttribute("height")},BeginPath:function(){},EndPath:function(){},Clear:function(){for(;this.svgObject.lastChild;)this.svgObject.removeChild(this.svgObject.lastChild)},DrawLine:function(a,b){var c=document.createElementNS(this.svgNameSpace,"line"),d=this.GetHeight();c.setAttributeNS(null,"stroke","black");c.setAttributeNS(null,"x1",a.x);c.setAttributeNS(null,"y1",
d-a.y);c.setAttributeNS(null,"x2",b.x);c.setAttributeNS(null,"y2",d-b.y);this.svgObject.appendChild(c)},DrawPolygon:function(a,b){var c="",d=this.GetHeight(),e,f;for(e=0;e<a.VertexCount();e++)f=a.GetVertex(e),c=c+f.x+", "+(d-f.y),e<a.VertexCount()-1&&(c+=", ");d=document.createElementNS(this.svgNameSpace,"polygon");d.setAttributeNS(null,"points",c);d.setAttributeNS(null,"fill",function(a){a=JSM.HexColorToRGBComponents(a);return"rgb("+a[0]+","+a[1]+","+a[2]+")"}(b));d.setAttributeNS(null,"fill-opacity",
"1.0");d.setAttributeNS(null,"stroke","black");this.svgObject.appendChild(d)}};JSM.DrawSettings=function(a,b,c,d,e,f){this.camera=a;this.fieldOfView=b;this.nearPlane=c;this.farPlane=d;this.drawMode=e;this.clear=f};
JSM.DrawProjectedBody=function(a,b,c,d){function e(b){var c=new JSM.Polygon2D,d,e,f;for(d=0;d<b.VertexIndexCount();d++)e=a.GetVertexPosition(b.GetVertexIndex(d)),f=JSM.Project(e,h,k,l,m*JSM.DegRad,n,p,r,q),e=f.x,f=f.y,c.AddVertex(e,f);return c}c.clear&&d.Clear();var f=d.GetWidth(),g=d.GetHeight(),h=c.camera.eye,k=c.camera.center,l=c.camera.up,m=c.fieldOfView,n=f/g,p=c.nearPlane,r=c.farPlane,q=[0,0,f,g];c=c.drawMode;if("HiddenLinePainter"==c){var s=JSM.OrderPolygons(a,h,k,l,m,n,p,r,q);if(void 0===
b||null===b)b=new JSM.Materials;for(c=0;c<s.length;c++)g=a.GetPolygon(s[c]),f=e(g),g=g.GetMaterialIndex(),g=b.GetMaterial(g).diffuse,d.DrawPolygon(f,g)}else if("HiddenLineFrontFacing"==c){if(void 0===b||null===b)b=new JSM.Materials;for(c=0;c<a.PolygonCount();c++)g=a.GetPolygon(c),f=e(g),"CounterClockwise"==JSM.PolygonOrientation2D(f)&&(g=g.GetMaterialIndex(),g=b.GetMaterial(g).diffuse,d.DrawPolygon(f,g))}else if("Wireframe"==c){var v,u,t;d.BeginPath();var z=[];for(c=0;c<a.PolygonCount();c++){u=v=
null;g=a.GetPolygon(c);s=g.VertexIndexCount();for(b=0;b<=s;b++)t=g.GetVertexIndex(b%s),f=a.GetVertexPosition(t),f=JSM.Project(f,h,k,l,m*JSM.DegRad,n,p,r,q),null!==v&&(null!==u&&void 0===z[[u,t]])&&(d.DrawLine(v,f),z[[u,t]]=!0,z[[t,u]]=!0),u=t,v=f}d.EndPath()}return!0};
JSM.CatmullClarkSubdivisionOneIteration=function(a){var b=new JSM.Body,c=JSM.CalculateAdjacencyList(a);(function(){var d,e;for(d=0;d<c.verts.length;d++)e=a.GetVertex(d).position,b.AddVertex(new JSM.BodyVertex(new JSM.Coord(e.x,e.y,e.z)))})();var d=[];(function(){var e,g,h,k,l;for(e=0;e<c.pgons.length;e++){h=c.pgons[e];l=new JSM.Coord(0,0,0);for(g=0;g<h.verts.length;g++)k=a.GetVertex(h.verts[g]).position,l=JSM.CoordAdd(l,k);l=JSM.VectorMultiply(l,1/h.verts.length);d.push(b.AddVertex(new JSM.BodyVertex(l)))}})();
var e=[];(function(){var f,g,h,k,l;for(f=0;f<c.edges.length;f++){h=c.edges[f];k=new JSM.Coord(0,0,0);k=JSM.CoordAdd(k,JSM.VectorMultiply(a.GetVertex(h.vert1).position,0.25));k=JSM.CoordAdd(k,JSM.VectorMultiply(a.GetVertex(h.vert2).position,0.25));for(g=0;2>g;g++)l=0===g?h.pgon1:h.pgon2,-1===l&&(l=0===g?h.pgon2:h.pgon1),l=b.GetVertex(d[l]).position,k=JSM.CoordAdd(k,JSM.VectorMultiply(l,0.25));e.push(b.AddVertex(new JSM.BodyVertex(k)))}})();(function(){var e=[],g,h,k,l;for(k=0;k<c.edges.length;k++)g=
c.edges[k],h=JSM.MidCoord(a.GetVertex(g.vert1).position,a.GetVertex(g.vert2).position),e.push(h);var m,n,p;for(k=0;k<c.verts.length;k++){m=c.verts[k];p=new JSM.Coord(0,0,0);g=new JSM.Coord(0,0,0);n=1/m.pgons.length;for(l=0;l<m.pgons.length;l++)h=b.GetVertex(d[m.pgons[l]]).position,p=JSM.CoordAdd(p,JSM.VectorMultiply(h,n));n=1/m.edges.length;for(l=0;l<m.edges.length;l++)h=e[m.edges[l]],g=JSM.CoordAdd(g,JSM.VectorMultiply(h,n));m=m.edges.length;l=b.GetVertex(k).position;l.x=(p.x+2*g.x+(m-3)*l.x)/m;
l.y=(p.y+2*g.y+(m-3)*l.y)/m;l.z=(p.z+2*g.z+(m-3)*l.z)/m}})();(function(){var f,g,h,k,l,m,n,p;for(m=0;m<c.pgons.length;m++){p=c.pgons[m];f=p.verts.length;for(n=0;n<f;n++)g=p.pedges[n],h=p.pedges[(n+1)%f],k=d[m],g=e[g.index],l=JSM.GetPolyEdgeStartVertex(h,c),h=e[h.index],k=new JSM.BodyPolygon([k,g,l,h]),h=a.GetPolygon(m),k.material=h.material,k.curved=h.curved,b.AddPolygon(k)}})();return b};
JSM.CatmullClarkSubdivision=function(a,b){var c=a,d;for(d=0;d<b;d++)c=JSM.CatmullClarkSubdivisionOneIteration(c);return c};
JSM.SvgToModel=function(a,b,c){function d(a,b){function c(a,b,d,e,f,g){a=a.createSVGPoint();a.x=f;a.y=g;e=a.matrixTransform(e.getCTM());a=new JSM.Coord2D(e.x,e.y);f=new JSM.Coord2D(f,g);g=b.VertexCount(d);if(0<g&&JSM.CoordIsEqual2DWithEps(b.GetVertex(d,g-1),a,0.1))return f;b.AddVertex(d,e.x,e.y);return f}function d(a,b,e,f,g,h,k){var l=document.createElementNS("http://www.w3.org/2000/svg","path"),m="M "+f.x+" "+f.y,n,q,r,s,v;for(n=0;n<g.length;n++)if(q=g[n],q.pathSegType==SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS||
q.pathSegType==SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL)r=q.pathSegType==SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS?"C":"c",m+=r+" "+q.x1+" "+q.y1+" "+q.x2+" "+q.y2+" "+q.x+" "+q.y+" ";else if(q.pathSegType==SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS||q.pathSegType==SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL)r=q.pathSegType==SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS?"Q":"q",m+=r+" "+q.x1+" "+q.y1+" "+q.x+" "+q.y+" ";else if(q.pathSegType==SVGPathSeg.PATHSEG_ARC_ABS||q.pathSegType==SVGPathSeg.PATHSEG_ARC_REL)r=q.pathSegType==
SVGPathSeg.PATHSEG_ARC_ABS?"A":"a",s=q.largeArcFlag?1:0,v=q.sweepFlag?1:0,m+=r+" "+q.r1+" "+q.r2+" "+q.angle+" "+s+" "+v+" "+q.x+" "+q.y+" ";else if(q.pathSegType==SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS||q.pathSegType==SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL)r=q.pathSegType==SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS?"S":"s",m+=r+" "+q.x2+" "+q.y2+" "+q.x+" "+q.y+" ";l.setAttributeNS(null,"d",m);m=l.getTotalLength();g=0;0<e&&(g=parseInt(m/e,10));3>g&&(g=3);e=m/g;for(m=1;m<=g;m++)f=l.getPointAtLength(m*
e),f=c(a,h,k,b,f.x,f.y);return f}function e(a,b){var c=a.VertexCount(b);if(0!==c){var d=a.GetVertex(b,0),c=a.GetVertex(b,c-1);JSM.CoordIsEqual2DWithEps(d,c,0.1)&&a.GetContour(b).vertices.pop()}}function f(a,b){return 0<a.VertexCount(b)?(e(a,b),a.AddContour(),b+1):b}var g=new JSM.ContourPolygon2D,h=document.createElementNS("http://www.w3.org/2000/svg","svg"),l;if(a instanceof SVGPathElement){var k=new JSM.Coord2D(0,0),w=new JSM.Coord2D(0,0),C=b;a.hasAttribute("segmentlength")&&(C=parseFloat(a.getAttribute("segmentlength")));
var x,D,y=0;for(l=0;l<a.pathSegList.numberOfItems;l++)if(x=a.pathSegList.getItem(l),x.pathSegType!=SVGPathSeg.PATHSEG_CLOSEPATH)if(x.pathSegType==SVGPathSeg.PATHSEG_MOVETO_ABS)y=f(g,y),k=c(h,g,y,a,x.x,x.y),w=k.Clone();else if(x.pathSegType==SVGPathSeg.PATHSEG_MOVETO_REL)y=f(g,y),k=c(h,g,y,a,w.x+x.x,w.y+x.y),w=k.Clone();else if(x.pathSegType==SVGPathSeg.PATHSEG_LINETO_ABS)k=c(h,g,y,a,x.x,x.y);else if(x.pathSegType==SVGPathSeg.PATHSEG_LINETO_REL)k=c(h,g,y,a,k.x+x.x,k.y+x.y);else if(x.pathSegType==SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS)k=
c(h,g,y,a,x.x,k.y);else if(x.pathSegType==SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS)k=c(h,g,y,a,k.x,x.y);else if(x.pathSegType==SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL)k=c(h,g,y,a,k.x+x.x,k.y);else if(x.pathSegType==SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL)k=c(h,g,y,a,k.x,k.y+x.y);else if(x.pathSegType==SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS||x.pathSegType==SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL||x.pathSegType==SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS||x.pathSegType==SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL||
x.pathSegType==SVGPathSeg.PATHSEG_ARC_ABS||x.pathSegType==SVGPathSeg.PATHSEG_ARC_REL||x.pathSegType==SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS||x.pathSegType==SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL){D=[];if(x.pathSegType==SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS||x.pathSegType==SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL){for(;l<a.pathSegList.numberOfItems;l++){x=a.pathSegList.getItem(l);if(!(x.pathSegType==SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS||x.pathSegType==SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL))break;
D.push(x)}l-=1}else D.push(x);k=d(h,a,C,k,D,g,y)}e(g,y)}else if(a instanceof SVGRectElement)c(h,g,0,a,a.x.baseVal.value,a.y.baseVal.value),c(h,g,0,a,a.x.baseVal.value+a.width.baseVal.value,a.y.baseVal.value),c(h,g,0,a,a.x.baseVal.value+a.width.baseVal.value,a.y.baseVal.value+a.height.baseVal.value),c(h,g,0,a,a.x.baseVal.value,a.y.baseVal.value+a.height.baseVal.value);else if(a instanceof SVGPolygonElement)for(l=0;l<a.points.numberOfItems;l++)k=a.points.getItem(l),c(h,g,0,a,k.x,k.y);g.color=function(a){for(var b=
"";null!==a&&void 0!==a&&0===b.length;)b=a.getAttribute("fill"),null===b&&(b=a.style.fill),a=a.parentElement;a=0;if(0===b.length)return a;if("#"==b[0])a=JSM.HexColorToRGBColor(b.substring(1));else{var c=b.indexOf("("),d=b.indexOf(")");if(-1==c||-1==d)return a;b=b.substring(c+1,d).split(", ");if(3!=b.length)return a;a=JSM.RGBComponentsToRGBColor(b[0],b[1],b[2])}return a}(a);return g}function e(a,b){function c(a,b){var d=[],e,f;if("Clockwise"==b)for(e=0;e<a.VertexCount();e++)f=a.GetVertex(e),d.push(new JSM.Coord(f.x,
0,-f.y));else for(e=a.VertexCount()-1;0<=e;e--)f=a.GetVertex(e),d.push(new JSM.Coord(f.x,0,-f.y));return d}function d(a,b,c){a.push(null);var e;if("CounterClockwise"==c)for(c=0;c<b.VertexCount();c++)e=b.GetVertex(c),a.push(new JSM.Coord(e.x,0,-e.y));else for(c=b.VertexCount()-1;0<=c;c--)e=b.GetVertex(c),a.push(new JSM.Coord(e.x,0,-e.y))}var e=[],f=new JSM.Vector(0,-1,0),g,h;h=a.ContourCount();if(1==h)h=JSM.PolygonOrientation2D(a.GetContour(0)),g=c(a.GetContour(0),h),g=JSM.GeneratePrism(g,f,b,!0),
e.push(g);else if(1<h){h=JSM.PolygonOrientation2D(a.GetContour(0));var k=c(a.GetContour(0),h),l=!1,w;for(w=1;w<a.ContourCount();w++)g=JSM.PolygonOrientation2D(a.GetContour(w)),g==h?(g=c(a.GetContour(w),h),g=JSM.GeneratePrism(g,f,b,!0),e.push(g)):(d(k,a.GetContour(w),g),l=!0);g=l?JSM.GeneratePrismWithHole(k,f,b,!0):JSM.GeneratePrism(k,f,b,!0);e.push(g)}f=new JSM.Material(a.color,a.color);return[e,f]}var f=new JSM.Model,g=new JSM.Materials;c=function(a,b){function c(a,b,d){a=a.getElementsByTagName(b);
for(b=0;b<a.length;b++)d.push(a[b])}var e=[],f=[];c(a,"path",f);c(a,"rect",f);c(a,"polygon",f);var g=b;a.hasAttribute("segmentlength")&&(g=parseFloat(a.getAttribute("segmentlength")));var h,k;for(h=0;h<f.length;h++)k=d(f[h],g),e.push(k);return e}(a,c);a.hasAttribute("modelheight")&&(b=parseFloat(a.getAttribute("modelheight")));var h,k,l;for(a=0;a<c.length;a++){h=e(c[a],b);k=h[0];h=h[1];g.AddMaterial(h);for(h=0;h<k.length;h++)l=k[h],l.SetPolygonsMaterialIndex(g.Count()-1),f.AddBody(l)}return[f,g]};
JSM.BSPPolygonUserData=function(){this.material=this.id=null};JSM.AddBodyToBSPTree=function(a,b,c){var d,e,f;for(d=0;d<a.PolygonCount();d++){f=new JSM.BSPPolygonUserData(c,0);f.id=c;e=a;var g=f,h=e.GetPolygon(d);g.material=h.GetMaterialIndex();for(var g=new JSM.Polygon,k=void 0,l=void 0,k=0;k<h.VertexIndexCount();k++)l=e.GetVertexPosition(h.GetVertexIndex(k)),g.AddVertex(l.x,l.y,l.z);e=g;b.AddPolygon(e,f)}};
JSM.BooleanOperation=function(a,b,c){function d(a,b,c){function d(a){b.AddVertex(new JSM.BodyVertex(a));return b.VertexCount()-1}var e=new JSM.BodyPolygon,f;if(c)for(c=a.VertexCount()-1;0<=c;c--)f=d(a.GetVertex(c)),e.AddVertexIndex(f);else for(c=0;c<a.VertexCount();c++)f=d(a.GetVertex(c)),e.AddVertexIndex(f);void 0!==a.userData&&e.SetMaterialIndex(a.userData.material);b.AddPolygon(e)}function e(a,b,c){var e;for(e=0;e<a.length;e++)d(a[e],b,c)}function f(a,b,c,d,e,f){function g(a,b){var c;for(c=0;c<
a.length;c++)a[c].userData=b}var h,k;for(h=0;h<a.length;h++)k=a[h],JSM.ClipPolygonWithBSPTree(k.polygon,b,c,d,e,f),g(c,k.userData),g(d,k.userData),g(e,k.userData),g(f,k.userData)}var g=new JSM.BSPTree,h=new JSM.BSPTree;JSM.AddBodyToBSPTree(b,g,"a");JSM.AddBodyToBSPTree(c,h,"b");b=new JSM.Body;c=[];var k=[],l=[],m=[];f(g.GetNodes(),h,c,k,l,m);var n=[],p=[],r=[];f(h.GetNodes(),g,n,p,r,[]);"Union"==a?(e(c,b,!1),e(l,b,!1),e(m,b,!1),e(n,b,!1),e(r,b,!1)):"Difference"==a?(e(c,b,!1),e(l,b,!1),e(p,b,!0)):
"Intersection"==a&&(e(k,b,!1),e(m,b,!1),e(p,b,!1));return b};JSM.Mouse=function(){this.down=!1;this.button=0;this.alt=this.ctrl=this.shift=!1;this.diffY=this.diffX=this.currY=this.currX=this.prevY=this.prevX=0};
JSM.Mouse.prototype={Down:function(a,b){var c=a;void 0===c&&(c=window.event);this.down=!0;this.button=a.which;this.shift=a.shiftKey;this.ctrl=a.ctrlKey;this.alt=a.altKey;this.SetCurrent(c,b);this.prevX=this.currX;this.prevY=this.currY},Move:function(a,b){var c=a;void 0===c&&(c=window.event);this.shift=a.shiftKey;this.ctrl=a.ctrlKey;this.alt=a.altKey;this.SetCurrent(c,b);this.diffX=this.currX-this.prevX;this.diffY=this.currY-this.prevY;this.prevX=this.currX;this.prevY=this.currY},Up:function(a,b){var c=
a;void 0===c&&(c=window.event);this.down=!1;this.SetCurrent(c,b)},Out:function(a,b){var c=a;void 0===c&&(c=window.event);this.down=!1;this.SetCurrent(c,b)},SetCurrent:function(a,b){this.currX=a.clientX;this.currY=a.clientY;void 0!==b&&(this.currX-=b.offsetLeft,this.currY-=b.offsetTop)}};JSM.Touch=function(){this.down=!1;this.diffY=this.diffX=this.currY=this.currX=this.prevY=this.prevX=0};
JSM.Touch.prototype={Start:function(a,b){if(0!==a.touches.length){var c=a.touches[0];this.down=!0;this.SetCurrent(c,b);this.prevX=this.currX;this.prevY=this.currY}},Move:function(a,b){0!==a.touches.length&&(this.SetCurrent(a.touches[0],b),this.diffX=this.currX-this.prevX,this.diffY=this.currY-this.prevY,this.prevX=this.currX,this.prevY=this.currY)},End:function(a,b){if(0!==a.touches.length){var c=a.touches[0];this.down=!1;this.SetCurrent(c,b)}},SetCurrent:function(a,b){this.currX=a.pageX;this.currY=
a.pageY;void 0!==b&&(this.currX=a.pageX-b.offsetLeft,this.currY=a.pageY-b.offsetTop)}};JSM.ConversionData=function(a,b,c){this.textureLoadedCallback=JSM.ValueOrDefault(a,null);this.hasConvexPolygons=JSM.ValueOrDefault(b,!1);this.doubleSided=JSM.ValueOrDefault(c,!0)};
JSM.ConvertBodyToThreeMeshesSpecial=function(a,b,c,d,e){function f(f,g){function h(b,f,g){function k(a,b,c,d,e,f,g,h,l,m){var n=a.vertices.length;a.vertices.push(new THREE.Vector3(b.x,b.y,b.z));a.vertices.push(new THREE.Vector3(c.x,c.y,c.z));a.vertices.push(new THREE.Vector3(d.x,d.y,d.z));b=new THREE.Face3(n+0,n+1,n+2);a.faces.push(b);void 0!==e&&(void 0!==f&&void 0!==g)&&(b=[],b.push(new THREE.Vector3(e.x,e.y,e.z)),b.push(new THREE.Vector3(f.x,f.y,f.z)),b.push(new THREE.Vector3(g.x,g.y,g.z)),a.faces[a.faces.length-
1].vertexNormals=b);void 0!==h&&(void 0!==l&&void 0!==m)&&(e=[],e.push(new THREE.Vector2(h.x,-h.y)),e.push(new THREE.Vector2(l.x,-l.y)),e.push(new THREE.Vector2(m.x,-m.y)),a.faceVertexUvs[0].push(e))}var n=a.GetPolygon(f),p=n.VertexIndexCount();if(!(3>p)){var q,r,s,t,v,u,w,z,K;if(3===p)q=a.GetVertex(n.GetVertexIndex(0)).position,r=a.GetVertex(n.GetVertexIndex(1)).position,s=a.GetVertex(n.GetVertexIndex(2)).position,u=v=t=void 0,l&&(t=c[f][0],v=c[f][1],u=c[f][2]),K=z=w=void 0,g&&m&&(w=d[f][0],z=d[f][1],
K=d[f][2]),k(b,q,r,s,t,v,u,w,z,K);else{var A;A=!1;e.hasConvexPolygons||(A=!0);if(A){q=new JSM.Polygon;for(A=0;A<p;A++)r=a.GetVertex(n.vertices[A]),q.AddVertex(r.position.x,r.position.y,r.position.z);A=JSM.CalculateBodyPolygonNormal(a,f);var p=JSM.PolygonTriangulate(q,A),G;for(A=0;A<p.length;A++)G=p[A],q=a.GetVertex(n.GetVertexIndex(G[0])).position,r=a.GetVertex(n.GetVertexIndex(G[1])).position,s=a.GetVertex(n.GetVertexIndex(G[2])).position,u=v=t=void 0,l&&(t=c[f][G[0]],v=c[f][G[1]],u=c[f][G[2]]),
K=z=w=void 0,g&&m&&(w=d[f][G[0]],z=d[f][G[1]],K=d[f][G[2]]),k(b,q,r,s,t,v,u,w,z,K)}else for(A=0;A<p-2;A++)q=a.GetVertex(n.GetVertexIndex(0)).position,r=a.GetVertex(n.GetVertexIndex((A+1)%p)).position,s=a.GetVertex(n.GetVertexIndex((A+2)%p)).position,u=v=t=void 0,l&&(t=c[f][0],v=c[f][(A+1)%p],u=c[f][(A+2)%p]),K=z=w=void 0,g&&m&&(w=d[f][0],z=d[f][(A+1)%p],K=d[f][(A+2)%p]),k(b,q,r,s,t,v,u,w,z,K)}}}var k=new THREE.Geometry,n=b.GetMaterial(g),t=null!==n.texture,z=1!==n.opacity,w;for(w=0;w<f.length;w++)h(k,
f[w],t);w=null;w=new THREE.MeshLambertMaterial({ambient:n.ambient,color:n.diffuse});e.doubleSided&&(w.side=THREE.DoubleSide);z&&(w.opacity=n.opacity,w.transparent=!0);t&&(n=THREE.ImageUtils.loadTexture(n.texture,new THREE.UVMapping,function(a){null!==e.textureLoadedCallback&&e.textureLoadedCallback()}),n.wrapS=THREE.RepeatWrapping,n.wrapT=THREE.RepeatWrapping,w.map=n);k.computeCentroids();k.computeFaceNormals();k=new THREE.Mesh(k,w);p.push(k)}var g,h=[],k=[],l=void 0!==c&&null!==c,m=void 0!==d&&null!==
d;if(void 0===b||null===b)b=new JSM.Materials;for(g=0;g<b.Count();g++)h[g]=[];var n;for(g=0;g<a.PolygonCount();g++)n=a.GetPolygon(g),n.HasMaterialIndex()?(n=n.GetMaterialIndex(),h[n].push(g)):k.push(g);var p=[];for(g=0;g<h.length;g++)n=h[g],0!==n.length&&f(n,g);0!==k.length&&f(k,-1);return p};
JSM.ConvertBodyToThreeMeshes=function(a,b,c){void 0===c&&(c=new JSM.ConversionData);var d=JSM.CalculateBodyVertexNormals(a),e,f;f=!1;if(void 0!==b&&null!==b){a.GetTextureProjectionType();a.GetTextureProjectionCoords();for(e=0;e<b.Count();e++)if(null!==b.GetMaterial(e).texture){f=!0;break}}var g,h;if(f){g=JSM.CalculateBodyTextureCoords(a);for(e=0;e<g.length;e++)if(f=a.GetPolygon(e),f.HasMaterialIndex()){h=b.GetMaterial(f.GetMaterialIndex());for(f=0;f<g[e].length;f++)g[e][f].x/=h.textureWidth,g[e][f].y/=
-h.textureHeight}}return JSM.ConvertBodyToThreeMeshesSpecial(a,b,d,g,c)};JSM.ConvertModelToThreeMeshes=function(a,b,c){var d=[],e=[],f,g;for(f=0;f<a.BodyCount();f++){e=a.GetBody(f);e=JSM.ConvertBodyToThreeMeshes(e,b,c);for(g=0;g<e.length;g++)d.push(e[g])}return d};
JSM.ConvertJSONDataToThreeMeshes=function(a,b){function c(a){function c(a){var h=a.parameters,k=e[a.material];a=k.texture;var p=k.offset,u=k.scale,t=new THREE.Color,z=new THREE.Color,w=new THREE.Color;t.setRGB(k.ambient[0],k.ambient[1],k.ambient[2]);z.setRGB(k.diffuse[0],k.diffuse[1],k.diffuse[2]);w.setRGB(k.specular[0],k.specular[1],k.specular[2]);void 0!==a&&(t.setRGB(1,1,1),z.setRGB(1,1,1),w.setRGB(1,1,1),void 0===p&&(p=[0,0]),void 0===u&&(u=[1,1]));t=new THREE.MeshLambertMaterial({ambient:z.getHex(),
color:z.getHex(),side:THREE.DoubleSide});1!==k.opacity&&(t.opacity=k.opacity,t.transparent=!0);void 0!==a&&(k=THREE.ImageUtils.loadTexture(a,new THREE.UVMapping,function(a){void 0!==b&&b()}),k.wrapS=THREE.RepeatWrapping,k.wrapT=THREE.RepeatWrapping,t.map=k);var k=new THREE.Geometry,C,x,D,y,H,E,F,I,L,B;for(B=0;B<h.length;B+=9)C=3*h[B+0],x=3*h[B+1],D=3*h[B+2],y=3*h[B+3],H=3*h[B+4],E=3*h[B+5],z=2*h[B+6],w=2*h[B+7],F=2*h[B+8],I=k.vertices.length,L=k.faces.length,k.vertices.push(new THREE.Vector3(f[C+
0],f[C+1],f[C+2])),k.vertices.push(new THREE.Vector3(f[x+0],f[x+1],f[x+2])),k.vertices.push(new THREE.Vector3(f[D+0],f[D+1],f[D+2])),k.faces.push(new THREE.Face3(I+0,I+1,I+2)),C=[],C.push(new THREE.Vector3(g[y+0],g[y+1],g[y+2])),C.push(new THREE.Vector3(g[H+0],g[H+1],g[H+2])),C.push(new THREE.Vector3(g[E+0],g[E+1],g[E+2])),k.faces[L].vertexNormals=C,void 0!==a&&(y=[],y.push(new THREE.Vector2(p[0]+n[z+0]*u[0],p[1]+n[z+1]*u[1])),y.push(new THREE.Vector2(p[0]+n[w+0]*u[0],p[1]+n[w+1]*u[1])),y.push(new THREE.Vector2(p[0]+
n[F+0]*u[0],p[1]+n[F+1]*u[1])),k.faceVertexUvs[0].push(y));h=new THREE.Mesh(k,t);d.push(h)}var f=a.vertices;if(void 0===f)return d;var g=a.normals;if(void 0===g)return d;var n=a.uvs;if(void 0===n)return d;a=a.triangles;var p;for(p=0;p<a.length;p++)c(a[p])}var d=[],e=a.materials;if(void 0===e)return d;var f=a.meshes;if(void 0===f)return d;var g;for(g=0;g<f.length;g++)c(f[g]);return d};JSM.JSONFileConverter=function(){this.onReady=this.textureLoadedCallback=null};
JSM.JSONFileConverter.prototype={Convert:function(a,b){var c=this,d=new XMLHttpRequest;d.overrideMimeType("application/json");d.open("GET",a,!0);d.onreadystatechange=function(){4==d.readyState&&c.OnReady(d.responseText)};this.textureLoadedCallback=b;d.send(null)},OnReady:function(a){null!==this.onReady&&(a=JSON.parse(a),a=JSM.ConvertJSONDataToThreeMeshes(a,this.textureLoadedCallback),this.onReady(a))}};
JSM.Viewer=function(){this.settings=this.touch=this.mouse=this.cameraMove=this.directionalLight=this.ambientLight=this.renderer=this.camera=this.scene=this.canvas=null};
JSM.Viewer.prototype={Start:function(a,b){if(!this.IsWebGLEnabled()||!this.InitSettings(b)||!this.InitThree(a)||!this.InitCamera()||!this.InitLights()||!this.InitEvents())return!1;this.DrawIfNeeded();this.settings.autoUpdate&&this.AutoUpdate();return!0},IsWebGLEnabled:function(){return!window.WebGLRenderingContext||!document.createElement("canvas").getContext("experimental-webgl")?!1:!0},InitSettings:function(a){this.settings={cameraEyePosition:[1,1,1],cameraCenterPosition:[0,0,0],cameraUpVector:[0,
0,1],cameraFixUp:!0,cameraDisableOrbit:!1,cameraDisableZoom:!1,fieldOfView:45,nearClippingPlane:0.1,farClippingPlane:1E3,lightAmbientColor:[0.5,0.5,0.5],lightDiffuseColor:[0.5,0.5,0.5],autoUpdate:!0};void 0!==a&&(void 0!==a.cameraEyePosition&&(this.settings.cameraEyePosition=a.cameraEyePosition),void 0!==a.cameraCenterPosition&&(this.settings.cameraCenterPosition=a.cameraCenterPosition),void 0!==a.cameraUpVector&&(this.settings.cameraUpVector=a.cameraUpVector),void 0!==a.cameraFixUp&&(this.settings.cameraFixUp=
a.cameraFixUp),void 0!==a.cameraDisableOrbit&&(this.settings.cameraDisableOrbit=a.cameraDisableOrbit),void 0!==a.cameraDisableZoom&&(this.settings.cameraDisableZoom=a.cameraDisableZoom),void 0!==a.fieldOfView&&(this.settings.fieldOfView=a.fieldOfView),void 0!==a.nearClippingPlane&&(this.settings.nearClippingPlane=a.nearClippingPlane),void 0!==a.farClippingPlane&&(this.settings.farClippingPlane=a.farClippingPlane),void 0!==a.lightAmbientColor&&(this.settings.lightAmbientColor=a.lightAmbientColor),
void 0!==a.lightDiffuseColor&&(this.settings.lightDiffuseColor=a.lightDiffuseColor),void 0!==a.autoUpdate&&(this.settings.autoUpdate=a.autoUpdate));return!0},InitThree:function(a){this.canvas=document.getElementById(a);if(!this.canvas||!this.canvas.getContext)return!1;this.scene=new THREE.Scene;if(!this.scene)return!1;this.renderer=new THREE.WebGLRenderer({canvas:this.canvas,antialias:!0});if(!this.renderer)return!1;this.renderer.setSize(this.canvas.width,this.canvas.height);return!0},InitCamera:function(a){this.mouse=
new JSM.Mouse;if(!this.mouse)return!1;this.touch=new JSM.Touch;if(!this.touch)return!1;this.cameraMove=new JSM.Camera(this.settings.cameraEyePosition,this.settings.cameraCenterPosition,this.settings.cameraUpVector);this.cameraMove.SetFixUp(this.settings.cameraFixUp);this.cameraMove.SetOrbitEnabled(!this.settings.cameraDisableOrbit);this.cameraMove.SetZoomEnabled(!this.settings.cameraDisableZoom);if(!this.cameraMove)return!1;this.camera=new THREE.PerspectiveCamera(this.settings.fieldOfView,this.canvas.width/
this.canvas.height,this.settings.nearClippingPlane,this.settings.farClippingPlane);if(!this.camera)return!1;this.scene.add(this.camera);return!0},InitLights:function(){var a=new THREE.Color,b=new THREE.Color;a.setRGB(this.settings.lightAmbientColor[0],this.settings.lightAmbientColor[1],this.settings.lightAmbientColor[2]);b.setRGB(this.settings.lightDiffuseColor[0],this.settings.lightDiffuseColor[1],this.settings.lightDiffuseColor[2]);this.ambientLight=new THREE.AmbientLight(a.getHex());if(!this.ambientLight)return!1;
this.scene.add(this.ambientLight);this.directionalLight=new THREE.DirectionalLight(b.getHex());if(!this.directionalLight)return!1;this.directionalLight.position=(new THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center);this.scene.add(this.directionalLight);return!0},InitEvents:function(){var a=this;document.addEventListener&&(document.addEventListener("mousemove",function(b){a.OnMouseMove(b)}),document.addEventListener("mouseup",function(b){a.OnMouseUp(b)}));this.canvas.addEventListener&&
(this.canvas.addEventListener("mousedown",function(b){a.OnMouseDown(b)},!1),this.canvas.addEventListener("DOMMouseScroll",function(b){a.OnMouseWheel(b)},!1),this.canvas.addEventListener("mousewheel",function(b){a.OnMouseWheel(b)},!1),this.canvas.addEventListener("touchstart",function(b){a.OnTouchStart(b)},!1),this.canvas.addEventListener("touchmove",function(b){a.OnTouchMove(b)},!1),this.canvas.addEventListener("touchend",function(b){a.OnTouchEnd(b)},!1));return!0},AddMesh:function(a){this.scene.add(a);
this.DrawIfNeeded()},AddMeshes:function(a){var b;for(b=0;b<a.length;b++)this.scene.add(a[b]);this.DrawIfNeeded()},MeshCount:function(){var a=0;this.scene.traverse(function(b){b instanceof THREE.Mesh&&(a+=1)});return a},VertexCount:function(){var a=0;this.scene.traverse(function(b){b instanceof THREE.Mesh&&(a+=b.geometry.vertices.length)});return a},FaceCount:function(){var a=0;this.scene.traverse(function(b){b instanceof THREE.Mesh&&(a+=b.geometry.faces.length)});return a},GetMesh:function(a){var b=
null,c=0,d;for(d=0;d<this.scene.children.length;d++)if(b=this.scene.children[d],b instanceof THREE.Mesh){if(c==a)return b;c+=1}return null},RemoveMesh:function(a){this.scene.remove(a);this.DrawIfNeeded()},RemoveMeshes:function(){var a,b;for(b=0;b<this.scene.children.length;b++)a=this.scene.children[b],a instanceof THREE.Mesh&&(this.scene.remove(a),b--);this.DrawIfNeeded()},RemoveLastMesh:function(){var a=null;this.scene.traverse(function(b){b instanceof THREE.Mesh&&(a=b)});null!==a&&this.scene.remove(a);
this.DrawIfNeeded()},SetCamera:function(a,b,c){this.cameraMove.Set(a,b,c);this.directionalLight.position=(new THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center);this.DrawIfNeeded()},EnableCameraFixUp:function(a){this.cameraMove.SetFixUp(a)},EnableCameraOrbit:function(a){this.cameraMove.SetOrbitEnabled(a)},EnableCameraZoom:function(a){this.cameraMove.SetZoomEnabled(a)},Resize:function(){this.camera.aspect=this.canvas.width/this.canvas.height;this.camera.updateProjectionMatrix();
this.renderer.setSize(this.canvas.width,this.canvas.height);this.DrawIfNeeded()},FitInWindow:function(){var a=this.GetCenter(),b=this.GetBoundingSphereRadius();this.FitInWindowWithCenterAndRadius(a,b)},FitInWindowWithCenterAndRadius:function(a,b){var c=JSM.CoordSub(this.cameraMove.center,a);this.cameraMove.origo=a;this.cameraMove.center=a;this.cameraMove.eye=JSM.CoordSub(this.cameraMove.eye,c);var c=JSM.VectorNormalize(JSM.CoordSub(this.cameraMove.eye,this.cameraMove.center)),d=this.settings.fieldOfView/
2;this.canvas.width<this.canvas.height&&(d=d*this.canvas.width/this.canvas.height);d=b/Math.sin(d*JSM.DegRad);this.cameraMove.eye=JSM.CoordOffset(this.cameraMove.center,c,d);this.directionalLight.position=(new THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center);this.DrawIfNeeded()},GetCenter:function(){var a=this.GetBoundingBox();return JSM.MidCoord(a[0],a[1])},GetBoundingBox:function(){var a=new JSM.Coord(JSM.Inf,JSM.Inf,JSM.Inf),b=new JSM.Coord(-JSM.Inf,-JSM.Inf,-JSM.Inf),c,d;
this.scene.traverse(function(e){if(e instanceof THREE.Mesh){c=e.geometry;var f;for(f=0;f<c.vertices.length;f++)d=c.vertices[f].clone(),d.add(e.position),a.x=JSM.Minimum(a.x,d.x),a.y=JSM.Minimum(a.y,d.y),a.z=JSM.Minimum(a.z,d.z),b.x=JSM.Maximum(b.x,d.x),b.y=JSM.Maximum(b.y,d.y),b.z=JSM.Maximum(b.z,d.z)}});return[a,b]},GetBoundingSphereRadius:function(){var a=this.GetCenter(),b=0,c,d,e;this.scene.traverse(function(f){if(f instanceof THREE.Mesh){c=f.geometry;var g;for(g=0;g<c.vertices.length;g++)d=c.vertices[g].clone(),
d.add(f.position),e=JSM.CoordDistance(a,new JSM.Coord(d.x,d.y,d.z)),JSM.IsGreater(e,b)&&(b=e)}});return b},GetObjectsUnderPosition:function(a,b){var c=2*(a/this.canvas.width)-1,d=2*-(b/this.canvas.height)+1,e=new THREE.Projector,f=this.camera.position,c=new THREE.Vector3(c,d,0.5);e.unprojectVector(c,this.camera);c.sub(f);c.normalize();return(new THREE.Raycaster(f,c)).intersectObjects(this.scene.children)},GetObjectsUnderMouse:function(){return this.GetObjectsUnderPosition(this.mouse.currX,this.mouse.currY)},
GetObjectsUnderTouch:function(){return this.GetObjectsUnderPosition(this.touch.currX,this.touch.currY)},Draw:function(){this.camera.position=new THREE.Vector3(this.cameraMove.eye.x,this.cameraMove.eye.y,this.cameraMove.eye.z);this.camera.up=new THREE.Vector3(this.cameraMove.up.x,this.cameraMove.up.y,this.cameraMove.up.z);this.camera.lookAt(new THREE.Vector3(this.cameraMove.center.x,this.cameraMove.center.y,this.cameraMove.center.z));this.renderer.render(this.scene,this.camera);return!0},DrawIfNeeded:function(){this.settings.autoUpdate||
this.Draw()},AutoUpdate:function(){this.Draw();requestAnimationFrame(this.AutoUpdate.bind(this))},OnMouseDown:function(a){a.preventDefault();this.mouse.Down(a,this.canvas)},OnMouseMove:function(a){a.preventDefault();this.mouse.Move(a,this.canvas);this.mouse.down&&!this.settings.cameraDisableOrbit&&(this.cameraMove.Orbit(-0.5*this.mouse.diffX,-0.5*this.mouse.diffY),this.directionalLight.position=(new THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center),this.DrawIfNeeded())},OnMouseUp:function(a){a.preventDefault();
this.mouse.Up(a,this.canvas)},OnMouseOut:function(a){a.preventDefault();this.mouse.Out(a,this.canvas)},OnMouseWheel:function(a){a.preventDefault();null===a&&(a=window.event);if(!this.settings.cameraDisableZoom){var b=0;a.detail?b=-a.detail:a.wheelDelta&&(b=a.wheelDelta/40);this.cameraMove.Zoom(0<b);this.directionalLight.position=(new THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center);this.DrawIfNeeded()}},OnTouchStart:function(a){a.preventDefault();this.touch.Start(a,this.canvas)},
OnTouchMove:function(a){a.preventDefault();this.touch.Move(a,this.canvas);this.touch.down&&!this.settings.cameraDisableOrbit&&(this.cameraMove.Orbit(-0.5*this.touch.diffX,-0.5*this.touch.diffY),this.directionalLight.position=(new THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center),this.DrawIfNeeded())},OnTouchEnd:function(a){a.preventDefault();this.touch.End(a,this.canvas)}};
JSM.SoftwareViewer=function(){this.touch=this.mouse=this.drawMode=this.drawer=this.bodies=this.settings=this.cameraMove=this.canvas=null};
JSM.SoftwareViewer.prototype={Start:function(a,b){return!this.InitCanvas(a)||!this.InitSettings(b)||!this.InitCamera()||!this.InitEvents()?!1:!0},InitCanvas:function(a){this.bodies=[];this.canvas=document.getElementById(a);if(!this.canvas)return!1;this.canvas instanceof HTMLCanvasElement?this.drawer=new JSM.CanvasDrawer(this.canvas):this.canvas instanceof SVGSVGElement&&(this.drawer=new JSM.SVGDrawer(this.canvas));return!this.drawer?!1:!0},InitSettings:function(a){this.settings={cameraEyePosition:[1,
1,1],cameraCenterPosition:[0,0,0],cameraUpVector:[0,0,1],fieldOfView:45,nearClippingPlane:0.1,farClippingPlane:1E3,drawMode:"Wireframe"};void 0!==a&&(void 0!==a.cameraEyePosition&&(this.settings.cameraEyePosition=a.cameraEyePosition),void 0!==a.cameraCenterPosition&&(this.settings.cameraCenterPosition=a.cameraCenterPosition),void 0!==a.cameraUpVector&&(this.settings.cameraUpVector=a.cameraUpVector),void 0!==a.fieldOfView&&(this.settings.fieldOfView=a.fieldOfView),void 0!==a.nearClippingPlane&&(this.settings.nearClippingPlane=
a.nearClippingPlane),void 0!==a.farClippingPlane&&(this.settings.farClippingPlane=a.farClippingPlane),void 0!==a.drawMode&&(this.settings.drawMode=a.drawMode));return!0},InitCamera:function(a){this.cameraMove=new JSM.Camera(this.settings.cameraEyePosition,this.settings.cameraCenterPosition,this.settings.cameraUpVector);return!this.cameraMove?!1:!0},InitEvents:function(){this.mouse=new JSM.Mouse;if(!this.mouse)return!1;this.touch=new JSM.Touch;if(!this.touch)return!1;var a=this;document.addEventListener&&
(document.addEventListener("mousemove",function(b){a.OnMouseMove(b)}),document.addEventListener("mouseup",function(b){a.OnMouseUp(b)}));this.canvas.addEventListener&&(this.canvas.addEventListener("mousedown",function(b){a.OnMouseDown(b)},!1),this.canvas.addEventListener("DOMMouseScroll",function(b){a.OnMouseWheel(b)},!1),this.canvas.addEventListener("mousewheel",function(b){a.OnMouseWheel(b)},!1),this.canvas.addEventListener("touchstart",function(b){a.OnTouchStart(b)},!1),this.canvas.addEventListener("touchmove",
function(b){a.OnTouchMove(b)},!1),this.canvas.addEventListener("touchend",function(b){a.OnTouchEnd(b)},!1));return!0},AddBody:function(a,b){this.bodies.push([a,b])},RemoveBodies:function(){this.bodies=[]},Resize:function(){this.Draw()},Draw:function(){var a,b,c=new JSM.DrawSettings(this.cameraMove,this.settings.fieldOfView,this.settings.nearClippingPlane,this.settings.farClippingPlane,this.settings.drawMode,!1);this.drawer.Clear();for(a=0;a<this.bodies.length;a++)b=this.bodies[a],JSM.DrawProjectedBody(b[0],
b[1],c,this.drawer);return!0},OnMouseDown:function(a){this.mouse.Down(a)},OnMouseMove:function(a){this.mouse.Move(a);this.mouse.down&&(this.cameraMove.Orbit(-0.5*this.mouse.diffX,-0.5*this.mouse.diffY),this.Draw())},OnMouseUp:function(a){this.mouse.Up(a)},OnMouseOut:function(a){this.mouse.Out(a)},OnMouseWheel:function(a){null===a&&(a=window.event);var b=0;a.detail?b=-a.detail:a.wheelDelta&&(b=a.wheelDelta/40);this.cameraMove.Zoom(0<b);this.Draw()},OnTouchStart:function(a){this.touch.Start(a)},OnTouchMove:function(a){this.touch.Move(a);
this.touch.down&&(this.cameraMove.Orbit(-0.5*this.touch.diffX,-0.5*this.touch.diffY),this.Draw())},OnTouchEnd:function(a){this.touch.End(a)}};
